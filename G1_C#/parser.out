Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    AND
    BYTE
    CLASS
    COMILLA_DOBLE
    COMILLA_SIMPLE
    CONST
    COR_DER
    COR_IZQ
    C_IDENT_TEXTUAL
    DEFAULT
    ELSE
    FINALLY
    GLOBAL
    IN
    IR
    LAMBDA
    LEFTSHIFT_EQUAL
    LET
    NEGACION
    NOR
    NULL
    NULL_EQUAL
    NULL_VAL
    OBJECT
    ON
    OP_TERNARIO
    OR
    ORDERBY
    RETURN
    RIGHTSHIFT_EQUAL
    SHIFT_MAYOR
    SHIFT_MENOR
    SIMPLE_AND
    SIMPLE_OR
    STRUCT
    THIS
    TO_UPPER
    TYPEOF
    VAR
    WHEN
    WHERE

Grammar

Rule 0     S' -> body
Rule 1     body -> asignacion END_OF_LINE
Rule 2     body -> comparacion
Rule 3     body -> estructura_control
Rule 4     body -> estructura_datos
Rule 5     body -> expresion END_OF_LINE
Rule 6     body -> salida_entrada END_OF_LINE
Rule 7     body -> funcion
Rule 8     body -> declaracion END_OF_LINE
Rule 9     body -> empty
Rule 10    body -> funciones_estructura_datos END_OF_LINE
Rule 11    valor -> CHAR
Rule 12    valor -> numero
Rule 13    valor -> BOOL
Rule 14    valor -> STRING
Rule 15    valor -> IDENTIFICADOR
Rule 16    numero -> FLOAT
Rule 17    numero -> DOUBLE
Rule 18    numero -> INT
Rule 19    ftipo -> valor_tipo
Rule 20    ftipo -> VOID
Rule 21    valor_tipo -> CHAR_TYPE
Rule 22    valor_tipo -> FLOAT_TYPE
Rule 23    valor_tipo -> DOUBLE_TYPE
Rule 24    valor_tipo -> INT_TYPE
Rule 25    valor_tipo -> BOOL_TYPE
Rule 26    valor_tipo -> STRING_TYPE
Rule 27    valor_tipo_inicializador -> FLOAT_TYPE
Rule 28    valor_tipo_inicializador -> DOUBLE_TYPE
Rule 29    valor_tipo_inicializador -> STRING_TYPE
Rule 30    valor_tipo_inicializador -> INT_TYPE
Rule 31    valor_tipo_inicializador -> BOOL_TYPE
Rule 32    valor_tipo_inicializador -> CHAR_TYPE
Rule 33    valor_tipo_inicializador -> IDENTIFICADOR
Rule 34    modificador_acceso -> PRIVATE
Rule 35    modificador_acceso -> PROTECTED
Rule 36    modificador_acceso -> PUBLIC
Rule 37    operador_realacional -> IGUAL_IGUAL
Rule 38    operador_realacional -> NO_IGUAL
Rule 39    operador_realacional -> MENOR_QUE
Rule 40    operador_realacional -> MENOR_O_IGUAL_QUE
Rule 41    operador_realacional -> MAYOR_QUE
Rule 42    operador_realacional -> MAYOR_O_IGUAL_QUE
Rule 43    operador_aritmentico -> SUMA
Rule 44    operador_aritmentico -> RESTA
Rule 45    operador_aritmentico -> MULTIPLICACION
Rule 46    operador_aritmentico -> DIVISION
Rule 47    operador_aritmentico -> MODULO
Rule 48    operador_condicional -> IGUAL_IGUAL
Rule 49    operador_condicional -> NO_IGUAL
Rule 50    operador_condicional -> MENOR_QUE
Rule 51    operador_condicional -> MENOR_O_IGUAL_QUE
Rule 52    operador_condicional -> MAYOR_QUE
Rule 53    operador_condicional -> MAYOR_O_IGUAL_QUE
Rule 54    operacion_string -> STRING SUMA STRING
Rule 55    operacion_string -> STRING SUMA IDENTIFICADOR
Rule 56    operacion_string -> IDENTIFICADOR SUMA STRING
Rule 57    operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR
Rule 58    empty -> END_OF_LINE
Rule 59    asignacion -> asignacionSimple
Rule 60    asignacion -> asignacionCompuesta
Rule 61    asignacionSimple -> IDENTIFICADOR IGUAL valor
Rule 62    asignacionSimple -> IDENTIFICADOR IGUAL expresion
Rule 63    asignacionSimple -> IDENTIFICADOR IGUAL salida_entrada
Rule 64    asignacionSimple -> IDENTIFICADOR IGUAL asignacionEstructuraD
Rule 65    asignacionEstructuraD -> asignacionPila
Rule 66    asignacionEstructuraD -> asignacionQueue
Rule 67    asignacionEstructuraD -> asignacionList
Rule 68    asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER
Rule 69    asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER
Rule 70    asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER
Rule 71    asignacionCompuesta -> asignacionCompuesta_Logic
Rule 72    asignacionCompuesta -> asignacionCompuesta_Number
Rule 73    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL
Rule 74    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
Rule 75    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
Rule 76    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero
Rule 77    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
Rule 78    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
Rule 79    operadoresCompuestosNumber -> AUMENTADO
Rule 80    operadoresCompuestosNumber -> DECREMENTADO
Rule 81    operadoresCompuestosNumber -> MULTIPLICADO_POR
Rule 82    operadoresCompuestosNumber -> DIVIDIDO_POR
Rule 83    operadoresCompuestosNumber -> MODULO_DE
Rule 84    operadoresCompuestosLogic -> AND_EQUAL
Rule 85    operadoresCompuestosLogic -> OR_EQUAL
Rule 86    operadoresCompuestosLogic -> EXC_OREQUAL
Rule 87    declaracion -> valor_tipo IDENTIFICADOR
Rule 88    declaracion -> declaracionEstructuraD
Rule 89    declaracion -> declaracionAsignacion
Rule 90    declaracionAsignacion -> valor_tipo asignacionSimple
Rule 91    declaracionEstructuraD -> declaracionList
Rule 92    declaracionEstructuraD -> declaracionQueue
Rule 93    declaracionEstructuraD -> declaracionPila
Rule 94    declaracionList -> LIST tipoLista IDENTIFICADOR
Rule 95    declaracionQueue -> QUEUE tipoLista IDENTIFICADOR
Rule 96    declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
Rule 97    comparacion -> valor operador_realacional valor
Rule 98    estructura_control -> while
Rule 99    estructura_control -> switch_case
Rule 100   estructura_control -> for
Rule 101   while -> while_normal
Rule 102   while -> while_do
Rule 103   while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
Rule 104   while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
Rule 105   body_while -> asignacion END_OF_LINE
Rule 106   body_while -> declaracion END_OF_LINE
Rule 107   body_while -> salida_entrada END_OF_LINE
Rule 108   body_while -> BREAK END_OF_LINE
Rule 109   body_while -> CONTINUE END_OF_LINE
Rule 110   body_while -> asignacion END_OF_LINE body_while
Rule 111   body_while -> declaracion END_OF_LINE body_while
Rule 112   body_while -> salida_entrada END_OF_LINE body_while
Rule 113   body_while -> BREAK END_OF_LINE body_while
Rule 114   body_while -> CONTINUE END_OF_LINE body_while
Rule 115   switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
Rule 116   casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
Rule 117   casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE
Rule 118   casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
Rule 119   casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos
Rule 120   body_case -> asignacion END_OF_LINE
Rule 121   body_case -> declaracion END_OF_LINE
Rule 122   body_case -> comparacion END_OF_LINE
Rule 123   body_case -> salida_entrada END_OF_LINE
Rule 124   body_case -> asignacion END_OF_LINE body_case
Rule 125   body_case -> declaracion END_OF_LINE body_case
Rule 126   body_case -> salida_entrada END_OF_LINE body_case
Rule 127   body_case -> comparacion END_OF_LINE body_case
Rule 128   for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
Rule 129   forIterador -> IDENTIFICADOR operadorForIteracion
Rule 130   operadorForIteracion -> INCREMENTO
Rule 131   operadorForIteracion -> DECREMENTO
Rule 132   forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion
Rule 133   valorForCondicion -> FLOAT
Rule 134   valorForCondicion -> DOUBLE
Rule 135   valorForCondicion -> INT
Rule 136   valorForCondicion -> IDENTIFICADOR
Rule 137   forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador
Rule 138   forInicializador -> IDENTIFICADOR IGUAL valorForInicializador
Rule 139   tipoDatoForInicializador -> FLOAT_TYPE
Rule 140   tipoDatoForInicializador -> DOUBLE_TYPE
Rule 141   tipoDatoForInicializador -> INT_TYPE
Rule 142   valorForInicializador -> FLOAT
Rule 143   valorForInicializador -> DOUBLE
Rule 144   valorForInicializador -> INT
Rule 145   valorForInicializador -> IDENTIFICADOR
Rule 146   estructura_datos -> lista
Rule 147   estructura_datos -> pila
Rule 148   lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
Rule 149   tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE
Rule 150   pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
Rule 151   funciones_estructura_datos -> stack_push
Rule 152   funciones_estructura_datos -> stack_pop
Rule 153   stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
Rule 154   stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
Rule 155   expresion -> expresion_operacion_aritmetica
Rule 156   expresion -> expresion_condicional
Rule 157   expresion_operacion_aritmetica -> numero operador_aritmentico numero
Rule 158   expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR
Rule 159   expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero
Rule 160   expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR
Rule 161   expresion_condicional -> numero operador_condicional numero
Rule 162   expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR
Rule 163   expresion_condicional -> IDENTIFICADOR operador_condicional numero
Rule 164   expresion_condicional -> numero operador_condicional IDENTIFICADOR
Rule 165   salida_entrada -> salida_uno
Rule 166   salida_entrada -> salida_dos
Rule 167   salida_entrada -> salida_tres
Rule 168   salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
Rule 169   salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
Rule 170   salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
Rule 171   salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
Rule 172   salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER
Rule 173   funcion -> funcion_tipo_uno
Rule 174   funcion -> funcion_tipo_tres
Rule 175   funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
Rule 176   funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
Rule 177   parametrosF -> declaracion
Rule 178   parametrosF -> declaracion COMA parametrosF
Rule 179   bodyF -> asignacion END_OF_LINE
Rule 180   bodyF -> declaracion END_OF_LINE
Rule 181   bodyF -> salida_entrada END_OF_LINE
Rule 182   bodyF -> asignacion END_OF_LINE bodyF
Rule 183   bodyF -> declaracion END_OF_LINE bodyF
Rule 184   bodyF -> salida_entrada END_OF_LINE bodyF

Terminals, with rules where they appear

ADD                  : 
AND                  : 
AND_EQUAL            : 84
AUMENTADO            : 79
BOOL                 : 13 73
BOOL_TYPE            : 25 31
BREAK                : 108 113 116 117 118 119
BYTE                 : 
CASE                 : 116 117 118 119
CHAR                 : 11
CHAR_TYPE            : 21 32
CLASS                : 
COMA                 : 178
COMILLA_DOBLE        : 
COMILLA_SIMPLE       : 
CONSOLE_READLINE     : 172
CONSOLE_WRITELINE    : 168 169 170 171
CONST                : 
CONTINUE             : 109 114
COR_DER              : 
COR_IZQ              : 
C_CADENA_INTERPOLADA : 171
C_IDENT_TEXTUAL      : 
DECREMENTADO         : 80
DECREMENTO           : 131
DEFAULT              : 
DIVIDIDO_POR         : 82
DIVISION             : 46
DO                   : 104
DOS_PUNTOS           : 116 117 118 119
DOUBLE               : 17 134 143
DOUBLE_TYPE          : 23 28 140
ELSE                 : 
END_OF_LINE          : 1 5 6 8 10 58 104 105 106 107 108 109 110 111 112 113 114 116 117 118 119 120 121 122 123 124 125 126 127 128 128 148 150 179 180 181 182 183 184
EXC_OREQUAL          : 86
FINALLY              : 
FLOAT                : 16 133 142
FLOAT_TYPE           : 22 27 139
FOR                  : 128
GLOBAL               : 
IDENTIFICADOR        : 15 33 55 56 57 57 61 62 63 64 73 74 75 75 76 77 78 78 87 94 95 96 129 132 136 137 138 145 148 150 153 154 158 159 160 160 162 162 163 164 170 175 176
IGUAL                : 61 62 63 64 137 138 148 150
IGUAL_IGUAL          : 37 48
IN                   : 
INCREMENTO           : 130
INT                  : 18 135 144
INT_TYPE             : 24 30 141
IR                   : 
LAMBDA               : 
LEFTSHIFT_EQUAL      : 
LET                  : 
LIST                 : 70 94 148 148
LLAVE_DER            : 103 104 115 128 175 176
LLAVE_IZQ            : 103 104 115 128 175 176
MAYOR_O_IGUAL_QUE    : 42 53
MAYOR_QUE            : 41 52 96 149 150 150
MENOR_O_IGUAL_QUE    : 40 51
MENOR_QUE            : 39 50 96 149 150 150
MODULO               : 47
MODULO_DE            : 83
MULTIPLICACION       : 45
MULTIPLICADO_POR     : 81
NEGACION             : 
NEW                  : 68 69 70 148 150
NOR                  : 
NO_IGUAL             : 38 49
NULL                 : 
NULL_EQUAL           : 
NULL_VAL             : 
OBJECT               : 
ON                   : 
OP_TERNARIO          : 
OR                   : 
ORDERBY              : 
OR_EQUAL             : 85
PAR_DER              : 68 69 70 103 104 115 128 148 150 153 154 168 169 170 171 172 175 176
PAR_IZQ              : 68 69 70 103 104 115 128 148 150 153 154 168 169 170 171 172 175 176
POP                  : 154
PRIVATE              : 34
PROTECTED            : 35
PUBLIC               : 36
PUNTO                : 153 154
PUSH                 : 153
QUEUE                : 69 95
RESTA                : 44
RETURN               : 
RIGHTSHIFT_EQUAL     : 
SHIFT_MAYOR          : 
SHIFT_MENOR          : 
SIMPLE_AND           : 
SIMPLE_OR            : 
STACK                : 68 96 150 150
STRING               : 14 54 54 55 56 168 171
STRING_TYPE          : 26 29
STRUCT               : 
SUMA                 : 43 54 55 56 57
SWITCH               : 115
THIS                 : 
TO_UPPER             : 
TYPEOF               : 
VAR                  : 
VOID                 : 20 175 176
WHEN                 : 
WHERE                : 
WHILE                : 103 104
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 105 110 120 124 179 182
asignacionCompuesta  : 60
asignacionCompuesta_Logic : 71
asignacionCompuesta_Number : 72
asignacionEstructuraD : 64
asignacionList       : 67
asignacionPila       : 65
asignacionQueue      : 66
asignacionSimple     : 59 90
body                 : 128 175 0
bodyF                : 176 182 183 184
body_case            : 116 118 124 125 126 127
body_while           : 103 104 110 111 112 113 114
casos                : 115 118 119
comparacion          : 2 122 127
declaracion          : 8 106 111 121 125 177 178 180 183
declaracionAsignacion : 89
declaracionEstructuraD : 88
declaracionList      : 91
declaracionPila      : 93
declaracionQueue     : 92
empty                : 9
estructura_control   : 3
estructura_datos     : 4
expresion            : 5 62
expresion_condicional : 74 103 104 156
expresion_operacion_aritmetica : 77 155
for                  : 100
forCondicion         : 128
forInicializador     : 128
forIterador          : 128
ftipo                : 
funcion              : 7
funcion_tipo_tres    : 174
funcion_tipo_uno     : 173
funciones_estructura_datos : 10
lista                : 146
modificador_acceso   : 175 176
numero               : 12 76 157 157 158 159 161 161 163 164
operacion_string     : 169
operadorForIteracion : 129
operador_aritmentico : 157 158 159 160
operador_condicional : 132 161 162 163 164
operador_realacional : 97
operadoresCompuestosLogic : 73 74 75
operadoresCompuestosNumber : 76 77 78
parametrosF          : 176 178
pila                 : 147
salida_dos           : 166
salida_entrada       : 6 63 107 112 123 126 181 184
salida_tres          : 167
salida_uno           : 165
stack_pop            : 152
stack_push           : 151
switch_case          : 99
tipoDatoForInicializador : 137
tipoLista            : 68 69 70 94 95 148 148
valor                : 61 97 97 115 116 117 118 119 153
valorForCondicion    : 132
valorForInicializador : 137 138
valor_tipo           : 19 87 90
valor_tipo_inicializador : 96 149 150 150
while                : 98
while_do             : 102
while_normal         : 101

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (97) comparacion -> . valor operador_realacional valor
    (98) estructura_control -> . while
    (99) estructura_control -> . switch_case
    (100) estructura_control -> . for
    (146) estructura_datos -> . lista
    (147) estructura_datos -> . pila
    (155) expresion -> . expresion_operacion_aritmetica
    (156) expresion -> . expresion_condicional
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (173) funcion -> . funcion_tipo_uno
    (174) funcion -> . funcion_tipo_tres
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (58) empty -> . END_OF_LINE
    (151) funciones_estructura_datos -> . stack_push
    (152) funciones_estructura_datos -> . stack_pop
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (101) while -> . while_normal
    (102) while -> . while_do
    (115) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (128) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (148) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (150) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (157) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (158) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (159) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (160) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (161) expresion_condicional -> . numero operador_condicional numero
    (162) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (163) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (164) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (175) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (176) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (153) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (154) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (103) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (104) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (34) modificador_acceso -> . PRIVATE
    (35) modificador_acceso -> . PROTECTED
    (36) modificador_acceso -> . PUBLIC
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 29
    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    SWITCH          shift and go to state 42
    FOR             shift and go to state 43
    LIST            shift and go to state 44
    STACK           shift and go to state 45
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60
    WHILE           shift and go to state 61
    DO              shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    PUBLIC          shift and go to state 65
    QUEUE           shift and go to state 66

    body                           shift and go to state 1
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor                          shift and go to state 15
    while                          shift and go to state 16
    switch_case                    shift and go to state 17
    for                            shift and go to state 18
    lista                          shift and go to state 19
    pila                           shift and go to state 20
    expresion_operacion_aritmetica shift and go to state 21
    expresion_condicional          shift and go to state 22
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    funcion_tipo_uno               shift and go to state 26
    funcion_tipo_tres              shift and go to state 27
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    stack_push                     shift and go to state 32
    stack_pop                      shift and go to state 33
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    numero                         shift and go to state 37
    while_normal                   shift and go to state 40
    while_do                       shift and go to state 41
    modificador_acceso             shift and go to state 48
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 1

    (0) S' -> body .



state 2

    (1) body -> asignacion . END_OF_LINE

    END_OF_LINE     shift and go to state 67


state 3

    (58) empty -> END_OF_LINE .

    $end            reduce using rule 58 (empty -> END_OF_LINE .)
    LLAVE_DER       reduce using rule 58 (empty -> END_OF_LINE .)


state 4

    (2) body -> comparacion .

    $end            reduce using rule 2 (body -> comparacion .)
    LLAVE_DER       reduce using rule 2 (body -> comparacion .)


state 5

    (3) body -> estructura_control .

    $end            reduce using rule 3 (body -> estructura_control .)
    LLAVE_DER       reduce using rule 3 (body -> estructura_control .)


state 6

    (4) body -> estructura_datos .

    $end            reduce using rule 4 (body -> estructura_datos .)
    LLAVE_DER       reduce using rule 4 (body -> estructura_datos .)


state 7

    (5) body -> expresion . END_OF_LINE

    END_OF_LINE     shift and go to state 68


state 8

    (6) body -> salida_entrada . END_OF_LINE

    END_OF_LINE     shift and go to state 69


state 9

    (7) body -> funcion .

    $end            reduce using rule 7 (body -> funcion .)
    LLAVE_DER       reduce using rule 7 (body -> funcion .)


state 10

    (8) body -> declaracion . END_OF_LINE

    END_OF_LINE     shift and go to state 70


state 11

    (9) body -> empty .

    $end            reduce using rule 9 (body -> empty .)
    LLAVE_DER       reduce using rule 9 (body -> empty .)


state 12

    (10) body -> funciones_estructura_datos . END_OF_LINE

    END_OF_LINE     shift and go to state 71


state 13

    (59) asignacion -> asignacionSimple .

    END_OF_LINE     reduce using rule 59 (asignacion -> asignacionSimple .)


state 14

    (60) asignacion -> asignacionCompuesta .

    END_OF_LINE     reduce using rule 60 (asignacion -> asignacionCompuesta .)


state 15

    (97) comparacion -> valor . operador_realacional valor
    (37) operador_realacional -> . IGUAL_IGUAL
    (38) operador_realacional -> . NO_IGUAL
    (39) operador_realacional -> . MENOR_QUE
    (40) operador_realacional -> . MENOR_O_IGUAL_QUE
    (41) operador_realacional -> . MAYOR_QUE
    (42) operador_realacional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 73
    NO_IGUAL        shift and go to state 74
    MENOR_QUE       shift and go to state 75
    MENOR_O_IGUAL_QUE shift and go to state 76
    MAYOR_QUE       shift and go to state 77
    MAYOR_O_IGUAL_QUE shift and go to state 78

    operador_realacional           shift and go to state 72

state 16

    (98) estructura_control -> while .

    $end            reduce using rule 98 (estructura_control -> while .)
    LLAVE_DER       reduce using rule 98 (estructura_control -> while .)


state 17

    (99) estructura_control -> switch_case .

    $end            reduce using rule 99 (estructura_control -> switch_case .)
    LLAVE_DER       reduce using rule 99 (estructura_control -> switch_case .)


state 18

    (100) estructura_control -> for .

    $end            reduce using rule 100 (estructura_control -> for .)
    LLAVE_DER       reduce using rule 100 (estructura_control -> for .)


state 19

    (146) estructura_datos -> lista .

    $end            reduce using rule 146 (estructura_datos -> lista .)
    LLAVE_DER       reduce using rule 146 (estructura_datos -> lista .)


state 20

    (147) estructura_datos -> pila .

    $end            reduce using rule 147 (estructura_datos -> pila .)
    LLAVE_DER       reduce using rule 147 (estructura_datos -> pila .)


state 21

    (155) expresion -> expresion_operacion_aritmetica .

    END_OF_LINE     reduce using rule 155 (expresion -> expresion_operacion_aritmetica .)
    COMA            reduce using rule 155 (expresion -> expresion_operacion_aritmetica .)
    PAR_DER         reduce using rule 155 (expresion -> expresion_operacion_aritmetica .)


state 22

    (156) expresion -> expresion_condicional .

    END_OF_LINE     reduce using rule 156 (expresion -> expresion_condicional .)
    COMA            reduce using rule 156 (expresion -> expresion_condicional .)
    PAR_DER         reduce using rule 156 (expresion -> expresion_condicional .)


state 23

    (165) salida_entrada -> salida_uno .

    END_OF_LINE     reduce using rule 165 (salida_entrada -> salida_uno .)
    COMA            reduce using rule 165 (salida_entrada -> salida_uno .)
    PAR_DER         reduce using rule 165 (salida_entrada -> salida_uno .)


state 24

    (166) salida_entrada -> salida_dos .

    END_OF_LINE     reduce using rule 166 (salida_entrada -> salida_dos .)
    COMA            reduce using rule 166 (salida_entrada -> salida_dos .)
    PAR_DER         reduce using rule 166 (salida_entrada -> salida_dos .)


state 25

    (167) salida_entrada -> salida_tres .

    END_OF_LINE     reduce using rule 167 (salida_entrada -> salida_tres .)
    COMA            reduce using rule 167 (salida_entrada -> salida_tres .)
    PAR_DER         reduce using rule 167 (salida_entrada -> salida_tres .)


state 26

    (173) funcion -> funcion_tipo_uno .

    $end            reduce using rule 173 (funcion -> funcion_tipo_uno .)
    LLAVE_DER       reduce using rule 173 (funcion -> funcion_tipo_uno .)


state 27

    (174) funcion -> funcion_tipo_tres .

    $end            reduce using rule 174 (funcion -> funcion_tipo_tres .)
    LLAVE_DER       reduce using rule 174 (funcion -> funcion_tipo_tres .)


state 28

    (87) declaracion -> valor_tipo . IDENTIFICADOR
    (90) declaracionAsignacion -> valor_tipo . asignacionSimple
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD

    IDENTIFICADOR   shift and go to state 79

    asignacionSimple               shift and go to state 80

state 29

    (61) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (62) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (63) asignacionSimple -> IDENTIFICADOR . IGUAL salida_entrada
    (64) asignacionSimple -> IDENTIFICADOR . IGUAL asignacionEstructuraD
    (15) valor -> IDENTIFICADOR .
    (159) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (160) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (162) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (163) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (153) stack_push -> IDENTIFICADOR . PUNTO PUSH PAR_IZQ valor PAR_DER
    (154) stack_pop -> IDENTIFICADOR . PUNTO POP PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (43) operador_aritmentico -> . SUMA
    (44) operador_aritmentico -> . RESTA
    (45) operador_aritmentico -> . MULTIPLICACION
    (46) operador_aritmentico -> . DIVISION
    (47) operador_aritmentico -> . MODULO
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE
    (84) operadoresCompuestosLogic -> . AND_EQUAL
    (85) operadoresCompuestosLogic -> . OR_EQUAL
    (86) operadoresCompuestosLogic -> . EXC_OREQUAL
    (79) operadoresCompuestosNumber -> . AUMENTADO
    (80) operadoresCompuestosNumber -> . DECREMENTADO
    (81) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (82) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (83) operadoresCompuestosNumber -> . MODULO_DE

  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_O_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_O_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 81
    PUNTO           shift and go to state 84
    SUMA            shift and go to state 87
    RESTA           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    IGUAL_IGUAL     shift and go to state 92
    NO_IGUAL        shift and go to state 93
    MENOR_QUE       shift and go to state 94
    MENOR_O_IGUAL_QUE shift and go to state 95
    MAYOR_QUE       shift and go to state 96
    MAYOR_O_IGUAL_QUE shift and go to state 97
    AND_EQUAL       shift and go to state 98
    OR_EQUAL        shift and go to state 99
    EXC_OREQUAL     shift and go to state 100
    AUMENTADO       shift and go to state 101
    DECREMENTADO    shift and go to state 102
    MULTIPLICADO_POR shift and go to state 103
    DIVIDIDO_POR    shift and go to state 104
    MODULO_DE       shift and go to state 105

  ! IGUAL_IGUAL     [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]
  ! NO_IGUAL        [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]
  ! MENOR_QUE       [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]
  ! MENOR_O_IGUAL_QUE [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]
  ! MAYOR_QUE       [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]
  ! MAYOR_O_IGUAL_QUE [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]

    operador_aritmentico           shift and go to state 82
    operador_condicional           shift and go to state 83
    operadoresCompuestosLogic      shift and go to state 85
    operadoresCompuestosNumber     shift and go to state 86

state 30

    (88) declaracion -> declaracionEstructuraD .

    END_OF_LINE     reduce using rule 88 (declaracion -> declaracionEstructuraD .)
    COMA            reduce using rule 88 (declaracion -> declaracionEstructuraD .)
    PAR_DER         reduce using rule 88 (declaracion -> declaracionEstructuraD .)


state 31

    (89) declaracion -> declaracionAsignacion .

    END_OF_LINE     reduce using rule 89 (declaracion -> declaracionAsignacion .)
    COMA            reduce using rule 89 (declaracion -> declaracionAsignacion .)
    PAR_DER         reduce using rule 89 (declaracion -> declaracionAsignacion .)


state 32

    (151) funciones_estructura_datos -> stack_push .

    END_OF_LINE     reduce using rule 151 (funciones_estructura_datos -> stack_push .)


state 33

    (152) funciones_estructura_datos -> stack_pop .

    END_OF_LINE     reduce using rule 152 (funciones_estructura_datos -> stack_pop .)


state 34

    (71) asignacionCompuesta -> asignacionCompuesta_Logic .

    END_OF_LINE     reduce using rule 71 (asignacionCompuesta -> asignacionCompuesta_Logic .)


state 35

    (72) asignacionCompuesta -> asignacionCompuesta_Number .

    END_OF_LINE     reduce using rule 72 (asignacionCompuesta -> asignacionCompuesta_Number .)


state 36

    (11) valor -> CHAR .

    IGUAL_IGUAL     reduce using rule 11 (valor -> CHAR .)
    NO_IGUAL        reduce using rule 11 (valor -> CHAR .)
    MENOR_QUE       reduce using rule 11 (valor -> CHAR .)
    MENOR_O_IGUAL_QUE reduce using rule 11 (valor -> CHAR .)
    MAYOR_QUE       reduce using rule 11 (valor -> CHAR .)
    MAYOR_O_IGUAL_QUE reduce using rule 11 (valor -> CHAR .)
    $end            reduce using rule 11 (valor -> CHAR .)
    LLAVE_DER       reduce using rule 11 (valor -> CHAR .)
    END_OF_LINE     reduce using rule 11 (valor -> CHAR .)
    COMA            reduce using rule 11 (valor -> CHAR .)
    PAR_DER         reduce using rule 11 (valor -> CHAR .)
    DOS_PUNTOS      reduce using rule 11 (valor -> CHAR .)


state 37

    (12) valor -> numero .
    (157) expresion_operacion_aritmetica -> numero . operador_aritmentico numero
    (158) expresion_operacion_aritmetica -> numero . operador_aritmentico IDENTIFICADOR
    (161) expresion_condicional -> numero . operador_condicional numero
    (164) expresion_condicional -> numero . operador_condicional IDENTIFICADOR
    (43) operador_aritmentico -> . SUMA
    (44) operador_aritmentico -> . RESTA
    (45) operador_aritmentico -> . MULTIPLICACION
    (46) operador_aritmentico -> . DIVISION
    (47) operador_aritmentico -> . MODULO
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_O_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_O_IGUAL_QUE resolved as shift
    END_OF_LINE     reduce using rule 12 (valor -> numero .)
    COMA            reduce using rule 12 (valor -> numero .)
    PAR_DER         reduce using rule 12 (valor -> numero .)
    SUMA            shift and go to state 87
    RESTA           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    IGUAL_IGUAL     shift and go to state 92
    NO_IGUAL        shift and go to state 93
    MENOR_QUE       shift and go to state 94
    MENOR_O_IGUAL_QUE shift and go to state 95
    MAYOR_QUE       shift and go to state 96
    MAYOR_O_IGUAL_QUE shift and go to state 97

  ! IGUAL_IGUAL     [ reduce using rule 12 (valor -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 12 (valor -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 12 (valor -> numero .) ]
  ! MENOR_O_IGUAL_QUE [ reduce using rule 12 (valor -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 12 (valor -> numero .) ]
  ! MAYOR_O_IGUAL_QUE [ reduce using rule 12 (valor -> numero .) ]

    operador_aritmentico           shift and go to state 106
    operador_condicional           shift and go to state 107

state 38

    (13) valor -> BOOL .

    IGUAL_IGUAL     reduce using rule 13 (valor -> BOOL .)
    NO_IGUAL        reduce using rule 13 (valor -> BOOL .)
    MENOR_QUE       reduce using rule 13 (valor -> BOOL .)
    MENOR_O_IGUAL_QUE reduce using rule 13 (valor -> BOOL .)
    MAYOR_QUE       reduce using rule 13 (valor -> BOOL .)
    MAYOR_O_IGUAL_QUE reduce using rule 13 (valor -> BOOL .)
    $end            reduce using rule 13 (valor -> BOOL .)
    LLAVE_DER       reduce using rule 13 (valor -> BOOL .)
    END_OF_LINE     reduce using rule 13 (valor -> BOOL .)
    COMA            reduce using rule 13 (valor -> BOOL .)
    PAR_DER         reduce using rule 13 (valor -> BOOL .)
    DOS_PUNTOS      reduce using rule 13 (valor -> BOOL .)


state 39

    (14) valor -> STRING .

    IGUAL_IGUAL     reduce using rule 14 (valor -> STRING .)
    NO_IGUAL        reduce using rule 14 (valor -> STRING .)
    MENOR_QUE       reduce using rule 14 (valor -> STRING .)
    MENOR_O_IGUAL_QUE reduce using rule 14 (valor -> STRING .)
    MAYOR_QUE       reduce using rule 14 (valor -> STRING .)
    MAYOR_O_IGUAL_QUE reduce using rule 14 (valor -> STRING .)
    $end            reduce using rule 14 (valor -> STRING .)
    LLAVE_DER       reduce using rule 14 (valor -> STRING .)
    END_OF_LINE     reduce using rule 14 (valor -> STRING .)
    COMA            reduce using rule 14 (valor -> STRING .)
    PAR_DER         reduce using rule 14 (valor -> STRING .)
    DOS_PUNTOS      reduce using rule 14 (valor -> STRING .)


state 40

    (101) while -> while_normal .

    $end            reduce using rule 101 (while -> while_normal .)
    LLAVE_DER       reduce using rule 101 (while -> while_normal .)


state 41

    (102) while -> while_do .

    $end            reduce using rule 102 (while -> while_do .)
    LLAVE_DER       reduce using rule 102 (while -> while_do .)


state 42

    (115) switch_case -> SWITCH . PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER

    PAR_IZQ         shift and go to state 108


state 43

    (128) for -> FOR . PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    PAR_IZQ         shift and go to state 109


state 44

    (148) lista -> LIST . tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (94) declaracionList -> LIST . tipoLista IDENTIFICADOR
    (149) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 111

    tipoLista                      shift and go to state 110

state 45

    (150) pila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (96) declaracionPila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    MENOR_QUE       shift and go to state 112


state 46

    (168) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ STRING PAR_DER
    (169) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> CONSOLE_WRITELINE . PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER

    PAR_IZQ         shift and go to state 113


state 47

    (172) salida_tres -> CONSOLE_READLINE . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 114


state 48

    (175) funcion_tipo_uno -> modificador_acceso . VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (176) funcion_tipo_tres -> modificador_acceso . VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    VOID            shift and go to state 115


state 49

    (21) valor_tipo -> CHAR_TYPE .

    IDENTIFICADOR   reduce using rule 21 (valor_tipo -> CHAR_TYPE .)


state 50

    (22) valor_tipo -> FLOAT_TYPE .

    IDENTIFICADOR   reduce using rule 22 (valor_tipo -> FLOAT_TYPE .)


state 51

    (23) valor_tipo -> DOUBLE_TYPE .

    IDENTIFICADOR   reduce using rule 23 (valor_tipo -> DOUBLE_TYPE .)


state 52

    (24) valor_tipo -> INT_TYPE .

    IDENTIFICADOR   reduce using rule 24 (valor_tipo -> INT_TYPE .)


state 53

    (25) valor_tipo -> BOOL_TYPE .

    IDENTIFICADOR   reduce using rule 25 (valor_tipo -> BOOL_TYPE .)


state 54

    (26) valor_tipo -> STRING_TYPE .

    IDENTIFICADOR   reduce using rule 26 (valor_tipo -> STRING_TYPE .)


state 55

    (91) declaracionEstructuraD -> declaracionList .

    END_OF_LINE     reduce using rule 91 (declaracionEstructuraD -> declaracionList .)
    COMA            reduce using rule 91 (declaracionEstructuraD -> declaracionList .)
    PAR_DER         reduce using rule 91 (declaracionEstructuraD -> declaracionList .)


state 56

    (92) declaracionEstructuraD -> declaracionQueue .

    END_OF_LINE     reduce using rule 92 (declaracionEstructuraD -> declaracionQueue .)
    COMA            reduce using rule 92 (declaracionEstructuraD -> declaracionQueue .)
    PAR_DER         reduce using rule 92 (declaracionEstructuraD -> declaracionQueue .)


state 57

    (93) declaracionEstructuraD -> declaracionPila .

    END_OF_LINE     reduce using rule 93 (declaracionEstructuraD -> declaracionPila .)
    COMA            reduce using rule 93 (declaracionEstructuraD -> declaracionPila .)
    PAR_DER         reduce using rule 93 (declaracionEstructuraD -> declaracionPila .)


state 58

    (16) numero -> FLOAT .

    SUMA            reduce using rule 16 (numero -> FLOAT .)
    RESTA           reduce using rule 16 (numero -> FLOAT .)
    MULTIPLICACION  reduce using rule 16 (numero -> FLOAT .)
    DIVISION        reduce using rule 16 (numero -> FLOAT .)
    MODULO          reduce using rule 16 (numero -> FLOAT .)
    IGUAL_IGUAL     reduce using rule 16 (numero -> FLOAT .)
    NO_IGUAL        reduce using rule 16 (numero -> FLOAT .)
    MENOR_QUE       reduce using rule 16 (numero -> FLOAT .)
    MENOR_O_IGUAL_QUE reduce using rule 16 (numero -> FLOAT .)
    MAYOR_QUE       reduce using rule 16 (numero -> FLOAT .)
    MAYOR_O_IGUAL_QUE reduce using rule 16 (numero -> FLOAT .)
    $end            reduce using rule 16 (numero -> FLOAT .)
    LLAVE_DER       reduce using rule 16 (numero -> FLOAT .)
    END_OF_LINE     reduce using rule 16 (numero -> FLOAT .)
    COMA            reduce using rule 16 (numero -> FLOAT .)
    PAR_DER         reduce using rule 16 (numero -> FLOAT .)
    DOS_PUNTOS      reduce using rule 16 (numero -> FLOAT .)


state 59

    (17) numero -> DOUBLE .

    SUMA            reduce using rule 17 (numero -> DOUBLE .)
    RESTA           reduce using rule 17 (numero -> DOUBLE .)
    MULTIPLICACION  reduce using rule 17 (numero -> DOUBLE .)
    DIVISION        reduce using rule 17 (numero -> DOUBLE .)
    MODULO          reduce using rule 17 (numero -> DOUBLE .)
    IGUAL_IGUAL     reduce using rule 17 (numero -> DOUBLE .)
    NO_IGUAL        reduce using rule 17 (numero -> DOUBLE .)
    MENOR_QUE       reduce using rule 17 (numero -> DOUBLE .)
    MENOR_O_IGUAL_QUE reduce using rule 17 (numero -> DOUBLE .)
    MAYOR_QUE       reduce using rule 17 (numero -> DOUBLE .)
    MAYOR_O_IGUAL_QUE reduce using rule 17 (numero -> DOUBLE .)
    $end            reduce using rule 17 (numero -> DOUBLE .)
    LLAVE_DER       reduce using rule 17 (numero -> DOUBLE .)
    END_OF_LINE     reduce using rule 17 (numero -> DOUBLE .)
    COMA            reduce using rule 17 (numero -> DOUBLE .)
    PAR_DER         reduce using rule 17 (numero -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 17 (numero -> DOUBLE .)


state 60

    (18) numero -> INT .

    SUMA            reduce using rule 18 (numero -> INT .)
    RESTA           reduce using rule 18 (numero -> INT .)
    MULTIPLICACION  reduce using rule 18 (numero -> INT .)
    DIVISION        reduce using rule 18 (numero -> INT .)
    MODULO          reduce using rule 18 (numero -> INT .)
    IGUAL_IGUAL     reduce using rule 18 (numero -> INT .)
    NO_IGUAL        reduce using rule 18 (numero -> INT .)
    MENOR_QUE       reduce using rule 18 (numero -> INT .)
    MENOR_O_IGUAL_QUE reduce using rule 18 (numero -> INT .)
    MAYOR_QUE       reduce using rule 18 (numero -> INT .)
    MAYOR_O_IGUAL_QUE reduce using rule 18 (numero -> INT .)
    $end            reduce using rule 18 (numero -> INT .)
    LLAVE_DER       reduce using rule 18 (numero -> INT .)
    END_OF_LINE     reduce using rule 18 (numero -> INT .)
    COMA            reduce using rule 18 (numero -> INT .)
    PAR_DER         reduce using rule 18 (numero -> INT .)
    DOS_PUNTOS      reduce using rule 18 (numero -> INT .)


state 61

    (103) while_normal -> WHILE . PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER

    PAR_IZQ         shift and go to state 116


state 62

    (104) while_do -> DO . LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    LLAVE_IZQ       shift and go to state 117


state 63

    (34) modificador_acceso -> PRIVATE .

    VOID            reduce using rule 34 (modificador_acceso -> PRIVATE .)


state 64

    (35) modificador_acceso -> PROTECTED .

    VOID            reduce using rule 35 (modificador_acceso -> PROTECTED .)


state 65

    (36) modificador_acceso -> PUBLIC .

    VOID            reduce using rule 36 (modificador_acceso -> PUBLIC .)


state 66

    (95) declaracionQueue -> QUEUE . tipoLista IDENTIFICADOR
    (149) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 111

    tipoLista                      shift and go to state 118

state 67

    (1) body -> asignacion END_OF_LINE .

    $end            reduce using rule 1 (body -> asignacion END_OF_LINE .)
    LLAVE_DER       reduce using rule 1 (body -> asignacion END_OF_LINE .)


state 68

    (5) body -> expresion END_OF_LINE .

    $end            reduce using rule 5 (body -> expresion END_OF_LINE .)
    LLAVE_DER       reduce using rule 5 (body -> expresion END_OF_LINE .)


state 69

    (6) body -> salida_entrada END_OF_LINE .

    $end            reduce using rule 6 (body -> salida_entrada END_OF_LINE .)
    LLAVE_DER       reduce using rule 6 (body -> salida_entrada END_OF_LINE .)


state 70

    (8) body -> declaracion END_OF_LINE .

    $end            reduce using rule 8 (body -> declaracion END_OF_LINE .)
    LLAVE_DER       reduce using rule 8 (body -> declaracion END_OF_LINE .)


state 71

    (10) body -> funciones_estructura_datos END_OF_LINE .

    $end            reduce using rule 10 (body -> funciones_estructura_datos END_OF_LINE .)
    LLAVE_DER       reduce using rule 10 (body -> funciones_estructura_datos END_OF_LINE .)


state 72

    (97) comparacion -> valor operador_realacional . valor
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    IDENTIFICADOR   shift and go to state 121
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    valor                          shift and go to state 119
    numero                         shift and go to state 120

state 73

    (37) operador_realacional -> IGUAL_IGUAL .

    CHAR            reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    BOOL            reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    STRING          reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    IDENTIFICADOR   reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    FLOAT           reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    DOUBLE          reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    INT             reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)


state 74

    (38) operador_realacional -> NO_IGUAL .

    CHAR            reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    BOOL            reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    STRING          reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    IDENTIFICADOR   reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    FLOAT           reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    DOUBLE          reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    INT             reduce using rule 38 (operador_realacional -> NO_IGUAL .)


state 75

    (39) operador_realacional -> MENOR_QUE .

    CHAR            reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    BOOL            reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    STRING          reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    IDENTIFICADOR   reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    FLOAT           reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    DOUBLE          reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    INT             reduce using rule 39 (operador_realacional -> MENOR_QUE .)


state 76

    (40) operador_realacional -> MENOR_O_IGUAL_QUE .

    CHAR            reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    BOOL            reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    STRING          reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    IDENTIFICADOR   reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    INT             reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)


state 77

    (41) operador_realacional -> MAYOR_QUE .

    CHAR            reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    BOOL            reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    STRING          reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    IDENTIFICADOR   reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    FLOAT           reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    DOUBLE          reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    INT             reduce using rule 41 (operador_realacional -> MAYOR_QUE .)


state 78

    (42) operador_realacional -> MAYOR_O_IGUAL_QUE .

    CHAR            reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    BOOL            reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    STRING          reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    IDENTIFICADOR   reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    INT             reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)


state 79

    (87) declaracion -> valor_tipo IDENTIFICADOR .
    (61) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (62) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (63) asignacionSimple -> IDENTIFICADOR . IGUAL salida_entrada
    (64) asignacionSimple -> IDENTIFICADOR . IGUAL asignacionEstructuraD

    END_OF_LINE     reduce using rule 87 (declaracion -> valor_tipo IDENTIFICADOR .)
    COMA            reduce using rule 87 (declaracion -> valor_tipo IDENTIFICADOR .)
    PAR_DER         reduce using rule 87 (declaracion -> valor_tipo IDENTIFICADOR .)
    IGUAL           shift and go to state 81


state 80

    (90) declaracionAsignacion -> valor_tipo asignacionSimple .

    END_OF_LINE     reduce using rule 90 (declaracionAsignacion -> valor_tipo asignacionSimple .)
    COMA            reduce using rule 90 (declaracionAsignacion -> valor_tipo asignacionSimple .)
    PAR_DER         reduce using rule 90 (declaracionAsignacion -> valor_tipo asignacionSimple .)


state 81

    (61) asignacionSimple -> IDENTIFICADOR IGUAL . valor
    (62) asignacionSimple -> IDENTIFICADOR IGUAL . expresion
    (63) asignacionSimple -> IDENTIFICADOR IGUAL . salida_entrada
    (64) asignacionSimple -> IDENTIFICADOR IGUAL . asignacionEstructuraD
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (155) expresion -> . expresion_operacion_aritmetica
    (156) expresion -> . expresion_condicional
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (65) asignacionEstructuraD -> . asignacionPila
    (66) asignacionEstructuraD -> . asignacionQueue
    (67) asignacionEstructuraD -> . asignacionList
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (157) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (158) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (159) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (160) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (161) expresion_condicional -> . numero operador_condicional numero
    (162) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (163) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (164) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (68) asignacionPila -> . NEW STACK tipoLista PAR_IZQ PAR_DER
    (69) asignacionQueue -> . NEW QUEUE tipoLista PAR_IZQ PAR_DER
    (70) asignacionList -> . NEW LIST tipoLista PAR_IZQ PAR_DER

    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    IDENTIFICADOR   shift and go to state 122
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    NEW             shift and go to state 130

    valor                          shift and go to state 123
    expresion                      shift and go to state 124
    salida_entrada                 shift and go to state 125
    asignacionEstructuraD          shift and go to state 126
    numero                         shift and go to state 37
    expresion_operacion_aritmetica shift and go to state 21
    expresion_condicional          shift and go to state 22
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionPila                 shift and go to state 127
    asignacionQueue                shift and go to state 128
    asignacionList                 shift and go to state 129

state 82

    (159) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico . numero
    (160) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 131
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    numero                         shift and go to state 132

state 83

    (162) expresion_condicional -> IDENTIFICADOR operador_condicional . IDENTIFICADOR
    (163) expresion_condicional -> IDENTIFICADOR operador_condicional . numero
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 133
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    numero                         shift and go to state 134

state 84

    (153) stack_push -> IDENTIFICADOR PUNTO . PUSH PAR_IZQ valor PAR_DER
    (154) stack_pop -> IDENTIFICADOR PUNTO . POP PAR_IZQ PAR_DER

    PUSH            shift and go to state 135
    POP             shift and go to state 136


state 85

    (73) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . BOOL
    (74) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . expresion_condicional
    (75) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . IDENTIFICADOR
    (161) expresion_condicional -> . numero operador_condicional numero
    (162) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (163) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (164) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BOOL            shift and go to state 138
    IDENTIFICADOR   shift and go to state 137
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    expresion_condicional          shift and go to state 139
    numero                         shift and go to state 140

state 86

    (76) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . numero
    (77) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (157) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (158) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (159) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (160) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 141
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    numero                         shift and go to state 142
    expresion_operacion_aritmetica shift and go to state 143

state 87

    (43) operador_aritmentico -> SUMA .

    IDENTIFICADOR   reduce using rule 43 (operador_aritmentico -> SUMA .)
    FLOAT           reduce using rule 43 (operador_aritmentico -> SUMA .)
    DOUBLE          reduce using rule 43 (operador_aritmentico -> SUMA .)
    INT             reduce using rule 43 (operador_aritmentico -> SUMA .)


state 88

    (44) operador_aritmentico -> RESTA .

    IDENTIFICADOR   reduce using rule 44 (operador_aritmentico -> RESTA .)
    FLOAT           reduce using rule 44 (operador_aritmentico -> RESTA .)
    DOUBLE          reduce using rule 44 (operador_aritmentico -> RESTA .)
    INT             reduce using rule 44 (operador_aritmentico -> RESTA .)


state 89

    (45) operador_aritmentico -> MULTIPLICACION .

    IDENTIFICADOR   reduce using rule 45 (operador_aritmentico -> MULTIPLICACION .)
    FLOAT           reduce using rule 45 (operador_aritmentico -> MULTIPLICACION .)
    DOUBLE          reduce using rule 45 (operador_aritmentico -> MULTIPLICACION .)
    INT             reduce using rule 45 (operador_aritmentico -> MULTIPLICACION .)


state 90

    (46) operador_aritmentico -> DIVISION .

    IDENTIFICADOR   reduce using rule 46 (operador_aritmentico -> DIVISION .)
    FLOAT           reduce using rule 46 (operador_aritmentico -> DIVISION .)
    DOUBLE          reduce using rule 46 (operador_aritmentico -> DIVISION .)
    INT             reduce using rule 46 (operador_aritmentico -> DIVISION .)


state 91

    (47) operador_aritmentico -> MODULO .

    IDENTIFICADOR   reduce using rule 47 (operador_aritmentico -> MODULO .)
    FLOAT           reduce using rule 47 (operador_aritmentico -> MODULO .)
    DOUBLE          reduce using rule 47 (operador_aritmentico -> MODULO .)
    INT             reduce using rule 47 (operador_aritmentico -> MODULO .)


state 92

    (48) operador_condicional -> IGUAL_IGUAL .

    IDENTIFICADOR   reduce using rule 48 (operador_condicional -> IGUAL_IGUAL .)
    FLOAT           reduce using rule 48 (operador_condicional -> IGUAL_IGUAL .)
    DOUBLE          reduce using rule 48 (operador_condicional -> IGUAL_IGUAL .)
    INT             reduce using rule 48 (operador_condicional -> IGUAL_IGUAL .)


state 93

    (49) operador_condicional -> NO_IGUAL .

    IDENTIFICADOR   reduce using rule 49 (operador_condicional -> NO_IGUAL .)
    FLOAT           reduce using rule 49 (operador_condicional -> NO_IGUAL .)
    DOUBLE          reduce using rule 49 (operador_condicional -> NO_IGUAL .)
    INT             reduce using rule 49 (operador_condicional -> NO_IGUAL .)


state 94

    (50) operador_condicional -> MENOR_QUE .

    IDENTIFICADOR   reduce using rule 50 (operador_condicional -> MENOR_QUE .)
    FLOAT           reduce using rule 50 (operador_condicional -> MENOR_QUE .)
    DOUBLE          reduce using rule 50 (operador_condicional -> MENOR_QUE .)
    INT             reduce using rule 50 (operador_condicional -> MENOR_QUE .)


state 95

    (51) operador_condicional -> MENOR_O_IGUAL_QUE .

    IDENTIFICADOR   reduce using rule 51 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 51 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 51 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    INT             reduce using rule 51 (operador_condicional -> MENOR_O_IGUAL_QUE .)


state 96

    (52) operador_condicional -> MAYOR_QUE .

    IDENTIFICADOR   reduce using rule 52 (operador_condicional -> MAYOR_QUE .)
    FLOAT           reduce using rule 52 (operador_condicional -> MAYOR_QUE .)
    DOUBLE          reduce using rule 52 (operador_condicional -> MAYOR_QUE .)
    INT             reduce using rule 52 (operador_condicional -> MAYOR_QUE .)


state 97

    (53) operador_condicional -> MAYOR_O_IGUAL_QUE .

    IDENTIFICADOR   reduce using rule 53 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 53 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 53 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    INT             reduce using rule 53 (operador_condicional -> MAYOR_O_IGUAL_QUE .)


state 98

    (84) operadoresCompuestosLogic -> AND_EQUAL .

    BOOL            reduce using rule 84 (operadoresCompuestosLogic -> AND_EQUAL .)
    IDENTIFICADOR   reduce using rule 84 (operadoresCompuestosLogic -> AND_EQUAL .)
    FLOAT           reduce using rule 84 (operadoresCompuestosLogic -> AND_EQUAL .)
    DOUBLE          reduce using rule 84 (operadoresCompuestosLogic -> AND_EQUAL .)
    INT             reduce using rule 84 (operadoresCompuestosLogic -> AND_EQUAL .)


state 99

    (85) operadoresCompuestosLogic -> OR_EQUAL .

    BOOL            reduce using rule 85 (operadoresCompuestosLogic -> OR_EQUAL .)
    IDENTIFICADOR   reduce using rule 85 (operadoresCompuestosLogic -> OR_EQUAL .)
    FLOAT           reduce using rule 85 (operadoresCompuestosLogic -> OR_EQUAL .)
    DOUBLE          reduce using rule 85 (operadoresCompuestosLogic -> OR_EQUAL .)
    INT             reduce using rule 85 (operadoresCompuestosLogic -> OR_EQUAL .)


state 100

    (86) operadoresCompuestosLogic -> EXC_OREQUAL .

    BOOL            reduce using rule 86 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    IDENTIFICADOR   reduce using rule 86 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    FLOAT           reduce using rule 86 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    DOUBLE          reduce using rule 86 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    INT             reduce using rule 86 (operadoresCompuestosLogic -> EXC_OREQUAL .)


state 101

    (79) operadoresCompuestosNumber -> AUMENTADO .

    IDENTIFICADOR   reduce using rule 79 (operadoresCompuestosNumber -> AUMENTADO .)
    FLOAT           reduce using rule 79 (operadoresCompuestosNumber -> AUMENTADO .)
    DOUBLE          reduce using rule 79 (operadoresCompuestosNumber -> AUMENTADO .)
    INT             reduce using rule 79 (operadoresCompuestosNumber -> AUMENTADO .)


state 102

    (80) operadoresCompuestosNumber -> DECREMENTADO .

    IDENTIFICADOR   reduce using rule 80 (operadoresCompuestosNumber -> DECREMENTADO .)
    FLOAT           reduce using rule 80 (operadoresCompuestosNumber -> DECREMENTADO .)
    DOUBLE          reduce using rule 80 (operadoresCompuestosNumber -> DECREMENTADO .)
    INT             reduce using rule 80 (operadoresCompuestosNumber -> DECREMENTADO .)


state 103

    (81) operadoresCompuestosNumber -> MULTIPLICADO_POR .

    IDENTIFICADOR   reduce using rule 81 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    FLOAT           reduce using rule 81 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    DOUBLE          reduce using rule 81 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    INT             reduce using rule 81 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)


state 104

    (82) operadoresCompuestosNumber -> DIVIDIDO_POR .

    IDENTIFICADOR   reduce using rule 82 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    FLOAT           reduce using rule 82 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    DOUBLE          reduce using rule 82 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    INT             reduce using rule 82 (operadoresCompuestosNumber -> DIVIDIDO_POR .)


state 105

    (83) operadoresCompuestosNumber -> MODULO_DE .

    IDENTIFICADOR   reduce using rule 83 (operadoresCompuestosNumber -> MODULO_DE .)
    FLOAT           reduce using rule 83 (operadoresCompuestosNumber -> MODULO_DE .)
    DOUBLE          reduce using rule 83 (operadoresCompuestosNumber -> MODULO_DE .)
    INT             reduce using rule 83 (operadoresCompuestosNumber -> MODULO_DE .)


state 106

    (157) expresion_operacion_aritmetica -> numero operador_aritmentico . numero
    (158) expresion_operacion_aritmetica -> numero operador_aritmentico . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 145
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    numero                         shift and go to state 144

state 107

    (161) expresion_condicional -> numero operador_condicional . numero
    (164) expresion_condicional -> numero operador_condicional . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 147
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    numero                         shift and go to state 146

state 108

    (115) switch_case -> SWITCH PAR_IZQ . valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    IDENTIFICADOR   shift and go to state 121
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    valor                          shift and go to state 148
    numero                         shift and go to state 120

state 109

    (128) for -> FOR PAR_IZQ . forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (137) forInicializador -> . tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador
    (138) forInicializador -> . IDENTIFICADOR IGUAL valorForInicializador
    (139) tipoDatoForInicializador -> . FLOAT_TYPE
    (140) tipoDatoForInicializador -> . DOUBLE_TYPE
    (141) tipoDatoForInicializador -> . INT_TYPE

    IDENTIFICADOR   shift and go to state 151
    FLOAT_TYPE      shift and go to state 152
    DOUBLE_TYPE     shift and go to state 153
    INT_TYPE        shift and go to state 154

    forInicializador               shift and go to state 149
    tipoDatoForInicializador       shift and go to state 150

state 110

    (148) lista -> LIST tipoLista . IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (94) declaracionList -> LIST tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 155


state 111

    (149) tipoLista -> MENOR_QUE . valor_tipo_inicializador MAYOR_QUE
    (27) valor_tipo_inicializador -> . FLOAT_TYPE
    (28) valor_tipo_inicializador -> . DOUBLE_TYPE
    (29) valor_tipo_inicializador -> . STRING_TYPE
    (30) valor_tipo_inicializador -> . INT_TYPE
    (31) valor_tipo_inicializador -> . BOOL_TYPE
    (32) valor_tipo_inicializador -> . CHAR_TYPE
    (33) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 157
    DOUBLE_TYPE     shift and go to state 158
    STRING_TYPE     shift and go to state 159
    INT_TYPE        shift and go to state 160
    BOOL_TYPE       shift and go to state 161
    CHAR_TYPE       shift and go to state 162
    IDENTIFICADOR   shift and go to state 163

    valor_tipo_inicializador       shift and go to state 156

state 112

    (150) pila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (96) declaracionPila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (27) valor_tipo_inicializador -> . FLOAT_TYPE
    (28) valor_tipo_inicializador -> . DOUBLE_TYPE
    (29) valor_tipo_inicializador -> . STRING_TYPE
    (30) valor_tipo_inicializador -> . INT_TYPE
    (31) valor_tipo_inicializador -> . BOOL_TYPE
    (32) valor_tipo_inicializador -> . CHAR_TYPE
    (33) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 157
    DOUBLE_TYPE     shift and go to state 158
    STRING_TYPE     shift and go to state 159
    INT_TYPE        shift and go to state 160
    BOOL_TYPE       shift and go to state 161
    CHAR_TYPE       shift and go to state 162
    IDENTIFICADOR   shift and go to state 163

    valor_tipo_inicializador       shift and go to state 164

state 113

    (168) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . STRING PAR_DER
    (169) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . operacion_string PAR_DER
    (170) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . IDENTIFICADOR PAR_DER
    (171) salida_dos -> CONSOLE_WRITELINE PAR_IZQ . C_CADENA_INTERPOLADA STRING PAR_DER
    (54) operacion_string -> . STRING SUMA STRING
    (55) operacion_string -> . STRING SUMA IDENTIFICADOR
    (56) operacion_string -> . IDENTIFICADOR SUMA STRING
    (57) operacion_string -> . IDENTIFICADOR SUMA IDENTIFICADOR

    STRING          shift and go to state 165
    IDENTIFICADOR   shift and go to state 167
    C_CADENA_INTERPOLADA shift and go to state 168

    operacion_string               shift and go to state 166

state 114

    (172) salida_tres -> CONSOLE_READLINE PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 169


state 115

    (175) funcion_tipo_uno -> modificador_acceso VOID . IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (176) funcion_tipo_tres -> modificador_acceso VOID . IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    IDENTIFICADOR   shift and go to state 170


state 116

    (103) while_normal -> WHILE PAR_IZQ . expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (161) expresion_condicional -> . numero operador_condicional numero
    (162) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (163) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (164) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 172
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    expresion_condicional          shift and go to state 171
    numero                         shift and go to state 140

state 117

    (104) while_do -> DO LLAVE_IZQ . body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (105) body_while -> . asignacion END_OF_LINE
    (106) body_while -> . declaracion END_OF_LINE
    (107) body_while -> . salida_entrada END_OF_LINE
    (108) body_while -> . BREAK END_OF_LINE
    (109) body_while -> . CONTINUE END_OF_LINE
    (110) body_while -> . asignacion END_OF_LINE body_while
    (111) body_while -> . declaracion END_OF_LINE body_while
    (112) body_while -> . salida_entrada END_OF_LINE body_while
    (113) body_while -> . BREAK END_OF_LINE body_while
    (114) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    BREAK           shift and go to state 177
    CONTINUE        shift and go to state 178
    IDENTIFICADOR   shift and go to state 179
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    body_while                     shift and go to state 173
    asignacion                     shift and go to state 174
    declaracion                    shift and go to state 175
    salida_entrada                 shift and go to state 176
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 118

    (95) declaracionQueue -> QUEUE tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 182


state 119

    (97) comparacion -> valor operador_realacional valor .

    $end            reduce using rule 97 (comparacion -> valor operador_realacional valor .)
    LLAVE_DER       reduce using rule 97 (comparacion -> valor operador_realacional valor .)
    END_OF_LINE     reduce using rule 97 (comparacion -> valor operador_realacional valor .)


state 120

    (12) valor -> numero .

    $end            reduce using rule 12 (valor -> numero .)
    LLAVE_DER       reduce using rule 12 (valor -> numero .)
    END_OF_LINE     reduce using rule 12 (valor -> numero .)
    PAR_DER         reduce using rule 12 (valor -> numero .)
    DOS_PUNTOS      reduce using rule 12 (valor -> numero .)
    IGUAL_IGUAL     reduce using rule 12 (valor -> numero .)
    NO_IGUAL        reduce using rule 12 (valor -> numero .)
    MENOR_QUE       reduce using rule 12 (valor -> numero .)
    MENOR_O_IGUAL_QUE reduce using rule 12 (valor -> numero .)
    MAYOR_QUE       reduce using rule 12 (valor -> numero .)
    MAYOR_O_IGUAL_QUE reduce using rule 12 (valor -> numero .)


state 121

    (15) valor -> IDENTIFICADOR .

    $end            reduce using rule 15 (valor -> IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 15 (valor -> IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 15 (valor -> IDENTIFICADOR .)
    PAR_DER         reduce using rule 15 (valor -> IDENTIFICADOR .)
    DOS_PUNTOS      reduce using rule 15 (valor -> IDENTIFICADOR .)


state 122

    (15) valor -> IDENTIFICADOR .
    (159) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (160) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (162) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (163) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (43) operador_aritmentico -> . SUMA
    (44) operador_aritmentico -> . RESTA
    (45) operador_aritmentico -> . MULTIPLICACION
    (46) operador_aritmentico -> . DIVISION
    (47) operador_aritmentico -> . MODULO
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

    END_OF_LINE     reduce using rule 15 (valor -> IDENTIFICADOR .)
    COMA            reduce using rule 15 (valor -> IDENTIFICADOR .)
    PAR_DER         reduce using rule 15 (valor -> IDENTIFICADOR .)
    SUMA            shift and go to state 87
    RESTA           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    IGUAL_IGUAL     shift and go to state 92
    NO_IGUAL        shift and go to state 93
    MENOR_QUE       shift and go to state 94
    MENOR_O_IGUAL_QUE shift and go to state 95
    MAYOR_QUE       shift and go to state 96
    MAYOR_O_IGUAL_QUE shift and go to state 97

    operador_aritmentico           shift and go to state 82
    operador_condicional           shift and go to state 83

state 123

    (61) asignacionSimple -> IDENTIFICADOR IGUAL valor .

    END_OF_LINE     reduce using rule 61 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)
    COMA            reduce using rule 61 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)
    PAR_DER         reduce using rule 61 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)


state 124

    (62) asignacionSimple -> IDENTIFICADOR IGUAL expresion .

    END_OF_LINE     reduce using rule 62 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)
    COMA            reduce using rule 62 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)
    PAR_DER         reduce using rule 62 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)


state 125

    (63) asignacionSimple -> IDENTIFICADOR IGUAL salida_entrada .

    END_OF_LINE     reduce using rule 63 (asignacionSimple -> IDENTIFICADOR IGUAL salida_entrada .)
    COMA            reduce using rule 63 (asignacionSimple -> IDENTIFICADOR IGUAL salida_entrada .)
    PAR_DER         reduce using rule 63 (asignacionSimple -> IDENTIFICADOR IGUAL salida_entrada .)


state 126

    (64) asignacionSimple -> IDENTIFICADOR IGUAL asignacionEstructuraD .

    END_OF_LINE     reduce using rule 64 (asignacionSimple -> IDENTIFICADOR IGUAL asignacionEstructuraD .)
    COMA            reduce using rule 64 (asignacionSimple -> IDENTIFICADOR IGUAL asignacionEstructuraD .)
    PAR_DER         reduce using rule 64 (asignacionSimple -> IDENTIFICADOR IGUAL asignacionEstructuraD .)


state 127

    (65) asignacionEstructuraD -> asignacionPila .

    END_OF_LINE     reduce using rule 65 (asignacionEstructuraD -> asignacionPila .)
    COMA            reduce using rule 65 (asignacionEstructuraD -> asignacionPila .)
    PAR_DER         reduce using rule 65 (asignacionEstructuraD -> asignacionPila .)


state 128

    (66) asignacionEstructuraD -> asignacionQueue .

    END_OF_LINE     reduce using rule 66 (asignacionEstructuraD -> asignacionQueue .)
    COMA            reduce using rule 66 (asignacionEstructuraD -> asignacionQueue .)
    PAR_DER         reduce using rule 66 (asignacionEstructuraD -> asignacionQueue .)


state 129

    (67) asignacionEstructuraD -> asignacionList .

    END_OF_LINE     reduce using rule 67 (asignacionEstructuraD -> asignacionList .)
    COMA            reduce using rule 67 (asignacionEstructuraD -> asignacionList .)
    PAR_DER         reduce using rule 67 (asignacionEstructuraD -> asignacionList .)


state 130

    (68) asignacionPila -> NEW . STACK tipoLista PAR_IZQ PAR_DER
    (69) asignacionQueue -> NEW . QUEUE tipoLista PAR_IZQ PAR_DER
    (70) asignacionList -> NEW . LIST tipoLista PAR_IZQ PAR_DER

    STACK           shift and go to state 183
    QUEUE           shift and go to state 184
    LIST            shift and go to state 185


state 131

    (160) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .

    END_OF_LINE     reduce using rule 160 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    COMA            reduce using rule 160 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    PAR_DER         reduce using rule 160 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)


state 132

    (159) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .

    END_OF_LINE     reduce using rule 159 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    COMA            reduce using rule 159 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    PAR_DER         reduce using rule 159 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)


state 133

    (162) expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .

    END_OF_LINE     reduce using rule 162 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    COMA            reduce using rule 162 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    PAR_DER         reduce using rule 162 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)


state 134

    (163) expresion_condicional -> IDENTIFICADOR operador_condicional numero .

    END_OF_LINE     reduce using rule 163 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    COMA            reduce using rule 163 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    PAR_DER         reduce using rule 163 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)


state 135

    (153) stack_push -> IDENTIFICADOR PUNTO PUSH . PAR_IZQ valor PAR_DER

    PAR_IZQ         shift and go to state 186


state 136

    (154) stack_pop -> IDENTIFICADOR PUNTO POP . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 187


state 137

    (75) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR .
    (162) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (163) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

    END_OF_LINE     reduce using rule 75 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR .)
    IGUAL_IGUAL     shift and go to state 92
    NO_IGUAL        shift and go to state 93
    MENOR_QUE       shift and go to state 94
    MENOR_O_IGUAL_QUE shift and go to state 95
    MAYOR_QUE       shift and go to state 96
    MAYOR_O_IGUAL_QUE shift and go to state 97

    operador_condicional           shift and go to state 83

state 138

    (73) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL .

    END_OF_LINE     reduce using rule 73 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL .)


state 139

    (74) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional .

    END_OF_LINE     reduce using rule 74 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional .)


state 140

    (161) expresion_condicional -> numero . operador_condicional numero
    (164) expresion_condicional -> numero . operador_condicional IDENTIFICADOR
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 92
    NO_IGUAL        shift and go to state 93
    MENOR_QUE       shift and go to state 94
    MENOR_O_IGUAL_QUE shift and go to state 95
    MAYOR_QUE       shift and go to state 96
    MAYOR_O_IGUAL_QUE shift and go to state 97

    operador_condicional           shift and go to state 107

state 141

    (78) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR .
    (159) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (160) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (43) operador_aritmentico -> . SUMA
    (44) operador_aritmentico -> . RESTA
    (45) operador_aritmentico -> . MULTIPLICACION
    (46) operador_aritmentico -> . DIVISION
    (47) operador_aritmentico -> . MODULO

    END_OF_LINE     reduce using rule 78 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR .)
    SUMA            shift and go to state 87
    RESTA           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91

    operador_aritmentico           shift and go to state 82

state 142

    (76) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero .
    (157) expresion_operacion_aritmetica -> numero . operador_aritmentico numero
    (158) expresion_operacion_aritmetica -> numero . operador_aritmentico IDENTIFICADOR
    (43) operador_aritmentico -> . SUMA
    (44) operador_aritmentico -> . RESTA
    (45) operador_aritmentico -> . MULTIPLICACION
    (46) operador_aritmentico -> . DIVISION
    (47) operador_aritmentico -> . MODULO

    END_OF_LINE     reduce using rule 76 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero .)
    SUMA            shift and go to state 87
    RESTA           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91

    operador_aritmentico           shift and go to state 106

state 143

    (77) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica .

    END_OF_LINE     reduce using rule 77 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica .)


state 144

    (157) expresion_operacion_aritmetica -> numero operador_aritmentico numero .

    END_OF_LINE     reduce using rule 157 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    COMA            reduce using rule 157 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    PAR_DER         reduce using rule 157 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)


state 145

    (158) expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .

    END_OF_LINE     reduce using rule 158 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    COMA            reduce using rule 158 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    PAR_DER         reduce using rule 158 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)


state 146

    (161) expresion_condicional -> numero operador_condicional numero .

    END_OF_LINE     reduce using rule 161 (expresion_condicional -> numero operador_condicional numero .)
    COMA            reduce using rule 161 (expresion_condicional -> numero operador_condicional numero .)
    PAR_DER         reduce using rule 161 (expresion_condicional -> numero operador_condicional numero .)


state 147

    (164) expresion_condicional -> numero operador_condicional IDENTIFICADOR .

    END_OF_LINE     reduce using rule 164 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    COMA            reduce using rule 164 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    PAR_DER         reduce using rule 164 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)


state 148

    (115) switch_case -> SWITCH PAR_IZQ valor . PAR_DER LLAVE_IZQ casos LLAVE_DER

    PAR_DER         shift and go to state 188


state 149

    (128) for -> FOR PAR_IZQ forInicializador . END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    END_OF_LINE     shift and go to state 189


state 150

    (137) forInicializador -> tipoDatoForInicializador . IDENTIFICADOR IGUAL valorForInicializador

    IDENTIFICADOR   shift and go to state 190


state 151

    (138) forInicializador -> IDENTIFICADOR . IGUAL valorForInicializador

    IGUAL           shift and go to state 191


state 152

    (139) tipoDatoForInicializador -> FLOAT_TYPE .

    IDENTIFICADOR   reduce using rule 139 (tipoDatoForInicializador -> FLOAT_TYPE .)


state 153

    (140) tipoDatoForInicializador -> DOUBLE_TYPE .

    IDENTIFICADOR   reduce using rule 140 (tipoDatoForInicializador -> DOUBLE_TYPE .)


state 154

    (141) tipoDatoForInicializador -> INT_TYPE .

    IDENTIFICADOR   reduce using rule 141 (tipoDatoForInicializador -> INT_TYPE .)


state 155

    (148) lista -> LIST tipoLista IDENTIFICADOR . IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (94) declaracionList -> LIST tipoLista IDENTIFICADOR .

    IGUAL           shift and go to state 192
    END_OF_LINE     reduce using rule 94 (declaracionList -> LIST tipoLista IDENTIFICADOR .)


state 156

    (149) tipoLista -> MENOR_QUE valor_tipo_inicializador . MAYOR_QUE

    MAYOR_QUE       shift and go to state 193


state 157

    (27) valor_tipo_inicializador -> FLOAT_TYPE .

    MAYOR_QUE       reduce using rule 27 (valor_tipo_inicializador -> FLOAT_TYPE .)


state 158

    (28) valor_tipo_inicializador -> DOUBLE_TYPE .

    MAYOR_QUE       reduce using rule 28 (valor_tipo_inicializador -> DOUBLE_TYPE .)


state 159

    (29) valor_tipo_inicializador -> STRING_TYPE .

    MAYOR_QUE       reduce using rule 29 (valor_tipo_inicializador -> STRING_TYPE .)


state 160

    (30) valor_tipo_inicializador -> INT_TYPE .

    MAYOR_QUE       reduce using rule 30 (valor_tipo_inicializador -> INT_TYPE .)


state 161

    (31) valor_tipo_inicializador -> BOOL_TYPE .

    MAYOR_QUE       reduce using rule 31 (valor_tipo_inicializador -> BOOL_TYPE .)


state 162

    (32) valor_tipo_inicializador -> CHAR_TYPE .

    MAYOR_QUE       reduce using rule 32 (valor_tipo_inicializador -> CHAR_TYPE .)


state 163

    (33) valor_tipo_inicializador -> IDENTIFICADOR .

    MAYOR_QUE       reduce using rule 33 (valor_tipo_inicializador -> IDENTIFICADOR .)


state 164

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (96) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR

    MAYOR_QUE       shift and go to state 194


state 165

    (168) salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING . PAR_DER
    (54) operacion_string -> STRING . SUMA STRING
    (55) operacion_string -> STRING . SUMA IDENTIFICADOR

    PAR_DER         shift and go to state 195
    SUMA            shift and go to state 196


state 166

    (169) salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string . PAR_DER

    PAR_DER         shift and go to state 197


state 167

    (170) salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR . PAR_DER
    (56) operacion_string -> IDENTIFICADOR . SUMA STRING
    (57) operacion_string -> IDENTIFICADOR . SUMA IDENTIFICADOR

    PAR_DER         shift and go to state 198
    SUMA            shift and go to state 199


state 168

    (171) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA . STRING PAR_DER

    STRING          shift and go to state 200


state 169

    (172) salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 172 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)
    COMA            reduce using rule 172 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)
    PAR_DER         reduce using rule 172 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)


state 170

    (175) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR . PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (176) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR . PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    PAR_IZQ         shift and go to state 201


state 171

    (103) while_normal -> WHILE PAR_IZQ expresion_condicional . PAR_DER LLAVE_IZQ body_while LLAVE_DER

    PAR_DER         shift and go to state 202


state 172

    (162) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (163) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 92
    NO_IGUAL        shift and go to state 93
    MENOR_QUE       shift and go to state 94
    MENOR_O_IGUAL_QUE shift and go to state 95
    MAYOR_QUE       shift and go to state 96
    MAYOR_O_IGUAL_QUE shift and go to state 97

    operador_condicional           shift and go to state 83

state 173

    (104) while_do -> DO LLAVE_IZQ body_while . LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    LLAVE_DER       shift and go to state 203


state 174

    (105) body_while -> asignacion . END_OF_LINE
    (110) body_while -> asignacion . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 204


state 175

    (106) body_while -> declaracion . END_OF_LINE
    (111) body_while -> declaracion . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 205


state 176

    (107) body_while -> salida_entrada . END_OF_LINE
    (112) body_while -> salida_entrada . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 206


state 177

    (108) body_while -> BREAK . END_OF_LINE
    (113) body_while -> BREAK . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 207


state 178

    (109) body_while -> CONTINUE . END_OF_LINE
    (114) body_while -> CONTINUE . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 208


state 179

    (61) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (62) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (63) asignacionSimple -> IDENTIFICADOR . IGUAL salida_entrada
    (64) asignacionSimple -> IDENTIFICADOR . IGUAL asignacionEstructuraD
    (73) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (84) operadoresCompuestosLogic -> . AND_EQUAL
    (85) operadoresCompuestosLogic -> . OR_EQUAL
    (86) operadoresCompuestosLogic -> . EXC_OREQUAL
    (79) operadoresCompuestosNumber -> . AUMENTADO
    (80) operadoresCompuestosNumber -> . DECREMENTADO
    (81) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (82) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (83) operadoresCompuestosNumber -> . MODULO_DE

    IGUAL           shift and go to state 81
    AND_EQUAL       shift and go to state 98
    OR_EQUAL        shift and go to state 99
    EXC_OREQUAL     shift and go to state 100
    AUMENTADO       shift and go to state 101
    DECREMENTADO    shift and go to state 102
    MULTIPLICADO_POR shift and go to state 103
    DIVIDIDO_POR    shift and go to state 104
    MODULO_DE       shift and go to state 105

    operadoresCompuestosLogic      shift and go to state 85
    operadoresCompuestosNumber     shift and go to state 86

state 180

    (94) declaracionList -> LIST . tipoLista IDENTIFICADOR
    (149) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 111

    tipoLista                      shift and go to state 209

state 181

    (96) declaracionPila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    MENOR_QUE       shift and go to state 210


state 182

    (95) declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .

    END_OF_LINE     reduce using rule 95 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    COMA            reduce using rule 95 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    PAR_DER         reduce using rule 95 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)


state 183

    (68) asignacionPila -> NEW STACK . tipoLista PAR_IZQ PAR_DER
    (149) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 111

    tipoLista                      shift and go to state 211

state 184

    (69) asignacionQueue -> NEW QUEUE . tipoLista PAR_IZQ PAR_DER
    (149) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 111

    tipoLista                      shift and go to state 212

state 185

    (70) asignacionList -> NEW LIST . tipoLista PAR_IZQ PAR_DER
    (149) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 111

    tipoLista                      shift and go to state 213

state 186

    (153) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ . valor PAR_DER
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    IDENTIFICADOR   shift and go to state 121
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    valor                          shift and go to state 214
    numero                         shift and go to state 120

state 187

    (154) stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 215


state 188

    (115) switch_case -> SWITCH PAR_IZQ valor PAR_DER . LLAVE_IZQ casos LLAVE_DER

    LLAVE_IZQ       shift and go to state 216


state 189

    (128) for -> FOR PAR_IZQ forInicializador END_OF_LINE . forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (132) forCondicion -> . IDENTIFICADOR operador_condicional valorForCondicion

    IDENTIFICADOR   shift and go to state 218

    forCondicion                   shift and go to state 217

state 190

    (137) forInicializador -> tipoDatoForInicializador IDENTIFICADOR . IGUAL valorForInicializador

    IGUAL           shift and go to state 219


state 191

    (138) forInicializador -> IDENTIFICADOR IGUAL . valorForInicializador
    (142) valorForInicializador -> . FLOAT
    (143) valorForInicializador -> . DOUBLE
    (144) valorForInicializador -> . INT
    (145) valorForInicializador -> . IDENTIFICADOR

    FLOAT           shift and go to state 222
    DOUBLE          shift and go to state 223
    INT             shift and go to state 224
    IDENTIFICADOR   shift and go to state 220

    valorForInicializador          shift and go to state 221

state 192

    (148) lista -> LIST tipoLista IDENTIFICADOR IGUAL . NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE

    NEW             shift and go to state 225


state 193

    (149) tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .

    IDENTIFICADOR   reduce using rule 149 (tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .)
    PAR_IZQ         reduce using rule 149 (tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .)


state 194

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (96) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 226


state 195

    (168) salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .

    END_OF_LINE     reduce using rule 168 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)
    COMA            reduce using rule 168 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)
    PAR_DER         reduce using rule 168 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)


state 196

    (54) operacion_string -> STRING SUMA . STRING
    (55) operacion_string -> STRING SUMA . IDENTIFICADOR

    STRING          shift and go to state 227
    IDENTIFICADOR   shift and go to state 228


state 197

    (169) salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .

    END_OF_LINE     reduce using rule 169 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)
    COMA            reduce using rule 169 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)
    PAR_DER         reduce using rule 169 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)


state 198

    (170) salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .

    END_OF_LINE     reduce using rule 170 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)
    COMA            reduce using rule 170 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)
    PAR_DER         reduce using rule 170 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)


state 199

    (56) operacion_string -> IDENTIFICADOR SUMA . STRING
    (57) operacion_string -> IDENTIFICADOR SUMA . IDENTIFICADOR

    STRING          shift and go to state 230
    IDENTIFICADOR   shift and go to state 229


state 200

    (171) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING . PAR_DER

    PAR_DER         shift and go to state 231


state 201

    (175) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ . PAR_DER LLAVE_IZQ body LLAVE_DER
    (176) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ . parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (177) parametrosF -> . declaracion
    (178) parametrosF -> . declaracion COMA parametrosF
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    PAR_DER         shift and go to state 232
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    parametrosF                    shift and go to state 233
    declaracion                    shift and go to state 234
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 202

    (103) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER . LLAVE_IZQ body_while LLAVE_DER

    LLAVE_IZQ       shift and go to state 235


state 203

    (104) while_do -> DO LLAVE_IZQ body_while LLAVE_DER . WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    WHILE           shift and go to state 236


state 204

    (105) body_while -> asignacion END_OF_LINE .
    (110) body_while -> asignacion END_OF_LINE . body_while
    (105) body_while -> . asignacion END_OF_LINE
    (106) body_while -> . declaracion END_OF_LINE
    (107) body_while -> . salida_entrada END_OF_LINE
    (108) body_while -> . BREAK END_OF_LINE
    (109) body_while -> . CONTINUE END_OF_LINE
    (110) body_while -> . asignacion END_OF_LINE body_while
    (111) body_while -> . declaracion END_OF_LINE body_while
    (112) body_while -> . salida_entrada END_OF_LINE body_while
    (113) body_while -> . BREAK END_OF_LINE body_while
    (114) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 105 (body_while -> asignacion END_OF_LINE .)
    BREAK           shift and go to state 177
    CONTINUE        shift and go to state 178
    IDENTIFICADOR   shift and go to state 179
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    asignacion                     shift and go to state 174
    body_while                     shift and go to state 237
    declaracion                    shift and go to state 175
    salida_entrada                 shift and go to state 176
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 205

    (106) body_while -> declaracion END_OF_LINE .
    (111) body_while -> declaracion END_OF_LINE . body_while
    (105) body_while -> . asignacion END_OF_LINE
    (106) body_while -> . declaracion END_OF_LINE
    (107) body_while -> . salida_entrada END_OF_LINE
    (108) body_while -> . BREAK END_OF_LINE
    (109) body_while -> . CONTINUE END_OF_LINE
    (110) body_while -> . asignacion END_OF_LINE body_while
    (111) body_while -> . declaracion END_OF_LINE body_while
    (112) body_while -> . salida_entrada END_OF_LINE body_while
    (113) body_while -> . BREAK END_OF_LINE body_while
    (114) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 106 (body_while -> declaracion END_OF_LINE .)
    BREAK           shift and go to state 177
    CONTINUE        shift and go to state 178
    IDENTIFICADOR   shift and go to state 179
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    declaracion                    shift and go to state 175
    body_while                     shift and go to state 238
    asignacion                     shift and go to state 174
    salida_entrada                 shift and go to state 176
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 206

    (107) body_while -> salida_entrada END_OF_LINE .
    (112) body_while -> salida_entrada END_OF_LINE . body_while
    (105) body_while -> . asignacion END_OF_LINE
    (106) body_while -> . declaracion END_OF_LINE
    (107) body_while -> . salida_entrada END_OF_LINE
    (108) body_while -> . BREAK END_OF_LINE
    (109) body_while -> . CONTINUE END_OF_LINE
    (110) body_while -> . asignacion END_OF_LINE body_while
    (111) body_while -> . declaracion END_OF_LINE body_while
    (112) body_while -> . salida_entrada END_OF_LINE body_while
    (113) body_while -> . BREAK END_OF_LINE body_while
    (114) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 107 (body_while -> salida_entrada END_OF_LINE .)
    BREAK           shift and go to state 177
    CONTINUE        shift and go to state 178
    IDENTIFICADOR   shift and go to state 179
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    salida_entrada                 shift and go to state 176
    body_while                     shift and go to state 239
    asignacion                     shift and go to state 174
    declaracion                    shift and go to state 175
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 207

    (108) body_while -> BREAK END_OF_LINE .
    (113) body_while -> BREAK END_OF_LINE . body_while
    (105) body_while -> . asignacion END_OF_LINE
    (106) body_while -> . declaracion END_OF_LINE
    (107) body_while -> . salida_entrada END_OF_LINE
    (108) body_while -> . BREAK END_OF_LINE
    (109) body_while -> . CONTINUE END_OF_LINE
    (110) body_while -> . asignacion END_OF_LINE body_while
    (111) body_while -> . declaracion END_OF_LINE body_while
    (112) body_while -> . salida_entrada END_OF_LINE body_while
    (113) body_while -> . BREAK END_OF_LINE body_while
    (114) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 108 (body_while -> BREAK END_OF_LINE .)
    BREAK           shift and go to state 177
    CONTINUE        shift and go to state 178
    IDENTIFICADOR   shift and go to state 179
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    body_while                     shift and go to state 240
    asignacion                     shift and go to state 174
    declaracion                    shift and go to state 175
    salida_entrada                 shift and go to state 176
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 208

    (109) body_while -> CONTINUE END_OF_LINE .
    (114) body_while -> CONTINUE END_OF_LINE . body_while
    (105) body_while -> . asignacion END_OF_LINE
    (106) body_while -> . declaracion END_OF_LINE
    (107) body_while -> . salida_entrada END_OF_LINE
    (108) body_while -> . BREAK END_OF_LINE
    (109) body_while -> . CONTINUE END_OF_LINE
    (110) body_while -> . asignacion END_OF_LINE body_while
    (111) body_while -> . declaracion END_OF_LINE body_while
    (112) body_while -> . salida_entrada END_OF_LINE body_while
    (113) body_while -> . BREAK END_OF_LINE body_while
    (114) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 109 (body_while -> CONTINUE END_OF_LINE .)
    BREAK           shift and go to state 177
    CONTINUE        shift and go to state 178
    IDENTIFICADOR   shift and go to state 179
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    body_while                     shift and go to state 241
    asignacion                     shift and go to state 174
    declaracion                    shift and go to state 175
    salida_entrada                 shift and go to state 176
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 209

    (94) declaracionList -> LIST tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 242


state 210

    (96) declaracionPila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (27) valor_tipo_inicializador -> . FLOAT_TYPE
    (28) valor_tipo_inicializador -> . DOUBLE_TYPE
    (29) valor_tipo_inicializador -> . STRING_TYPE
    (30) valor_tipo_inicializador -> . INT_TYPE
    (31) valor_tipo_inicializador -> . BOOL_TYPE
    (32) valor_tipo_inicializador -> . CHAR_TYPE
    (33) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 157
    DOUBLE_TYPE     shift and go to state 158
    STRING_TYPE     shift and go to state 159
    INT_TYPE        shift and go to state 160
    BOOL_TYPE       shift and go to state 161
    CHAR_TYPE       shift and go to state 162
    IDENTIFICADOR   shift and go to state 163

    valor_tipo_inicializador       shift and go to state 243

state 211

    (68) asignacionPila -> NEW STACK tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 244


state 212

    (69) asignacionQueue -> NEW QUEUE tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 245


state 213

    (70) asignacionList -> NEW LIST tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 246


state 214

    (153) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor . PAR_DER

    PAR_DER         shift and go to state 247


state 215

    (154) stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 154 (stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER .)


state 216

    (115) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ . casos LLAVE_DER
    (116) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (117) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (118) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (119) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    CASE            shift and go to state 249

    casos                          shift and go to state 248

state 217

    (128) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion . END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    END_OF_LINE     shift and go to state 250


state 218

    (132) forCondicion -> IDENTIFICADOR . operador_condicional valorForCondicion
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 92
    NO_IGUAL        shift and go to state 93
    MENOR_QUE       shift and go to state 94
    MENOR_O_IGUAL_QUE shift and go to state 95
    MAYOR_QUE       shift and go to state 96
    MAYOR_O_IGUAL_QUE shift and go to state 97

    operador_condicional           shift and go to state 251

state 219

    (137) forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL . valorForInicializador
    (142) valorForInicializador -> . FLOAT
    (143) valorForInicializador -> . DOUBLE
    (144) valorForInicializador -> . INT
    (145) valorForInicializador -> . IDENTIFICADOR

    FLOAT           shift and go to state 222
    DOUBLE          shift and go to state 223
    INT             shift and go to state 224
    IDENTIFICADOR   shift and go to state 220

    valorForInicializador          shift and go to state 252

state 220

    (145) valorForInicializador -> IDENTIFICADOR .

    END_OF_LINE     reduce using rule 145 (valorForInicializador -> IDENTIFICADOR .)


state 221

    (138) forInicializador -> IDENTIFICADOR IGUAL valorForInicializador .

    END_OF_LINE     reduce using rule 138 (forInicializador -> IDENTIFICADOR IGUAL valorForInicializador .)


state 222

    (142) valorForInicializador -> FLOAT .

    END_OF_LINE     reduce using rule 142 (valorForInicializador -> FLOAT .)


state 223

    (143) valorForInicializador -> DOUBLE .

    END_OF_LINE     reduce using rule 143 (valorForInicializador -> DOUBLE .)


state 224

    (144) valorForInicializador -> INT .

    END_OF_LINE     reduce using rule 144 (valorForInicializador -> INT .)


state 225

    (148) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW . LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE

    LIST            shift and go to state 253


state 226

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR . IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (96) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .

    IGUAL           shift and go to state 254
    END_OF_LINE     reduce using rule 96 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)


state 227

    (54) operacion_string -> STRING SUMA STRING .

    PAR_DER         reduce using rule 54 (operacion_string -> STRING SUMA STRING .)


state 228

    (55) operacion_string -> STRING SUMA IDENTIFICADOR .

    PAR_DER         reduce using rule 55 (operacion_string -> STRING SUMA IDENTIFICADOR .)


state 229

    (57) operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR .

    PAR_DER         reduce using rule 57 (operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR .)


state 230

    (56) operacion_string -> IDENTIFICADOR SUMA STRING .

    PAR_DER         reduce using rule 56 (operacion_string -> IDENTIFICADOR SUMA STRING .)


state 231

    (171) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .

    END_OF_LINE     reduce using rule 171 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)
    COMA            reduce using rule 171 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)
    PAR_DER         reduce using rule 171 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)


state 232

    (175) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER . LLAVE_IZQ body LLAVE_DER

    LLAVE_IZQ       shift and go to state 255


state 233

    (176) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF . PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    PAR_DER         shift and go to state 256


state 234

    (177) parametrosF -> declaracion .
    (178) parametrosF -> declaracion . COMA parametrosF

    PAR_DER         reduce using rule 177 (parametrosF -> declaracion .)
    COMA            shift and go to state 257


state 235

    (103) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ . body_while LLAVE_DER
    (105) body_while -> . asignacion END_OF_LINE
    (106) body_while -> . declaracion END_OF_LINE
    (107) body_while -> . salida_entrada END_OF_LINE
    (108) body_while -> . BREAK END_OF_LINE
    (109) body_while -> . CONTINUE END_OF_LINE
    (110) body_while -> . asignacion END_OF_LINE body_while
    (111) body_while -> . declaracion END_OF_LINE body_while
    (112) body_while -> . salida_entrada END_OF_LINE body_while
    (113) body_while -> . BREAK END_OF_LINE body_while
    (114) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    BREAK           shift and go to state 177
    CONTINUE        shift and go to state 178
    IDENTIFICADOR   shift and go to state 179
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    body_while                     shift and go to state 258
    asignacion                     shift and go to state 174
    declaracion                    shift and go to state 175
    salida_entrada                 shift and go to state 176
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 236

    (104) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE . PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 259


state 237

    (110) body_while -> asignacion END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 110 (body_while -> asignacion END_OF_LINE body_while .)


state 238

    (111) body_while -> declaracion END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 111 (body_while -> declaracion END_OF_LINE body_while .)


state 239

    (112) body_while -> salida_entrada END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 112 (body_while -> salida_entrada END_OF_LINE body_while .)


state 240

    (113) body_while -> BREAK END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 113 (body_while -> BREAK END_OF_LINE body_while .)


state 241

    (114) body_while -> CONTINUE END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 114 (body_while -> CONTINUE END_OF_LINE body_while .)


state 242

    (94) declaracionList -> LIST tipoLista IDENTIFICADOR .

    END_OF_LINE     reduce using rule 94 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    COMA            reduce using rule 94 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    PAR_DER         reduce using rule 94 (declaracionList -> LIST tipoLista IDENTIFICADOR .)


state 243

    (96) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR

    MAYOR_QUE       shift and go to state 260


state 244

    (68) asignacionPila -> NEW STACK tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 261


state 245

    (69) asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 262


state 246

    (70) asignacionList -> NEW LIST tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 263


state 247

    (153) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER .

    END_OF_LINE     reduce using rule 153 (stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER .)


state 248

    (115) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos . LLAVE_DER

    LLAVE_DER       shift and go to state 264


state 249

    (116) casos -> CASE . valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (117) casos -> CASE . valor DOS_PUNTOS BREAK END_OF_LINE
    (118) casos -> CASE . valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (119) casos -> CASE . valor DOS_PUNTOS BREAK END_OF_LINE casos
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    IDENTIFICADOR   shift and go to state 121
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    valor                          shift and go to state 265
    numero                         shift and go to state 120

state 250

    (128) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE . forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (129) forIterador -> . IDENTIFICADOR operadorForIteracion

    IDENTIFICADOR   shift and go to state 267

    forIterador                    shift and go to state 266

state 251

    (132) forCondicion -> IDENTIFICADOR operador_condicional . valorForCondicion
    (133) valorForCondicion -> . FLOAT
    (134) valorForCondicion -> . DOUBLE
    (135) valorForCondicion -> . INT
    (136) valorForCondicion -> . IDENTIFICADOR

    FLOAT           shift and go to state 270
    DOUBLE          shift and go to state 271
    INT             shift and go to state 272
    IDENTIFICADOR   shift and go to state 268

    valorForCondicion              shift and go to state 269

state 252

    (137) forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador .

    END_OF_LINE     reduce using rule 137 (forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador .)


state 253

    (148) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST . tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (149) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 111

    tipoLista                      shift and go to state 273

state 254

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL . NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    NEW             shift and go to state 274


state 255

    (175) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ . body LLAVE_DER
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (97) comparacion -> . valor operador_realacional valor
    (98) estructura_control -> . while
    (99) estructura_control -> . switch_case
    (100) estructura_control -> . for
    (146) estructura_datos -> . lista
    (147) estructura_datos -> . pila
    (155) expresion -> . expresion_operacion_aritmetica
    (156) expresion -> . expresion_condicional
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (173) funcion -> . funcion_tipo_uno
    (174) funcion -> . funcion_tipo_tres
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (58) empty -> . END_OF_LINE
    (151) funciones_estructura_datos -> . stack_push
    (152) funciones_estructura_datos -> . stack_pop
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (101) while -> . while_normal
    (102) while -> . while_do
    (115) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (128) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (148) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (150) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (157) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (158) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (159) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (160) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (161) expresion_condicional -> . numero operador_condicional numero
    (162) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (163) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (164) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (175) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (176) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (153) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (154) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (103) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (104) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (34) modificador_acceso -> . PRIVATE
    (35) modificador_acceso -> . PROTECTED
    (36) modificador_acceso -> . PUBLIC
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 29
    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    SWITCH          shift and go to state 42
    FOR             shift and go to state 43
    LIST            shift and go to state 44
    STACK           shift and go to state 45
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60
    WHILE           shift and go to state 61
    DO              shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    PUBLIC          shift and go to state 65
    QUEUE           shift and go to state 66

    modificador_acceso             shift and go to state 48
    body                           shift and go to state 275
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor                          shift and go to state 15
    while                          shift and go to state 16
    switch_case                    shift and go to state 17
    for                            shift and go to state 18
    lista                          shift and go to state 19
    pila                           shift and go to state 20
    expresion_operacion_aritmetica shift and go to state 21
    expresion_condicional          shift and go to state 22
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    funcion_tipo_uno               shift and go to state 26
    funcion_tipo_tres              shift and go to state 27
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    stack_push                     shift and go to state 32
    stack_pop                      shift and go to state 33
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    numero                         shift and go to state 37
    while_normal                   shift and go to state 40
    while_do                       shift and go to state 41
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 256

    (176) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER . LLAVE_IZQ bodyF LLAVE_DER

    LLAVE_IZQ       shift and go to state 276


state 257

    (178) parametrosF -> declaracion COMA . parametrosF
    (177) parametrosF -> . declaracion
    (178) parametrosF -> . declaracion COMA parametrosF
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    declaracion                    shift and go to state 234
    parametrosF                    shift and go to state 277
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 258

    (103) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while . LLAVE_DER

    LLAVE_DER       shift and go to state 278


state 259

    (104) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ . expresion_condicional PAR_DER END_OF_LINE
    (161) expresion_condicional -> . numero operador_condicional numero
    (162) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (163) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (164) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 172
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    expresion_condicional          shift and go to state 279
    numero                         shift and go to state 140

state 260

    (96) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 280


state 261

    (68) asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 68 (asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER .)
    COMA            reduce using rule 68 (asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER .)
    PAR_DER         reduce using rule 68 (asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER .)


state 262

    (69) asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 69 (asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER .)
    COMA            reduce using rule 69 (asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER .)
    PAR_DER         reduce using rule 69 (asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER .)


state 263

    (70) asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 70 (asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER .)
    COMA            reduce using rule 70 (asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER .)
    PAR_DER         reduce using rule 70 (asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER .)


state 264

    (115) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .

    $end            reduce using rule 115 (switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .)
    LLAVE_DER       reduce using rule 115 (switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .)


state 265

    (116) casos -> CASE valor . DOS_PUNTOS body_case BREAK END_OF_LINE
    (117) casos -> CASE valor . DOS_PUNTOS BREAK END_OF_LINE
    (118) casos -> CASE valor . DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (119) casos -> CASE valor . DOS_PUNTOS BREAK END_OF_LINE casos

    DOS_PUNTOS      shift and go to state 281


state 266

    (128) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador . PAR_DER LLAVE_IZQ body LLAVE_DER

    PAR_DER         shift and go to state 282


state 267

    (129) forIterador -> IDENTIFICADOR . operadorForIteracion
    (130) operadorForIteracion -> . INCREMENTO
    (131) operadorForIteracion -> . DECREMENTO

    INCREMENTO      shift and go to state 284
    DECREMENTO      shift and go to state 285

    operadorForIteracion           shift and go to state 283

state 268

    (136) valorForCondicion -> IDENTIFICADOR .

    END_OF_LINE     reduce using rule 136 (valorForCondicion -> IDENTIFICADOR .)


state 269

    (132) forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion .

    END_OF_LINE     reduce using rule 132 (forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion .)


state 270

    (133) valorForCondicion -> FLOAT .

    END_OF_LINE     reduce using rule 133 (valorForCondicion -> FLOAT .)


state 271

    (134) valorForCondicion -> DOUBLE .

    END_OF_LINE     reduce using rule 134 (valorForCondicion -> DOUBLE .)


state 272

    (135) valorForCondicion -> INT .

    END_OF_LINE     reduce using rule 135 (valorForCondicion -> INT .)


state 273

    (148) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista . PAR_IZQ PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 286


state 274

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    STACK           shift and go to state 287


state 275

    (175) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body . LLAVE_DER

    LLAVE_DER       shift and go to state 288


state 276

    (176) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ . bodyF LLAVE_DER
    (179) bodyF -> . asignacion END_OF_LINE
    (180) bodyF -> . declaracion END_OF_LINE
    (181) bodyF -> . salida_entrada END_OF_LINE
    (182) bodyF -> . asignacion END_OF_LINE bodyF
    (183) bodyF -> . declaracion END_OF_LINE bodyF
    (184) bodyF -> . salida_entrada END_OF_LINE bodyF
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 179
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    bodyF                          shift and go to state 289
    asignacion                     shift and go to state 290
    declaracion                    shift and go to state 291
    salida_entrada                 shift and go to state 292
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 277

    (178) parametrosF -> declaracion COMA parametrosF .

    PAR_DER         reduce using rule 178 (parametrosF -> declaracion COMA parametrosF .)


state 278

    (103) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .

    $end            reduce using rule 103 (while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .)
    LLAVE_DER       reduce using rule 103 (while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .)


state 279

    (104) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 293


state 280

    (96) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .

    END_OF_LINE     reduce using rule 96 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    COMA            reduce using rule 96 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    PAR_DER         reduce using rule 96 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)


state 281

    (116) casos -> CASE valor DOS_PUNTOS . body_case BREAK END_OF_LINE
    (117) casos -> CASE valor DOS_PUNTOS . BREAK END_OF_LINE
    (118) casos -> CASE valor DOS_PUNTOS . body_case BREAK END_OF_LINE casos
    (119) casos -> CASE valor DOS_PUNTOS . BREAK END_OF_LINE casos
    (120) body_case -> . asignacion END_OF_LINE
    (121) body_case -> . declaracion END_OF_LINE
    (122) body_case -> . comparacion END_OF_LINE
    (123) body_case -> . salida_entrada END_OF_LINE
    (124) body_case -> . asignacion END_OF_LINE body_case
    (125) body_case -> . declaracion END_OF_LINE body_case
    (126) body_case -> . salida_entrada END_OF_LINE body_case
    (127) body_case -> . comparacion END_OF_LINE body_case
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (97) comparacion -> . valor operador_realacional valor
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BREAK           shift and go to state 295
    IDENTIFICADOR   shift and go to state 300
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    valor                          shift and go to state 15
    body_case                      shift and go to state 294
    asignacion                     shift and go to state 296
    declaracion                    shift and go to state 297
    comparacion                    shift and go to state 298
    salida_entrada                 shift and go to state 299
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57
    numero                         shift and go to state 120

state 282

    (128) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER . LLAVE_IZQ body LLAVE_DER

    LLAVE_IZQ       shift and go to state 301


state 283

    (129) forIterador -> IDENTIFICADOR operadorForIteracion .

    PAR_DER         reduce using rule 129 (forIterador -> IDENTIFICADOR operadorForIteracion .)


state 284

    (130) operadorForIteracion -> INCREMENTO .

    PAR_DER         reduce using rule 130 (operadorForIteracion -> INCREMENTO .)


state 285

    (131) operadorForIteracion -> DECREMENTO .

    PAR_DER         reduce using rule 131 (operadorForIteracion -> DECREMENTO .)


state 286

    (148) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 302


state 287

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    MENOR_QUE       shift and go to state 303


state 288

    (175) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .

    $end            reduce using rule 175 (funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .)
    LLAVE_DER       reduce using rule 175 (funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .)


state 289

    (176) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF . LLAVE_DER

    LLAVE_DER       shift and go to state 304


state 290

    (179) bodyF -> asignacion . END_OF_LINE
    (182) bodyF -> asignacion . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 305


state 291

    (180) bodyF -> declaracion . END_OF_LINE
    (183) bodyF -> declaracion . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 306


state 292

    (181) bodyF -> salida_entrada . END_OF_LINE
    (184) bodyF -> salida_entrada . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 307


state 293

    (104) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 308


state 294

    (116) casos -> CASE valor DOS_PUNTOS body_case . BREAK END_OF_LINE
    (118) casos -> CASE valor DOS_PUNTOS body_case . BREAK END_OF_LINE casos

    BREAK           shift and go to state 309


state 295

    (117) casos -> CASE valor DOS_PUNTOS BREAK . END_OF_LINE
    (119) casos -> CASE valor DOS_PUNTOS BREAK . END_OF_LINE casos

    END_OF_LINE     shift and go to state 310


state 296

    (120) body_case -> asignacion . END_OF_LINE
    (124) body_case -> asignacion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 311


state 297

    (121) body_case -> declaracion . END_OF_LINE
    (125) body_case -> declaracion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 312


state 298

    (122) body_case -> comparacion . END_OF_LINE
    (127) body_case -> comparacion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 313


state 299

    (123) body_case -> salida_entrada . END_OF_LINE
    (126) body_case -> salida_entrada . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 314


state 300

    (61) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (62) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (63) asignacionSimple -> IDENTIFICADOR . IGUAL salida_entrada
    (64) asignacionSimple -> IDENTIFICADOR . IGUAL asignacionEstructuraD
    (15) valor -> IDENTIFICADOR .
    (73) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (84) operadoresCompuestosLogic -> . AND_EQUAL
    (85) operadoresCompuestosLogic -> . OR_EQUAL
    (86) operadoresCompuestosLogic -> . EXC_OREQUAL
    (79) operadoresCompuestosNumber -> . AUMENTADO
    (80) operadoresCompuestosNumber -> . DECREMENTADO
    (81) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (82) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (83) operadoresCompuestosNumber -> . MODULO_DE

    IGUAL           shift and go to state 81
    IGUAL_IGUAL     reduce using rule 15 (valor -> IDENTIFICADOR .)
    NO_IGUAL        reduce using rule 15 (valor -> IDENTIFICADOR .)
    MENOR_QUE       reduce using rule 15 (valor -> IDENTIFICADOR .)
    MENOR_O_IGUAL_QUE reduce using rule 15 (valor -> IDENTIFICADOR .)
    MAYOR_QUE       reduce using rule 15 (valor -> IDENTIFICADOR .)
    MAYOR_O_IGUAL_QUE reduce using rule 15 (valor -> IDENTIFICADOR .)
    AND_EQUAL       shift and go to state 98
    OR_EQUAL        shift and go to state 99
    EXC_OREQUAL     shift and go to state 100
    AUMENTADO       shift and go to state 101
    DECREMENTADO    shift and go to state 102
    MULTIPLICADO_POR shift and go to state 103
    DIVIDIDO_POR    shift and go to state 104
    MODULO_DE       shift and go to state 105

    operadoresCompuestosLogic      shift and go to state 85
    operadoresCompuestosNumber     shift and go to state 86

state 301

    (128) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ . body LLAVE_DER
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (97) comparacion -> . valor operador_realacional valor
    (98) estructura_control -> . while
    (99) estructura_control -> . switch_case
    (100) estructura_control -> . for
    (146) estructura_datos -> . lista
    (147) estructura_datos -> . pila
    (155) expresion -> . expresion_operacion_aritmetica
    (156) expresion -> . expresion_condicional
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (173) funcion -> . funcion_tipo_uno
    (174) funcion -> . funcion_tipo_tres
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (58) empty -> . END_OF_LINE
    (151) funciones_estructura_datos -> . stack_push
    (152) funciones_estructura_datos -> . stack_pop
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (101) while -> . while_normal
    (102) while -> . while_do
    (115) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (128) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (148) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (150) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (157) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (158) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (159) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (160) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (161) expresion_condicional -> . numero operador_condicional numero
    (162) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (163) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (164) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (175) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (176) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (153) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (154) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (103) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (104) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (34) modificador_acceso -> . PRIVATE
    (35) modificador_acceso -> . PROTECTED
    (36) modificador_acceso -> . PUBLIC
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 29
    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    SWITCH          shift and go to state 42
    FOR             shift and go to state 43
    LIST            shift and go to state 44
    STACK           shift and go to state 45
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60
    WHILE           shift and go to state 61
    DO              shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    PUBLIC          shift and go to state 65
    QUEUE           shift and go to state 66

    body                           shift and go to state 315
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor                          shift and go to state 15
    while                          shift and go to state 16
    switch_case                    shift and go to state 17
    for                            shift and go to state 18
    lista                          shift and go to state 19
    pila                           shift and go to state 20
    expresion_operacion_aritmetica shift and go to state 21
    expresion_condicional          shift and go to state 22
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    funcion_tipo_uno               shift and go to state 26
    funcion_tipo_tres              shift and go to state 27
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    stack_push                     shift and go to state 32
    stack_pop                      shift and go to state 33
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    numero                         shift and go to state 37
    while_normal                   shift and go to state 40
    while_do                       shift and go to state 41
    modificador_acceso             shift and go to state 48
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 302

    (148) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 316


state 303

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (27) valor_tipo_inicializador -> . FLOAT_TYPE
    (28) valor_tipo_inicializador -> . DOUBLE_TYPE
    (29) valor_tipo_inicializador -> . STRING_TYPE
    (30) valor_tipo_inicializador -> . INT_TYPE
    (31) valor_tipo_inicializador -> . BOOL_TYPE
    (32) valor_tipo_inicializador -> . CHAR_TYPE
    (33) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 157
    DOUBLE_TYPE     shift and go to state 158
    STRING_TYPE     shift and go to state 159
    INT_TYPE        shift and go to state 160
    BOOL_TYPE       shift and go to state 161
    CHAR_TYPE       shift and go to state 162
    IDENTIFICADOR   shift and go to state 163

    valor_tipo_inicializador       shift and go to state 317

state 304

    (176) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .

    $end            reduce using rule 176 (funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .)
    LLAVE_DER       reduce using rule 176 (funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .)


state 305

    (179) bodyF -> asignacion END_OF_LINE .
    (182) bodyF -> asignacion END_OF_LINE . bodyF
    (179) bodyF -> . asignacion END_OF_LINE
    (180) bodyF -> . declaracion END_OF_LINE
    (181) bodyF -> . salida_entrada END_OF_LINE
    (182) bodyF -> . asignacion END_OF_LINE bodyF
    (183) bodyF -> . declaracion END_OF_LINE bodyF
    (184) bodyF -> . salida_entrada END_OF_LINE bodyF
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 179 (bodyF -> asignacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 179
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    asignacion                     shift and go to state 290
    bodyF                          shift and go to state 318
    declaracion                    shift and go to state 291
    salida_entrada                 shift and go to state 292
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 306

    (180) bodyF -> declaracion END_OF_LINE .
    (183) bodyF -> declaracion END_OF_LINE . bodyF
    (179) bodyF -> . asignacion END_OF_LINE
    (180) bodyF -> . declaracion END_OF_LINE
    (181) bodyF -> . salida_entrada END_OF_LINE
    (182) bodyF -> . asignacion END_OF_LINE bodyF
    (183) bodyF -> . declaracion END_OF_LINE bodyF
    (184) bodyF -> . salida_entrada END_OF_LINE bodyF
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 180 (bodyF -> declaracion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 179
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    declaracion                    shift and go to state 291
    bodyF                          shift and go to state 319
    asignacion                     shift and go to state 290
    salida_entrada                 shift and go to state 292
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 307

    (181) bodyF -> salida_entrada END_OF_LINE .
    (184) bodyF -> salida_entrada END_OF_LINE . bodyF
    (179) bodyF -> . asignacion END_OF_LINE
    (180) bodyF -> . declaracion END_OF_LINE
    (181) bodyF -> . salida_entrada END_OF_LINE
    (182) bodyF -> . asignacion END_OF_LINE bodyF
    (183) bodyF -> . declaracion END_OF_LINE bodyF
    (184) bodyF -> . salida_entrada END_OF_LINE bodyF
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 181 (bodyF -> salida_entrada END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 179
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181

    salida_entrada                 shift and go to state 292
    bodyF                          shift and go to state 320
    asignacion                     shift and go to state 290
    declaracion                    shift and go to state 291
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57

state 308

    (104) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .

    $end            reduce using rule 104 (while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 104 (while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .)


state 309

    (116) casos -> CASE valor DOS_PUNTOS body_case BREAK . END_OF_LINE
    (118) casos -> CASE valor DOS_PUNTOS body_case BREAK . END_OF_LINE casos

    END_OF_LINE     shift and go to state 321


state 310

    (117) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE .
    (119) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE . casos
    (116) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (117) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (118) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (119) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    LLAVE_DER       reduce using rule 117 (casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE .)
    CASE            shift and go to state 249

    casos                          shift and go to state 322

state 311

    (120) body_case -> asignacion END_OF_LINE .
    (124) body_case -> asignacion END_OF_LINE . body_case
    (120) body_case -> . asignacion END_OF_LINE
    (121) body_case -> . declaracion END_OF_LINE
    (122) body_case -> . comparacion END_OF_LINE
    (123) body_case -> . salida_entrada END_OF_LINE
    (124) body_case -> . asignacion END_OF_LINE body_case
    (125) body_case -> . declaracion END_OF_LINE body_case
    (126) body_case -> . salida_entrada END_OF_LINE body_case
    (127) body_case -> . comparacion END_OF_LINE body_case
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (97) comparacion -> . valor operador_realacional valor
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BREAK           reduce using rule 120 (body_case -> asignacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 300
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    asignacion                     shift and go to state 296
    body_case                      shift and go to state 323
    declaracion                    shift and go to state 297
    comparacion                    shift and go to state 298
    salida_entrada                 shift and go to state 299
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    valor                          shift and go to state 15
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57
    numero                         shift and go to state 120

state 312

    (121) body_case -> declaracion END_OF_LINE .
    (125) body_case -> declaracion END_OF_LINE . body_case
    (120) body_case -> . asignacion END_OF_LINE
    (121) body_case -> . declaracion END_OF_LINE
    (122) body_case -> . comparacion END_OF_LINE
    (123) body_case -> . salida_entrada END_OF_LINE
    (124) body_case -> . asignacion END_OF_LINE body_case
    (125) body_case -> . declaracion END_OF_LINE body_case
    (126) body_case -> . salida_entrada END_OF_LINE body_case
    (127) body_case -> . comparacion END_OF_LINE body_case
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (97) comparacion -> . valor operador_realacional valor
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BREAK           reduce using rule 121 (body_case -> declaracion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 300
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    declaracion                    shift and go to state 297
    body_case                      shift and go to state 324
    asignacion                     shift and go to state 296
    comparacion                    shift and go to state 298
    salida_entrada                 shift and go to state 299
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    valor                          shift and go to state 15
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57
    numero                         shift and go to state 120

state 313

    (122) body_case -> comparacion END_OF_LINE .
    (127) body_case -> comparacion END_OF_LINE . body_case
    (120) body_case -> . asignacion END_OF_LINE
    (121) body_case -> . declaracion END_OF_LINE
    (122) body_case -> . comparacion END_OF_LINE
    (123) body_case -> . salida_entrada END_OF_LINE
    (124) body_case -> . asignacion END_OF_LINE body_case
    (125) body_case -> . declaracion END_OF_LINE body_case
    (126) body_case -> . salida_entrada END_OF_LINE body_case
    (127) body_case -> . comparacion END_OF_LINE body_case
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (97) comparacion -> . valor operador_realacional valor
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BREAK           reduce using rule 122 (body_case -> comparacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 300
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    comparacion                    shift and go to state 298
    body_case                      shift and go to state 325
    asignacion                     shift and go to state 296
    declaracion                    shift and go to state 297
    salida_entrada                 shift and go to state 299
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    valor                          shift and go to state 15
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57
    numero                         shift and go to state 120

state 314

    (123) body_case -> salida_entrada END_OF_LINE .
    (126) body_case -> salida_entrada END_OF_LINE . body_case
    (120) body_case -> . asignacion END_OF_LINE
    (121) body_case -> . declaracion END_OF_LINE
    (122) body_case -> . comparacion END_OF_LINE
    (123) body_case -> . salida_entrada END_OF_LINE
    (124) body_case -> . asignacion END_OF_LINE body_case
    (125) body_case -> . declaracion END_OF_LINE body_case
    (126) body_case -> . salida_entrada END_OF_LINE body_case
    (127) body_case -> . comparacion END_OF_LINE body_case
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (87) declaracion -> . valor_tipo IDENTIFICADOR
    (88) declaracion -> . declaracionEstructuraD
    (89) declaracion -> . declaracionAsignacion
    (97) comparacion -> . valor operador_realacional valor
    (165) salida_entrada -> . salida_uno
    (166) salida_entrada -> . salida_dos
    (167) salida_entrada -> . salida_tres
    (61) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (62) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (63) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL asignacionEstructuraD
    (71) asignacionCompuesta -> . asignacionCompuesta_Logic
    (72) asignacionCompuesta -> . asignacionCompuesta_Number
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (91) declaracionEstructuraD -> . declaracionList
    (92) declaracionEstructuraD -> . declaracionQueue
    (93) declaracionEstructuraD -> . declaracionPila
    (90) declaracionAsignacion -> . valor_tipo asignacionSimple
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (168) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (169) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (170) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (171) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (172) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (73) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (74) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (75) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (76) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (77) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (78) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (94) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (95) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (96) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BREAK           reduce using rule 123 (body_case -> salida_entrada END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 300
    CHAR_TYPE       shift and go to state 49
    FLOAT_TYPE      shift and go to state 50
    DOUBLE_TYPE     shift and go to state 51
    INT_TYPE        shift and go to state 52
    BOOL_TYPE       shift and go to state 53
    STRING_TYPE     shift and go to state 54
    CHAR            shift and go to state 36
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    CONSOLE_WRITELINE shift and go to state 46
    CONSOLE_READLINE shift and go to state 47
    LIST            shift and go to state 180
    QUEUE           shift and go to state 66
    STACK           shift and go to state 181
    FLOAT           shift and go to state 58
    DOUBLE          shift and go to state 59
    INT             shift and go to state 60

    salida_entrada                 shift and go to state 299
    body_case                      shift and go to state 326
    asignacion                     shift and go to state 296
    declaracion                    shift and go to state 297
    comparacion                    shift and go to state 298
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    valor_tipo                     shift and go to state 28
    declaracionEstructuraD         shift and go to state 30
    declaracionAsignacion          shift and go to state 31
    valor                          shift and go to state 15
    salida_uno                     shift and go to state 23
    salida_dos                     shift and go to state 24
    salida_tres                    shift and go to state 25
    asignacionCompuesta_Logic      shift and go to state 34
    asignacionCompuesta_Number     shift and go to state 35
    declaracionList                shift and go to state 55
    declaracionQueue               shift and go to state 56
    declaracionPila                shift and go to state 57
    numero                         shift and go to state 120

state 315

    (128) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body . LLAVE_DER

    LLAVE_DER       shift and go to state 327


state 316

    (148) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .

    $end            reduce using rule 148 (lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 148 (lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .)


state 317

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    MAYOR_QUE       shift and go to state 328


state 318

    (182) bodyF -> asignacion END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 182 (bodyF -> asignacion END_OF_LINE bodyF .)


state 319

    (183) bodyF -> declaracion END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 183 (bodyF -> declaracion END_OF_LINE bodyF .)


state 320

    (184) bodyF -> salida_entrada END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 184 (bodyF -> salida_entrada END_OF_LINE bodyF .)


state 321

    (116) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE .
    (118) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE . casos
    (116) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (117) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (118) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (119) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    LLAVE_DER       reduce using rule 116 (casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE .)
    CASE            shift and go to state 249

    casos                          shift and go to state 329

state 322

    (119) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos .

    LLAVE_DER       reduce using rule 119 (casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos .)


state 323

    (124) body_case -> asignacion END_OF_LINE body_case .

    BREAK           reduce using rule 124 (body_case -> asignacion END_OF_LINE body_case .)


state 324

    (125) body_case -> declaracion END_OF_LINE body_case .

    BREAK           reduce using rule 125 (body_case -> declaracion END_OF_LINE body_case .)


state 325

    (127) body_case -> comparacion END_OF_LINE body_case .

    BREAK           reduce using rule 127 (body_case -> comparacion END_OF_LINE body_case .)


state 326

    (126) body_case -> salida_entrada END_OF_LINE body_case .

    BREAK           reduce using rule 126 (body_case -> salida_entrada END_OF_LINE body_case .)


state 327

    (128) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .

    $end            reduce using rule 128 (for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .)
    LLAVE_DER       reduce using rule 128 (for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .)


state 328

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . PAR_IZQ PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 330


state 329

    (118) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos .

    LLAVE_DER       reduce using rule 118 (casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos .)


state 330

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 331


state 331

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 332


state 332

    (150) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .

    $end            reduce using rule 150 (pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 150 (pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 29 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 29 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 29 resolved as shift
WARNING: shift/reduce conflict for MENOR_O_IGUAL_QUE in state 29 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 29 resolved as shift
WARNING: shift/reduce conflict for MAYOR_O_IGUAL_QUE in state 29 resolved as shift
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 37 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 37 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 37 resolved as shift
WARNING: shift/reduce conflict for MENOR_O_IGUAL_QUE in state 37 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 37 resolved as shift
WARNING: shift/reduce conflict for MAYOR_O_IGUAL_QUE in state 37 resolved as shift
