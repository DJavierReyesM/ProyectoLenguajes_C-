Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    AND
    BYTE
    CLASS
    COMILLA_DOBLE
    COMILLA_SIMPLE
    CONST
    COR_DER
    COR_IZQ
    C_IDENT_TEXTUAL
    DEFAULT
    ELSE
    FINALLY
    GLOBAL
    IN
    IR
    LAMBDA
    LEFTSHIFT_EQUAL
    LET
    NEGACION
    NOR
    NULL_VAL
    OBJECT
    ON
    OR
    ORDERBY
    RETURN
    RIGHTSHIFT_EQUAL
    SHIFT_MAYOR
    SHIFT_MENOR
    SIMPLE_AND
    SIMPLE_OR
    STRUCT
    THIS
    TO_UPPER
    TYPEOF
    VAR
    WHEN
    WHERE

Grammar

Rule 0     S' -> body
Rule 1     body -> asignacion END_OF_LINE
Rule 2     body -> comparacion
Rule 3     body -> estructura_control
Rule 4     body -> estructura_datos
Rule 5     body -> expresion END_OF_LINE
Rule 6     body -> salida_entrada END_OF_LINE
Rule 7     body -> funcion
Rule 8     body -> declaracion END_OF_LINE
Rule 9     body -> empty
Rule 10    body -> funciones_estructura_datos END_OF_LINE
Rule 11    valor -> CHAR
Rule 12    valor -> numero
Rule 13    valor -> BOOL
Rule 14    valor -> STRING
Rule 15    valor -> IDENTIFICADOR
Rule 16    numero -> FLOAT
Rule 17    numero -> DOUBLE
Rule 18    numero -> INT
Rule 19    ftipo -> valor_tipo
Rule 20    ftipo -> VOID
Rule 21    valor_tipo -> CHAR_TYPE
Rule 22    valor_tipo -> FLOAT_TYPE
Rule 23    valor_tipo -> DOUBLE_TYPE
Rule 24    valor_tipo -> INT_TYPE
Rule 25    valor_tipo -> BOOL_TYPE
Rule 26    valor_tipo -> STRING_TYPE
Rule 27    valor_tipo_inicializador -> FLOAT_TYPE
Rule 28    valor_tipo_inicializador -> DOUBLE_TYPE
Rule 29    valor_tipo_inicializador -> STRING_TYPE
Rule 30    valor_tipo_inicializador -> INT_TYPE
Rule 31    valor_tipo_inicializador -> BOOL_TYPE
Rule 32    valor_tipo_inicializador -> CHAR_TYPE
Rule 33    valor_tipo_inicializador -> IDENTIFICADOR
Rule 34    modificador_acceso -> PRIVATE
Rule 35    modificador_acceso -> PROTECTED
Rule 36    modificador_acceso -> PUBLIC
Rule 37    operador_realacional -> IGUAL_IGUAL
Rule 38    operador_realacional -> NO_IGUAL
Rule 39    operador_realacional -> MENOR_QUE
Rule 40    operador_realacional -> MENOR_O_IGUAL_QUE
Rule 41    operador_realacional -> MAYOR_QUE
Rule 42    operador_realacional -> MAYOR_O_IGUAL_QUE
Rule 43    operador_aritmentico -> SUMA
Rule 44    operador_aritmentico -> RESTA
Rule 45    operador_aritmentico -> MULTIPLICACION
Rule 46    operador_aritmentico -> DIVISION
Rule 47    operador_aritmentico -> MODULO
Rule 48    operador_condicional -> IGUAL_IGUAL
Rule 49    operador_condicional -> NO_IGUAL
Rule 50    operador_condicional -> MENOR_QUE
Rule 51    operador_condicional -> MENOR_O_IGUAL_QUE
Rule 52    operador_condicional -> MAYOR_QUE
Rule 53    operador_condicional -> MAYOR_O_IGUAL_QUE
Rule 54    operacion_string -> STRING SUMA STRING
Rule 55    operacion_string -> STRING SUMA IDENTIFICADOR
Rule 56    operacion_string -> IDENTIFICADOR SUMA STRING
Rule 57    operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR
Rule 58    empty -> END_OF_LINE
Rule 59    asignacion -> asignacionSimple
Rule 60    asignacion -> asignacionCompuesta
Rule 61    asignacion -> asignacionClase
Rule 62    asignacion -> asignacionEstructuraD
Rule 63    asignacion -> asignacionNull
Rule 64    asignacionSimple -> IDENTIFICADOR IGUAL valor
Rule 65    asignacionSimple -> IDENTIFICADOR IGUAL expresion
Rule 66    asignacionSimple -> IDENTIFICADOR IGUAL salida_entrada
Rule 67    asignacionNull -> IDENTIFICADOR IGUAL NULL
Rule 68    asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
Rule 69    asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionPila
Rule 70    asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionQueue
Rule 71    asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionList
Rule 72    asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER
Rule 73    asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER
Rule 74    asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER
Rule 75    asignacionCompuesta -> asignacionCompuesta_Logic
Rule 76    asignacionCompuesta -> asignacionCompuesta_Number
Rule 77    asignacionCompuesta -> asignacionCompuesta_Null
Rule 78    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL
Rule 79    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
Rule 80    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
Rule 81    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero
Rule 82    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
Rule 83    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
Rule 84    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL valor
Rule 85    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL expresion
Rule 86    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionPila
Rule 87    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionQueue
Rule 88    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionList
Rule 89    operadoresCompuestosNumber -> AUMENTADO
Rule 90    operadoresCompuestosNumber -> DECREMENTADO
Rule 91    operadoresCompuestosNumber -> MULTIPLICADO_POR
Rule 92    operadoresCompuestosNumber -> DIVIDIDO_POR
Rule 93    operadoresCompuestosNumber -> MODULO_DE
Rule 94    operadoresCompuestosLogic -> AND_EQUAL
Rule 95    operadoresCompuestosLogic -> OR_EQUAL
Rule 96    operadoresCompuestosLogic -> EXC_OREQUAL
Rule 97    declaracion -> valor_tipo IDENTIFICADOR
Rule 98    declaracion -> declaracionEstructuraD
Rule 99    declaracion -> declaracionAsignacion
Rule 100   declaracion -> declaracionClase
Rule 101   declaracion -> declaracionNull
Rule 102   declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR
Rule 103   declaracionClase -> IDENTIFICADOR IDENTIFICADOR
Rule 104   declaracionAsignacion -> valor_tipo asignacionSimple
Rule 105   declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
Rule 106   declaracionAsignacion -> declaracionClase IGUAL NULL
Rule 107   declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR
Rule 108   declaracionAsignacion -> declaracionNull IGUAL valor
Rule 109   declaracionAsignacion -> declaracionNull IGUAL expresion
Rule 110   declaracionAsignacion -> declaracionNull IGUAL NULL
Rule 111   declaracionAsignacion -> declaracionEstructuraD IGUAL NULL
Rule 112   declaracionEstructuraD -> declaracionList
Rule 113   declaracionEstructuraD -> declaracionQueue
Rule 114   declaracionEstructuraD -> declaracionPila
Rule 115   declaracionList -> LIST tipoLista IDENTIFICADOR
Rule 116   declaracionQueue -> QUEUE tipoLista IDENTIFICADOR
Rule 117   declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
Rule 118   comparacion -> valor operador_realacional valor
Rule 119   estructura_control -> while
Rule 120   estructura_control -> switch_case
Rule 121   estructura_control -> for
Rule 122   while -> while_normal
Rule 123   while -> while_do
Rule 124   while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
Rule 125   while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
Rule 126   body_while -> asignacion END_OF_LINE
Rule 127   body_while -> declaracion END_OF_LINE
Rule 128   body_while -> salida_entrada END_OF_LINE
Rule 129   body_while -> BREAK END_OF_LINE
Rule 130   body_while -> CONTINUE END_OF_LINE
Rule 131   body_while -> asignacion END_OF_LINE body_while
Rule 132   body_while -> declaracion END_OF_LINE body_while
Rule 133   body_while -> salida_entrada END_OF_LINE body_while
Rule 134   body_while -> BREAK END_OF_LINE body_while
Rule 135   body_while -> CONTINUE END_OF_LINE body_while
Rule 136   switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
Rule 137   casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
Rule 138   casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE
Rule 139   casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
Rule 140   casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos
Rule 141   body_case -> asignacion END_OF_LINE
Rule 142   body_case -> declaracion END_OF_LINE
Rule 143   body_case -> comparacion END_OF_LINE
Rule 144   body_case -> salida_entrada END_OF_LINE
Rule 145   body_case -> asignacion END_OF_LINE body_case
Rule 146   body_case -> declaracion END_OF_LINE body_case
Rule 147   body_case -> salida_entrada END_OF_LINE body_case
Rule 148   body_case -> comparacion END_OF_LINE body_case
Rule 149   for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
Rule 150   forIterador -> IDENTIFICADOR operadorForIteracion
Rule 151   operadorForIteracion -> INCREMENTO
Rule 152   operadorForIteracion -> DECREMENTO
Rule 153   forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion
Rule 154   valorForCondicion -> FLOAT
Rule 155   valorForCondicion -> DOUBLE
Rule 156   valorForCondicion -> INT
Rule 157   valorForCondicion -> IDENTIFICADOR
Rule 158   forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador
Rule 159   forInicializador -> IDENTIFICADOR IGUAL valorForInicializador
Rule 160   tipoDatoForInicializador -> FLOAT_TYPE
Rule 161   tipoDatoForInicializador -> DOUBLE_TYPE
Rule 162   tipoDatoForInicializador -> INT_TYPE
Rule 163   valorForInicializador -> FLOAT
Rule 164   valorForInicializador -> DOUBLE
Rule 165   valorForInicializador -> INT
Rule 166   valorForInicializador -> IDENTIFICADOR
Rule 167   estructura_datos -> lista
Rule 168   estructura_datos -> pila
Rule 169   lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
Rule 170   tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE
Rule 171   pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
Rule 172   funciones_estructura_datos -> stack_push
Rule 173   funciones_estructura_datos -> stack_pop
Rule 174   stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
Rule 175   stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
Rule 176   expresion -> expresion_operacion_aritmetica
Rule 177   expresion -> expresion_condicional
Rule 178   expresion_operacion_aritmetica -> numero operador_aritmentico numero
Rule 179   expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR
Rule 180   expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero
Rule 181   expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR
Rule 182   expresion_condicional -> numero operador_condicional numero
Rule 183   expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR
Rule 184   expresion_condicional -> IDENTIFICADOR operador_condicional numero
Rule 185   expresion_condicional -> numero operador_condicional IDENTIFICADOR
Rule 186   salida_entrada -> salida_uno
Rule 187   salida_entrada -> salida_dos
Rule 188   salida_entrada -> salida_tres
Rule 189   salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
Rule 190   salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
Rule 191   salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
Rule 192   salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
Rule 193   salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER
Rule 194   funcion -> funcion_tipo_uno
Rule 195   funcion -> funcion_tipo_tres
Rule 196   funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
Rule 197   funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
Rule 198   parametrosF -> declaracion
Rule 199   parametrosF -> declaracion COMA parametrosF
Rule 200   bodyF -> asignacion END_OF_LINE
Rule 201   bodyF -> declaracion END_OF_LINE
Rule 202   bodyF -> salida_entrada END_OF_LINE
Rule 203   bodyF -> asignacion END_OF_LINE bodyF
Rule 204   bodyF -> declaracion END_OF_LINE bodyF
Rule 205   bodyF -> salida_entrada END_OF_LINE bodyF

Terminals, with rules where they appear

ADD                  : 
AND                  : 
AND_EQUAL            : 94
AUMENTADO            : 89
BOOL                 : 13 78
BOOL_TYPE            : 25 31
BREAK                : 129 134 137 138 139 140
BYTE                 : 
CASE                 : 137 138 139 140
CHAR                 : 11
CHAR_TYPE            : 21 32
CLASS                : 
COMA                 : 199
COMILLA_DOBLE        : 
COMILLA_SIMPLE       : 
CONSOLE_READLINE     : 193
CONSOLE_WRITELINE    : 189 190 191 192
CONST                : 
CONTINUE             : 130 135
COR_DER              : 
COR_IZQ              : 
C_CADENA_INTERPOLADA : 192
C_IDENT_TEXTUAL      : 
DECREMENTADO         : 90
DECREMENTO           : 152
DEFAULT              : 
DIVIDIDO_POR         : 92
DIVISION             : 46
DO                   : 125
DOS_PUNTOS           : 137 138 139 140
DOUBLE               : 17 155 164
DOUBLE_TYPE          : 23 28 161
ELSE                 : 
END_OF_LINE          : 1 5 6 8 10 58 125 126 127 128 129 130 131 132 133 134 135 137 138 139 140 141 142 143 144 145 146 147 148 149 149 169 171 200 201 202 203 204 205
EXC_OREQUAL          : 96
FINALLY              : 
FLOAT                : 16 154 163
FLOAT_TYPE           : 22 27 160
FOR                  : 149
GLOBAL               : 
IDENTIFICADOR        : 15 33 55 56 57 57 64 65 66 67 68 68 69 70 71 78 79 80 80 81 82 83 83 84 85 86 87 88 97 102 103 103 105 107 115 116 117 150 153 157 158 159 166 169 171 174 175 179 180 181 181 183 183 184 185 191 196 197
IGUAL                : 64 65 66 67 68 69 70 71 105 106 107 108 109 110 111 158 159 169 171
IGUAL_IGUAL          : 37 48
IN                   : 
INCREMENTO           : 151
INT                  : 18 156 165
INT_TYPE             : 24 30 162
IR                   : 
LAMBDA               : 
LEFTSHIFT_EQUAL      : 
LET                  : 
LIST                 : 74 115 169 169
LLAVE_DER            : 124 125 136 149 196 197
LLAVE_IZQ            : 124 125 136 149 196 197
MAYOR_O_IGUAL_QUE    : 42 53
MAYOR_QUE            : 41 52 117 170 171 171
MENOR_O_IGUAL_QUE    : 40 51
MENOR_QUE            : 39 50 117 170 171 171
MODULO               : 47
MODULO_DE            : 93
MULTIPLICACION       : 45
MULTIPLICADO_POR     : 91
NEGACION             : 
NEW                  : 68 72 73 74 105 169 171
NOR                  : 
NO_IGUAL             : 38 49
NULL                 : 67 106 110 111
NULL_EQUAL           : 84 85 86 87 88
NULL_VAL             : 
OBJECT               : 
ON                   : 
OP_TERNARIO          : 102
OR                   : 
ORDERBY              : 
OR_EQUAL             : 95
PAR_DER              : 68 72 73 74 105 124 125 136 149 169 171 174 175 189 190 191 192 193 196 197
PAR_IZQ              : 68 72 73 74 105 124 125 136 149 169 171 174 175 189 190 191 192 193 196 197
POP                  : 175
PRIVATE              : 34
PROTECTED            : 35
PUBLIC               : 36
PUNTO                : 174 175
PUSH                 : 174
QUEUE                : 73 116
RESTA                : 44
RETURN               : 
RIGHTSHIFT_EQUAL     : 
SHIFT_MAYOR          : 
SHIFT_MENOR          : 
SIMPLE_AND           : 
SIMPLE_OR            : 
STACK                : 72 117 171 171
STRING               : 14 54 54 55 56 189 192
STRING_TYPE          : 26 29
STRUCT               : 
SUMA                 : 43 54 55 56 57
SWITCH               : 136
THIS                 : 
TO_UPPER             : 
TYPEOF               : 
VAR                  : 
VOID                 : 20 196 197
WHEN                 : 
WHERE                : 
WHILE                : 124 125
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 126 131 141 145 200 203
asignacionClase      : 61
asignacionCompuesta  : 60
asignacionCompuesta_Logic : 75
asignacionCompuesta_Null : 77
asignacionCompuesta_Number : 76
asignacionEstructuraD : 62
asignacionList       : 71 88
asignacionNull       : 63
asignacionPila       : 69 86
asignacionQueue      : 70 87
asignacionSimple     : 59 104
body                 : 149 196 0
bodyF                : 197 203 204 205
body_case            : 137 139 145 146 147 148
body_while           : 124 125 131 132 133 134 135
casos                : 136 139 140
comparacion          : 2 143 148
declaracion          : 8 127 132 142 146 198 199 201 204
declaracionAsignacion : 99
declaracionClase     : 100 105 106 107
declaracionEstructuraD : 98 111
declaracionList      : 112
declaracionNull      : 101 108 109 110
declaracionPila      : 114
declaracionQueue     : 113
empty                : 9
estructura_control   : 3
estructura_datos     : 4
expresion            : 5 65 85 109
expresion_condicional : 79 124 125 177
expresion_operacion_aritmetica : 82 176
for                  : 121
forCondicion         : 149
forInicializador     : 149
forIterador          : 149
ftipo                : 
funcion              : 7
funcion_tipo_tres    : 195
funcion_tipo_uno     : 194
funciones_estructura_datos : 10
lista                : 167
modificador_acceso   : 196 197
numero               : 12 81 178 178 179 180 182 182 184 185
operacion_string     : 190
operadorForIteracion : 150
operador_aritmentico : 178 179 180 181
operador_condicional : 153 182 183 184 185
operador_realacional : 118
operadoresCompuestosLogic : 78 79 80
operadoresCompuestosNumber : 81 82 83
parametrosF          : 197 199
pila                 : 168
salida_dos           : 187
salida_entrada       : 6 66 128 133 144 147 202 205
salida_tres          : 188
salida_uno           : 186
stack_pop            : 173
stack_push           : 172
switch_case          : 120
tipoDatoForInicializador : 158
tipoLista            : 72 73 74 115 116 169 169
valor                : 64 84 108 118 118 136 137 138 139 140 174
valorForCondicion    : 153
valorForInicializador : 158 159
valor_tipo           : 19 97 102 104
valor_tipo_inicializador : 117 170 171 171
while                : 119
while_do             : 123
while_normal         : 122

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (118) comparacion -> . valor operador_realacional valor
    (119) estructura_control -> . while
    (120) estructura_control -> . switch_case
    (121) estructura_control -> . for
    (167) estructura_datos -> . lista
    (168) estructura_datos -> . pila
    (176) expresion -> . expresion_operacion_aritmetica
    (177) expresion -> . expresion_condicional
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (194) funcion -> . funcion_tipo_uno
    (195) funcion -> . funcion_tipo_tres
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (58) empty -> . END_OF_LINE
    (172) funciones_estructura_datos -> . stack_push
    (173) funciones_estructura_datos -> . stack_pop
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (122) while -> . while_normal
    (123) while -> . while_do
    (136) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (149) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (169) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (171) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (178) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (179) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (180) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (181) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (182) expresion_condicional -> . numero operador_condicional numero
    (183) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (185) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (196) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (197) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (174) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (175) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (124) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (125) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (34) modificador_acceso -> . PRIVATE
    (35) modificador_acceso -> . PROTECTED
    (36) modificador_acceso -> . PUBLIC
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 32
    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    SWITCH          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 50
    STACK           shift and go to state 51
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66
    WHILE           shift and go to state 67
    DO              shift and go to state 68
    PRIVATE         shift and go to state 69
    PROTECTED       shift and go to state 70
    PUBLIC          shift and go to state 71
    QUEUE           shift and go to state 72

    body                           shift and go to state 1
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor                          shift and go to state 18
    while                          shift and go to state 19
    switch_case                    shift and go to state 20
    for                            shift and go to state 21
    lista                          shift and go to state 22
    pila                           shift and go to state 23
    expresion_operacion_aritmetica shift and go to state 24
    expresion_condicional          shift and go to state 25
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    funcion_tipo_uno               shift and go to state 29
    funcion_tipo_tres              shift and go to state 30
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    stack_push                     shift and go to state 37
    stack_pop                      shift and go to state 38
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    numero                         shift and go to state 43
    while_normal                   shift and go to state 46
    while_do                       shift and go to state 47
    modificador_acceso             shift and go to state 54
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 1

    (0) S' -> body .



state 2

    (1) body -> asignacion . END_OF_LINE

    END_OF_LINE     shift and go to state 73


state 3

    (58) empty -> END_OF_LINE .

    $end            reduce using rule 58 (empty -> END_OF_LINE .)
    LLAVE_DER       reduce using rule 58 (empty -> END_OF_LINE .)


state 4

    (2) body -> comparacion .

    $end            reduce using rule 2 (body -> comparacion .)
    LLAVE_DER       reduce using rule 2 (body -> comparacion .)


state 5

    (3) body -> estructura_control .

    $end            reduce using rule 3 (body -> estructura_control .)
    LLAVE_DER       reduce using rule 3 (body -> estructura_control .)


state 6

    (4) body -> estructura_datos .

    $end            reduce using rule 4 (body -> estructura_datos .)
    LLAVE_DER       reduce using rule 4 (body -> estructura_datos .)


state 7

    (5) body -> expresion . END_OF_LINE

    END_OF_LINE     shift and go to state 74


state 8

    (6) body -> salida_entrada . END_OF_LINE

    END_OF_LINE     shift and go to state 75


state 9

    (7) body -> funcion .

    $end            reduce using rule 7 (body -> funcion .)
    LLAVE_DER       reduce using rule 7 (body -> funcion .)


state 10

    (8) body -> declaracion . END_OF_LINE

    END_OF_LINE     shift and go to state 76


state 11

    (9) body -> empty .

    $end            reduce using rule 9 (body -> empty .)
    LLAVE_DER       reduce using rule 9 (body -> empty .)


state 12

    (10) body -> funciones_estructura_datos . END_OF_LINE

    END_OF_LINE     shift and go to state 77


state 13

    (59) asignacion -> asignacionSimple .

    END_OF_LINE     reduce using rule 59 (asignacion -> asignacionSimple .)


state 14

    (60) asignacion -> asignacionCompuesta .

    END_OF_LINE     reduce using rule 60 (asignacion -> asignacionCompuesta .)


state 15

    (61) asignacion -> asignacionClase .

    END_OF_LINE     reduce using rule 61 (asignacion -> asignacionClase .)


state 16

    (62) asignacion -> asignacionEstructuraD .

    END_OF_LINE     reduce using rule 62 (asignacion -> asignacionEstructuraD .)


state 17

    (63) asignacion -> asignacionNull .

    END_OF_LINE     reduce using rule 63 (asignacion -> asignacionNull .)


state 18

    (118) comparacion -> valor . operador_realacional valor
    (37) operador_realacional -> . IGUAL_IGUAL
    (38) operador_realacional -> . NO_IGUAL
    (39) operador_realacional -> . MENOR_QUE
    (40) operador_realacional -> . MENOR_O_IGUAL_QUE
    (41) operador_realacional -> . MAYOR_QUE
    (42) operador_realacional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 79
    NO_IGUAL        shift and go to state 80
    MENOR_QUE       shift and go to state 81
    MENOR_O_IGUAL_QUE shift and go to state 82
    MAYOR_QUE       shift and go to state 83
    MAYOR_O_IGUAL_QUE shift and go to state 84

    operador_realacional           shift and go to state 78

state 19

    (119) estructura_control -> while .

    $end            reduce using rule 119 (estructura_control -> while .)
    LLAVE_DER       reduce using rule 119 (estructura_control -> while .)


state 20

    (120) estructura_control -> switch_case .

    $end            reduce using rule 120 (estructura_control -> switch_case .)
    LLAVE_DER       reduce using rule 120 (estructura_control -> switch_case .)


state 21

    (121) estructura_control -> for .

    $end            reduce using rule 121 (estructura_control -> for .)
    LLAVE_DER       reduce using rule 121 (estructura_control -> for .)


state 22

    (167) estructura_datos -> lista .

    $end            reduce using rule 167 (estructura_datos -> lista .)
    LLAVE_DER       reduce using rule 167 (estructura_datos -> lista .)


state 23

    (168) estructura_datos -> pila .

    $end            reduce using rule 168 (estructura_datos -> pila .)
    LLAVE_DER       reduce using rule 168 (estructura_datos -> pila .)


state 24

    (176) expresion -> expresion_operacion_aritmetica .

    END_OF_LINE     reduce using rule 176 (expresion -> expresion_operacion_aritmetica .)
    COMA            reduce using rule 176 (expresion -> expresion_operacion_aritmetica .)
    PAR_DER         reduce using rule 176 (expresion -> expresion_operacion_aritmetica .)


state 25

    (177) expresion -> expresion_condicional .

    END_OF_LINE     reduce using rule 177 (expresion -> expresion_condicional .)
    COMA            reduce using rule 177 (expresion -> expresion_condicional .)
    PAR_DER         reduce using rule 177 (expresion -> expresion_condicional .)


state 26

    (186) salida_entrada -> salida_uno .

    END_OF_LINE     reduce using rule 186 (salida_entrada -> salida_uno .)
    COMA            reduce using rule 186 (salida_entrada -> salida_uno .)
    PAR_DER         reduce using rule 186 (salida_entrada -> salida_uno .)


state 27

    (187) salida_entrada -> salida_dos .

    END_OF_LINE     reduce using rule 187 (salida_entrada -> salida_dos .)
    COMA            reduce using rule 187 (salida_entrada -> salida_dos .)
    PAR_DER         reduce using rule 187 (salida_entrada -> salida_dos .)


state 28

    (188) salida_entrada -> salida_tres .

    END_OF_LINE     reduce using rule 188 (salida_entrada -> salida_tres .)
    COMA            reduce using rule 188 (salida_entrada -> salida_tres .)
    PAR_DER         reduce using rule 188 (salida_entrada -> salida_tres .)


state 29

    (194) funcion -> funcion_tipo_uno .

    $end            reduce using rule 194 (funcion -> funcion_tipo_uno .)
    LLAVE_DER       reduce using rule 194 (funcion -> funcion_tipo_uno .)


state 30

    (195) funcion -> funcion_tipo_tres .

    $end            reduce using rule 195 (funcion -> funcion_tipo_tres .)
    LLAVE_DER       reduce using rule 195 (funcion -> funcion_tipo_tres .)


state 31

    (97) declaracion -> valor_tipo . IDENTIFICADOR
    (104) declaracionAsignacion -> valor_tipo . asignacionSimple
    (102) declaracionNull -> valor_tipo . OP_TERNARIO IDENTIFICADOR
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada

    IDENTIFICADOR   shift and go to state 85
    OP_TERNARIO     shift and go to state 87

    asignacionSimple               shift and go to state 86

state 32

    (64) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (65) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (66) asignacionSimple -> IDENTIFICADOR . IGUAL salida_entrada
    (68) asignacionClase -> IDENTIFICADOR . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionPila
    (70) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionQueue
    (71) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionList
    (67) asignacionNull -> IDENTIFICADOR . IGUAL NULL
    (15) valor -> IDENTIFICADOR .
    (180) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (181) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (183) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (103) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR
    (174) stack_push -> IDENTIFICADOR . PUNTO PUSH PAR_IZQ valor PAR_DER
    (175) stack_pop -> IDENTIFICADOR . PUNTO POP PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionList
    (43) operador_aritmentico -> . SUMA
    (44) operador_aritmentico -> . RESTA
    (45) operador_aritmentico -> . MULTIPLICACION
    (46) operador_aritmentico -> . DIVISION
    (47) operador_aritmentico -> . MODULO
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE
    (94) operadoresCompuestosLogic -> . AND_EQUAL
    (95) operadoresCompuestosLogic -> . OR_EQUAL
    (96) operadoresCompuestosLogic -> . EXC_OREQUAL
    (89) operadoresCompuestosNumber -> . AUMENTADO
    (90) operadoresCompuestosNumber -> . DECREMENTADO
    (91) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (92) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (93) operadoresCompuestosNumber -> . MODULO_DE

  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_O_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_O_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 89
    IDENTIFICADOR   shift and go to state 88
    PUNTO           shift and go to state 92
    NULL_EQUAL      shift and go to state 95
    SUMA            shift and go to state 96
    RESTA           shift and go to state 97
    MULTIPLICACION  shift and go to state 98
    DIVISION        shift and go to state 99
    MODULO          shift and go to state 100
    IGUAL_IGUAL     shift and go to state 101
    NO_IGUAL        shift and go to state 102
    MENOR_QUE       shift and go to state 103
    MENOR_O_IGUAL_QUE shift and go to state 104
    MAYOR_QUE       shift and go to state 105
    MAYOR_O_IGUAL_QUE shift and go to state 106
    AND_EQUAL       shift and go to state 107
    OR_EQUAL        shift and go to state 108
    EXC_OREQUAL     shift and go to state 109
    AUMENTADO       shift and go to state 110
    DECREMENTADO    shift and go to state 111
    MULTIPLICADO_POR shift and go to state 112
    DIVIDIDO_POR    shift and go to state 113
    MODULO_DE       shift and go to state 114

  ! IGUAL_IGUAL     [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]
  ! NO_IGUAL        [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]
  ! MENOR_QUE       [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]
  ! MENOR_O_IGUAL_QUE [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]
  ! MAYOR_QUE       [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]
  ! MAYOR_O_IGUAL_QUE [ reduce using rule 15 (valor -> IDENTIFICADOR .) ]

    operador_aritmentico           shift and go to state 90
    operador_condicional           shift and go to state 91
    operadoresCompuestosLogic      shift and go to state 93
    operadoresCompuestosNumber     shift and go to state 94

state 33

    (98) declaracion -> declaracionEstructuraD .
    (111) declaracionAsignacion -> declaracionEstructuraD . IGUAL NULL

    END_OF_LINE     reduce using rule 98 (declaracion -> declaracionEstructuraD .)
    COMA            reduce using rule 98 (declaracion -> declaracionEstructuraD .)
    PAR_DER         reduce using rule 98 (declaracion -> declaracionEstructuraD .)
    IGUAL           shift and go to state 115


state 34

    (99) declaracion -> declaracionAsignacion .

    END_OF_LINE     reduce using rule 99 (declaracion -> declaracionAsignacion .)
    COMA            reduce using rule 99 (declaracion -> declaracionAsignacion .)
    PAR_DER         reduce using rule 99 (declaracion -> declaracionAsignacion .)


state 35

    (100) declaracion -> declaracionClase .
    (105) declaracionAsignacion -> declaracionClase . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> declaracionClase . IGUAL NULL
    (107) declaracionAsignacion -> declaracionClase . IGUAL IDENTIFICADOR

    END_OF_LINE     reduce using rule 100 (declaracion -> declaracionClase .)
    COMA            reduce using rule 100 (declaracion -> declaracionClase .)
    PAR_DER         reduce using rule 100 (declaracion -> declaracionClase .)
    IGUAL           shift and go to state 116


state 36

    (101) declaracion -> declaracionNull .
    (108) declaracionAsignacion -> declaracionNull . IGUAL valor
    (109) declaracionAsignacion -> declaracionNull . IGUAL expresion
    (110) declaracionAsignacion -> declaracionNull . IGUAL NULL

    END_OF_LINE     reduce using rule 101 (declaracion -> declaracionNull .)
    COMA            reduce using rule 101 (declaracion -> declaracionNull .)
    PAR_DER         reduce using rule 101 (declaracion -> declaracionNull .)
    IGUAL           shift and go to state 117


state 37

    (172) funciones_estructura_datos -> stack_push .

    END_OF_LINE     reduce using rule 172 (funciones_estructura_datos -> stack_push .)


state 38

    (173) funciones_estructura_datos -> stack_pop .

    END_OF_LINE     reduce using rule 173 (funciones_estructura_datos -> stack_pop .)


state 39

    (75) asignacionCompuesta -> asignacionCompuesta_Logic .

    END_OF_LINE     reduce using rule 75 (asignacionCompuesta -> asignacionCompuesta_Logic .)


state 40

    (76) asignacionCompuesta -> asignacionCompuesta_Number .

    END_OF_LINE     reduce using rule 76 (asignacionCompuesta -> asignacionCompuesta_Number .)


state 41

    (77) asignacionCompuesta -> asignacionCompuesta_Null .

    END_OF_LINE     reduce using rule 77 (asignacionCompuesta -> asignacionCompuesta_Null .)


state 42

    (11) valor -> CHAR .

    IGUAL_IGUAL     reduce using rule 11 (valor -> CHAR .)
    NO_IGUAL        reduce using rule 11 (valor -> CHAR .)
    MENOR_QUE       reduce using rule 11 (valor -> CHAR .)
    MENOR_O_IGUAL_QUE reduce using rule 11 (valor -> CHAR .)
    MAYOR_QUE       reduce using rule 11 (valor -> CHAR .)
    MAYOR_O_IGUAL_QUE reduce using rule 11 (valor -> CHAR .)
    $end            reduce using rule 11 (valor -> CHAR .)
    LLAVE_DER       reduce using rule 11 (valor -> CHAR .)
    END_OF_LINE     reduce using rule 11 (valor -> CHAR .)
    COMA            reduce using rule 11 (valor -> CHAR .)
    PAR_DER         reduce using rule 11 (valor -> CHAR .)
    DOS_PUNTOS      reduce using rule 11 (valor -> CHAR .)


state 43

    (12) valor -> numero .
    (178) expresion_operacion_aritmetica -> numero . operador_aritmentico numero
    (179) expresion_operacion_aritmetica -> numero . operador_aritmentico IDENTIFICADOR
    (182) expresion_condicional -> numero . operador_condicional numero
    (185) expresion_condicional -> numero . operador_condicional IDENTIFICADOR
    (43) operador_aritmentico -> . SUMA
    (44) operador_aritmentico -> . RESTA
    (45) operador_aritmentico -> . MULTIPLICACION
    (46) operador_aritmentico -> . DIVISION
    (47) operador_aritmentico -> . MODULO
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_O_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_O_IGUAL_QUE resolved as shift
    END_OF_LINE     reduce using rule 12 (valor -> numero .)
    COMA            reduce using rule 12 (valor -> numero .)
    PAR_DER         reduce using rule 12 (valor -> numero .)
    SUMA            shift and go to state 96
    RESTA           shift and go to state 97
    MULTIPLICACION  shift and go to state 98
    DIVISION        shift and go to state 99
    MODULO          shift and go to state 100
    IGUAL_IGUAL     shift and go to state 101
    NO_IGUAL        shift and go to state 102
    MENOR_QUE       shift and go to state 103
    MENOR_O_IGUAL_QUE shift and go to state 104
    MAYOR_QUE       shift and go to state 105
    MAYOR_O_IGUAL_QUE shift and go to state 106

  ! IGUAL_IGUAL     [ reduce using rule 12 (valor -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 12 (valor -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 12 (valor -> numero .) ]
  ! MENOR_O_IGUAL_QUE [ reduce using rule 12 (valor -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 12 (valor -> numero .) ]
  ! MAYOR_O_IGUAL_QUE [ reduce using rule 12 (valor -> numero .) ]

    operador_aritmentico           shift and go to state 118
    operador_condicional           shift and go to state 119

state 44

    (13) valor -> BOOL .

    IGUAL_IGUAL     reduce using rule 13 (valor -> BOOL .)
    NO_IGUAL        reduce using rule 13 (valor -> BOOL .)
    MENOR_QUE       reduce using rule 13 (valor -> BOOL .)
    MENOR_O_IGUAL_QUE reduce using rule 13 (valor -> BOOL .)
    MAYOR_QUE       reduce using rule 13 (valor -> BOOL .)
    MAYOR_O_IGUAL_QUE reduce using rule 13 (valor -> BOOL .)
    $end            reduce using rule 13 (valor -> BOOL .)
    LLAVE_DER       reduce using rule 13 (valor -> BOOL .)
    END_OF_LINE     reduce using rule 13 (valor -> BOOL .)
    COMA            reduce using rule 13 (valor -> BOOL .)
    PAR_DER         reduce using rule 13 (valor -> BOOL .)
    DOS_PUNTOS      reduce using rule 13 (valor -> BOOL .)


state 45

    (14) valor -> STRING .

    IGUAL_IGUAL     reduce using rule 14 (valor -> STRING .)
    NO_IGUAL        reduce using rule 14 (valor -> STRING .)
    MENOR_QUE       reduce using rule 14 (valor -> STRING .)
    MENOR_O_IGUAL_QUE reduce using rule 14 (valor -> STRING .)
    MAYOR_QUE       reduce using rule 14 (valor -> STRING .)
    MAYOR_O_IGUAL_QUE reduce using rule 14 (valor -> STRING .)
    $end            reduce using rule 14 (valor -> STRING .)
    LLAVE_DER       reduce using rule 14 (valor -> STRING .)
    END_OF_LINE     reduce using rule 14 (valor -> STRING .)
    COMA            reduce using rule 14 (valor -> STRING .)
    PAR_DER         reduce using rule 14 (valor -> STRING .)
    DOS_PUNTOS      reduce using rule 14 (valor -> STRING .)


state 46

    (122) while -> while_normal .

    $end            reduce using rule 122 (while -> while_normal .)
    LLAVE_DER       reduce using rule 122 (while -> while_normal .)


state 47

    (123) while -> while_do .

    $end            reduce using rule 123 (while -> while_do .)
    LLAVE_DER       reduce using rule 123 (while -> while_do .)


state 48

    (136) switch_case -> SWITCH . PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER

    PAR_IZQ         shift and go to state 120


state 49

    (149) for -> FOR . PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    PAR_IZQ         shift and go to state 121


state 50

    (169) lista -> LIST . tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (115) declaracionList -> LIST . tipoLista IDENTIFICADOR
    (170) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 123

    tipoLista                      shift and go to state 122

state 51

    (171) pila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (117) declaracionPila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    MENOR_QUE       shift and go to state 124


state 52

    (189) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ STRING PAR_DER
    (190) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> CONSOLE_WRITELINE . PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER

    PAR_IZQ         shift and go to state 125


state 53

    (193) salida_tres -> CONSOLE_READLINE . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 126


state 54

    (196) funcion_tipo_uno -> modificador_acceso . VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (197) funcion_tipo_tres -> modificador_acceso . VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    VOID            shift and go to state 127


state 55

    (21) valor_tipo -> CHAR_TYPE .

    IDENTIFICADOR   reduce using rule 21 (valor_tipo -> CHAR_TYPE .)
    OP_TERNARIO     reduce using rule 21 (valor_tipo -> CHAR_TYPE .)


state 56

    (22) valor_tipo -> FLOAT_TYPE .

    IDENTIFICADOR   reduce using rule 22 (valor_tipo -> FLOAT_TYPE .)
    OP_TERNARIO     reduce using rule 22 (valor_tipo -> FLOAT_TYPE .)


state 57

    (23) valor_tipo -> DOUBLE_TYPE .

    IDENTIFICADOR   reduce using rule 23 (valor_tipo -> DOUBLE_TYPE .)
    OP_TERNARIO     reduce using rule 23 (valor_tipo -> DOUBLE_TYPE .)


state 58

    (24) valor_tipo -> INT_TYPE .

    IDENTIFICADOR   reduce using rule 24 (valor_tipo -> INT_TYPE .)
    OP_TERNARIO     reduce using rule 24 (valor_tipo -> INT_TYPE .)


state 59

    (25) valor_tipo -> BOOL_TYPE .

    IDENTIFICADOR   reduce using rule 25 (valor_tipo -> BOOL_TYPE .)
    OP_TERNARIO     reduce using rule 25 (valor_tipo -> BOOL_TYPE .)


state 60

    (26) valor_tipo -> STRING_TYPE .

    IDENTIFICADOR   reduce using rule 26 (valor_tipo -> STRING_TYPE .)
    OP_TERNARIO     reduce using rule 26 (valor_tipo -> STRING_TYPE .)


state 61

    (112) declaracionEstructuraD -> declaracionList .

    IGUAL           reduce using rule 112 (declaracionEstructuraD -> declaracionList .)
    END_OF_LINE     reduce using rule 112 (declaracionEstructuraD -> declaracionList .)
    COMA            reduce using rule 112 (declaracionEstructuraD -> declaracionList .)
    PAR_DER         reduce using rule 112 (declaracionEstructuraD -> declaracionList .)


state 62

    (113) declaracionEstructuraD -> declaracionQueue .

    IGUAL           reduce using rule 113 (declaracionEstructuraD -> declaracionQueue .)
    END_OF_LINE     reduce using rule 113 (declaracionEstructuraD -> declaracionQueue .)
    COMA            reduce using rule 113 (declaracionEstructuraD -> declaracionQueue .)
    PAR_DER         reduce using rule 113 (declaracionEstructuraD -> declaracionQueue .)


state 63

    (114) declaracionEstructuraD -> declaracionPila .

    IGUAL           reduce using rule 114 (declaracionEstructuraD -> declaracionPila .)
    END_OF_LINE     reduce using rule 114 (declaracionEstructuraD -> declaracionPila .)
    COMA            reduce using rule 114 (declaracionEstructuraD -> declaracionPila .)
    PAR_DER         reduce using rule 114 (declaracionEstructuraD -> declaracionPila .)


state 64

    (16) numero -> FLOAT .

    SUMA            reduce using rule 16 (numero -> FLOAT .)
    RESTA           reduce using rule 16 (numero -> FLOAT .)
    MULTIPLICACION  reduce using rule 16 (numero -> FLOAT .)
    DIVISION        reduce using rule 16 (numero -> FLOAT .)
    MODULO          reduce using rule 16 (numero -> FLOAT .)
    IGUAL_IGUAL     reduce using rule 16 (numero -> FLOAT .)
    NO_IGUAL        reduce using rule 16 (numero -> FLOAT .)
    MENOR_QUE       reduce using rule 16 (numero -> FLOAT .)
    MENOR_O_IGUAL_QUE reduce using rule 16 (numero -> FLOAT .)
    MAYOR_QUE       reduce using rule 16 (numero -> FLOAT .)
    MAYOR_O_IGUAL_QUE reduce using rule 16 (numero -> FLOAT .)
    $end            reduce using rule 16 (numero -> FLOAT .)
    LLAVE_DER       reduce using rule 16 (numero -> FLOAT .)
    END_OF_LINE     reduce using rule 16 (numero -> FLOAT .)
    COMA            reduce using rule 16 (numero -> FLOAT .)
    PAR_DER         reduce using rule 16 (numero -> FLOAT .)
    DOS_PUNTOS      reduce using rule 16 (numero -> FLOAT .)


state 65

    (17) numero -> DOUBLE .

    SUMA            reduce using rule 17 (numero -> DOUBLE .)
    RESTA           reduce using rule 17 (numero -> DOUBLE .)
    MULTIPLICACION  reduce using rule 17 (numero -> DOUBLE .)
    DIVISION        reduce using rule 17 (numero -> DOUBLE .)
    MODULO          reduce using rule 17 (numero -> DOUBLE .)
    IGUAL_IGUAL     reduce using rule 17 (numero -> DOUBLE .)
    NO_IGUAL        reduce using rule 17 (numero -> DOUBLE .)
    MENOR_QUE       reduce using rule 17 (numero -> DOUBLE .)
    MENOR_O_IGUAL_QUE reduce using rule 17 (numero -> DOUBLE .)
    MAYOR_QUE       reduce using rule 17 (numero -> DOUBLE .)
    MAYOR_O_IGUAL_QUE reduce using rule 17 (numero -> DOUBLE .)
    $end            reduce using rule 17 (numero -> DOUBLE .)
    LLAVE_DER       reduce using rule 17 (numero -> DOUBLE .)
    END_OF_LINE     reduce using rule 17 (numero -> DOUBLE .)
    COMA            reduce using rule 17 (numero -> DOUBLE .)
    PAR_DER         reduce using rule 17 (numero -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 17 (numero -> DOUBLE .)


state 66

    (18) numero -> INT .

    SUMA            reduce using rule 18 (numero -> INT .)
    RESTA           reduce using rule 18 (numero -> INT .)
    MULTIPLICACION  reduce using rule 18 (numero -> INT .)
    DIVISION        reduce using rule 18 (numero -> INT .)
    MODULO          reduce using rule 18 (numero -> INT .)
    IGUAL_IGUAL     reduce using rule 18 (numero -> INT .)
    NO_IGUAL        reduce using rule 18 (numero -> INT .)
    MENOR_QUE       reduce using rule 18 (numero -> INT .)
    MENOR_O_IGUAL_QUE reduce using rule 18 (numero -> INT .)
    MAYOR_QUE       reduce using rule 18 (numero -> INT .)
    MAYOR_O_IGUAL_QUE reduce using rule 18 (numero -> INT .)
    $end            reduce using rule 18 (numero -> INT .)
    LLAVE_DER       reduce using rule 18 (numero -> INT .)
    END_OF_LINE     reduce using rule 18 (numero -> INT .)
    COMA            reduce using rule 18 (numero -> INT .)
    PAR_DER         reduce using rule 18 (numero -> INT .)
    DOS_PUNTOS      reduce using rule 18 (numero -> INT .)


state 67

    (124) while_normal -> WHILE . PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER

    PAR_IZQ         shift and go to state 128


state 68

    (125) while_do -> DO . LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    LLAVE_IZQ       shift and go to state 129


state 69

    (34) modificador_acceso -> PRIVATE .

    VOID            reduce using rule 34 (modificador_acceso -> PRIVATE .)


state 70

    (35) modificador_acceso -> PROTECTED .

    VOID            reduce using rule 35 (modificador_acceso -> PROTECTED .)


state 71

    (36) modificador_acceso -> PUBLIC .

    VOID            reduce using rule 36 (modificador_acceso -> PUBLIC .)


state 72

    (116) declaracionQueue -> QUEUE . tipoLista IDENTIFICADOR
    (170) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 123

    tipoLista                      shift and go to state 130

state 73

    (1) body -> asignacion END_OF_LINE .

    $end            reduce using rule 1 (body -> asignacion END_OF_LINE .)
    LLAVE_DER       reduce using rule 1 (body -> asignacion END_OF_LINE .)


state 74

    (5) body -> expresion END_OF_LINE .

    $end            reduce using rule 5 (body -> expresion END_OF_LINE .)
    LLAVE_DER       reduce using rule 5 (body -> expresion END_OF_LINE .)


state 75

    (6) body -> salida_entrada END_OF_LINE .

    $end            reduce using rule 6 (body -> salida_entrada END_OF_LINE .)
    LLAVE_DER       reduce using rule 6 (body -> salida_entrada END_OF_LINE .)


state 76

    (8) body -> declaracion END_OF_LINE .

    $end            reduce using rule 8 (body -> declaracion END_OF_LINE .)
    LLAVE_DER       reduce using rule 8 (body -> declaracion END_OF_LINE .)


state 77

    (10) body -> funciones_estructura_datos END_OF_LINE .

    $end            reduce using rule 10 (body -> funciones_estructura_datos END_OF_LINE .)
    LLAVE_DER       reduce using rule 10 (body -> funciones_estructura_datos END_OF_LINE .)


state 78

    (118) comparacion -> valor operador_realacional . valor
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    IDENTIFICADOR   shift and go to state 133
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    valor                          shift and go to state 131
    numero                         shift and go to state 132

state 79

    (37) operador_realacional -> IGUAL_IGUAL .

    CHAR            reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    BOOL            reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    STRING          reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    IDENTIFICADOR   reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    FLOAT           reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    DOUBLE          reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)
    INT             reduce using rule 37 (operador_realacional -> IGUAL_IGUAL .)


state 80

    (38) operador_realacional -> NO_IGUAL .

    CHAR            reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    BOOL            reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    STRING          reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    IDENTIFICADOR   reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    FLOAT           reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    DOUBLE          reduce using rule 38 (operador_realacional -> NO_IGUAL .)
    INT             reduce using rule 38 (operador_realacional -> NO_IGUAL .)


state 81

    (39) operador_realacional -> MENOR_QUE .

    CHAR            reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    BOOL            reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    STRING          reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    IDENTIFICADOR   reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    FLOAT           reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    DOUBLE          reduce using rule 39 (operador_realacional -> MENOR_QUE .)
    INT             reduce using rule 39 (operador_realacional -> MENOR_QUE .)


state 82

    (40) operador_realacional -> MENOR_O_IGUAL_QUE .

    CHAR            reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    BOOL            reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    STRING          reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    IDENTIFICADOR   reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    INT             reduce using rule 40 (operador_realacional -> MENOR_O_IGUAL_QUE .)


state 83

    (41) operador_realacional -> MAYOR_QUE .

    CHAR            reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    BOOL            reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    STRING          reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    IDENTIFICADOR   reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    FLOAT           reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    DOUBLE          reduce using rule 41 (operador_realacional -> MAYOR_QUE .)
    INT             reduce using rule 41 (operador_realacional -> MAYOR_QUE .)


state 84

    (42) operador_realacional -> MAYOR_O_IGUAL_QUE .

    CHAR            reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    BOOL            reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    STRING          reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    IDENTIFICADOR   reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    INT             reduce using rule 42 (operador_realacional -> MAYOR_O_IGUAL_QUE .)


state 85

    (97) declaracion -> valor_tipo IDENTIFICADOR .
    (64) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (65) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (66) asignacionSimple -> IDENTIFICADOR . IGUAL salida_entrada

    END_OF_LINE     reduce using rule 97 (declaracion -> valor_tipo IDENTIFICADOR .)
    COMA            reduce using rule 97 (declaracion -> valor_tipo IDENTIFICADOR .)
    PAR_DER         reduce using rule 97 (declaracion -> valor_tipo IDENTIFICADOR .)
    IGUAL           shift and go to state 134


state 86

    (104) declaracionAsignacion -> valor_tipo asignacionSimple .

    END_OF_LINE     reduce using rule 104 (declaracionAsignacion -> valor_tipo asignacionSimple .)
    COMA            reduce using rule 104 (declaracionAsignacion -> valor_tipo asignacionSimple .)
    PAR_DER         reduce using rule 104 (declaracionAsignacion -> valor_tipo asignacionSimple .)


state 87

    (102) declaracionNull -> valor_tipo OP_TERNARIO . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 135


state 88

    (103) declaracionClase -> IDENTIFICADOR IDENTIFICADOR .

    IGUAL           reduce using rule 103 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 103 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)
    COMA            reduce using rule 103 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)
    PAR_DER         reduce using rule 103 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)


state 89

    (64) asignacionSimple -> IDENTIFICADOR IGUAL . valor
    (65) asignacionSimple -> IDENTIFICADOR IGUAL . expresion
    (66) asignacionSimple -> IDENTIFICADOR IGUAL . salida_entrada
    (68) asignacionClase -> IDENTIFICADOR IGUAL . NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> IDENTIFICADOR IGUAL . asignacionPila
    (70) asignacionEstructuraD -> IDENTIFICADOR IGUAL . asignacionQueue
    (71) asignacionEstructuraD -> IDENTIFICADOR IGUAL . asignacionList
    (67) asignacionNull -> IDENTIFICADOR IGUAL . NULL
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (176) expresion -> . expresion_operacion_aritmetica
    (177) expresion -> . expresion_condicional
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (72) asignacionPila -> . NEW STACK tipoLista PAR_IZQ PAR_DER
    (73) asignacionQueue -> . NEW QUEUE tipoLista PAR_IZQ PAR_DER
    (74) asignacionList -> . NEW LIST tipoLista PAR_IZQ PAR_DER
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (178) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (179) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (180) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (181) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (182) expresion_condicional -> . numero operador_condicional numero
    (183) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (185) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER

    NEW             shift and go to state 140
    NULL            shift and go to state 144
    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    IDENTIFICADOR   shift and go to state 136
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53

    valor                          shift and go to state 137
    expresion                      shift and go to state 138
    salida_entrada                 shift and go to state 139
    asignacionPila                 shift and go to state 141
    asignacionQueue                shift and go to state 142
    asignacionList                 shift and go to state 143
    numero                         shift and go to state 43
    expresion_operacion_aritmetica shift and go to state 24
    expresion_condicional          shift and go to state 25
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28

state 90

    (180) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico . numero
    (181) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 145
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    numero                         shift and go to state 146

state 91

    (183) expresion_condicional -> IDENTIFICADOR operador_condicional . IDENTIFICADOR
    (184) expresion_condicional -> IDENTIFICADOR operador_condicional . numero
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 147
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    numero                         shift and go to state 148

state 92

    (174) stack_push -> IDENTIFICADOR PUNTO . PUSH PAR_IZQ valor PAR_DER
    (175) stack_pop -> IDENTIFICADOR PUNTO . POP PAR_IZQ PAR_DER

    PUSH            shift and go to state 149
    POP             shift and go to state 150


state 93

    (78) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . BOOL
    (79) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . expresion_condicional
    (80) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . IDENTIFICADOR
    (182) expresion_condicional -> . numero operador_condicional numero
    (183) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (185) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BOOL            shift and go to state 152
    IDENTIFICADOR   shift and go to state 151
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    expresion_condicional          shift and go to state 153
    numero                         shift and go to state 154

state 94

    (81) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . numero
    (82) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (178) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (179) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (180) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (181) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 155
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    numero                         shift and go to state 156
    expresion_operacion_aritmetica shift and go to state 157

state 95

    (84) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . valor
    (85) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . expresion
    (86) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . asignacionPila
    (87) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . asignacionQueue
    (88) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . asignacionList
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (176) expresion -> . expresion_operacion_aritmetica
    (177) expresion -> . expresion_condicional
    (72) asignacionPila -> . NEW STACK tipoLista PAR_IZQ PAR_DER
    (73) asignacionQueue -> . NEW QUEUE tipoLista PAR_IZQ PAR_DER
    (74) asignacionList -> . NEW LIST tipoLista PAR_IZQ PAR_DER
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (178) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (179) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (180) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (181) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (182) expresion_condicional -> . numero operador_condicional numero
    (183) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (185) expresion_condicional -> . numero operador_condicional IDENTIFICADOR

    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    IDENTIFICADOR   shift and go to state 136
    NEW             shift and go to state 163
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    valor                          shift and go to state 158
    expresion                      shift and go to state 159
    asignacionPila                 shift and go to state 160
    asignacionQueue                shift and go to state 161
    asignacionList                 shift and go to state 162
    numero                         shift and go to state 43
    expresion_operacion_aritmetica shift and go to state 24
    expresion_condicional          shift and go to state 25

state 96

    (43) operador_aritmentico -> SUMA .

    IDENTIFICADOR   reduce using rule 43 (operador_aritmentico -> SUMA .)
    FLOAT           reduce using rule 43 (operador_aritmentico -> SUMA .)
    DOUBLE          reduce using rule 43 (operador_aritmentico -> SUMA .)
    INT             reduce using rule 43 (operador_aritmentico -> SUMA .)


state 97

    (44) operador_aritmentico -> RESTA .

    IDENTIFICADOR   reduce using rule 44 (operador_aritmentico -> RESTA .)
    FLOAT           reduce using rule 44 (operador_aritmentico -> RESTA .)
    DOUBLE          reduce using rule 44 (operador_aritmentico -> RESTA .)
    INT             reduce using rule 44 (operador_aritmentico -> RESTA .)


state 98

    (45) operador_aritmentico -> MULTIPLICACION .

    IDENTIFICADOR   reduce using rule 45 (operador_aritmentico -> MULTIPLICACION .)
    FLOAT           reduce using rule 45 (operador_aritmentico -> MULTIPLICACION .)
    DOUBLE          reduce using rule 45 (operador_aritmentico -> MULTIPLICACION .)
    INT             reduce using rule 45 (operador_aritmentico -> MULTIPLICACION .)


state 99

    (46) operador_aritmentico -> DIVISION .

    IDENTIFICADOR   reduce using rule 46 (operador_aritmentico -> DIVISION .)
    FLOAT           reduce using rule 46 (operador_aritmentico -> DIVISION .)
    DOUBLE          reduce using rule 46 (operador_aritmentico -> DIVISION .)
    INT             reduce using rule 46 (operador_aritmentico -> DIVISION .)


state 100

    (47) operador_aritmentico -> MODULO .

    IDENTIFICADOR   reduce using rule 47 (operador_aritmentico -> MODULO .)
    FLOAT           reduce using rule 47 (operador_aritmentico -> MODULO .)
    DOUBLE          reduce using rule 47 (operador_aritmentico -> MODULO .)
    INT             reduce using rule 47 (operador_aritmentico -> MODULO .)


state 101

    (48) operador_condicional -> IGUAL_IGUAL .

    IDENTIFICADOR   reduce using rule 48 (operador_condicional -> IGUAL_IGUAL .)
    FLOAT           reduce using rule 48 (operador_condicional -> IGUAL_IGUAL .)
    DOUBLE          reduce using rule 48 (operador_condicional -> IGUAL_IGUAL .)
    INT             reduce using rule 48 (operador_condicional -> IGUAL_IGUAL .)


state 102

    (49) operador_condicional -> NO_IGUAL .

    IDENTIFICADOR   reduce using rule 49 (operador_condicional -> NO_IGUAL .)
    FLOAT           reduce using rule 49 (operador_condicional -> NO_IGUAL .)
    DOUBLE          reduce using rule 49 (operador_condicional -> NO_IGUAL .)
    INT             reduce using rule 49 (operador_condicional -> NO_IGUAL .)


state 103

    (50) operador_condicional -> MENOR_QUE .

    IDENTIFICADOR   reduce using rule 50 (operador_condicional -> MENOR_QUE .)
    FLOAT           reduce using rule 50 (operador_condicional -> MENOR_QUE .)
    DOUBLE          reduce using rule 50 (operador_condicional -> MENOR_QUE .)
    INT             reduce using rule 50 (operador_condicional -> MENOR_QUE .)


state 104

    (51) operador_condicional -> MENOR_O_IGUAL_QUE .

    IDENTIFICADOR   reduce using rule 51 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 51 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 51 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    INT             reduce using rule 51 (operador_condicional -> MENOR_O_IGUAL_QUE .)


state 105

    (52) operador_condicional -> MAYOR_QUE .

    IDENTIFICADOR   reduce using rule 52 (operador_condicional -> MAYOR_QUE .)
    FLOAT           reduce using rule 52 (operador_condicional -> MAYOR_QUE .)
    DOUBLE          reduce using rule 52 (operador_condicional -> MAYOR_QUE .)
    INT             reduce using rule 52 (operador_condicional -> MAYOR_QUE .)


state 106

    (53) operador_condicional -> MAYOR_O_IGUAL_QUE .

    IDENTIFICADOR   reduce using rule 53 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 53 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 53 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    INT             reduce using rule 53 (operador_condicional -> MAYOR_O_IGUAL_QUE .)


state 107

    (94) operadoresCompuestosLogic -> AND_EQUAL .

    BOOL            reduce using rule 94 (operadoresCompuestosLogic -> AND_EQUAL .)
    IDENTIFICADOR   reduce using rule 94 (operadoresCompuestosLogic -> AND_EQUAL .)
    FLOAT           reduce using rule 94 (operadoresCompuestosLogic -> AND_EQUAL .)
    DOUBLE          reduce using rule 94 (operadoresCompuestosLogic -> AND_EQUAL .)
    INT             reduce using rule 94 (operadoresCompuestosLogic -> AND_EQUAL .)


state 108

    (95) operadoresCompuestosLogic -> OR_EQUAL .

    BOOL            reduce using rule 95 (operadoresCompuestosLogic -> OR_EQUAL .)
    IDENTIFICADOR   reduce using rule 95 (operadoresCompuestosLogic -> OR_EQUAL .)
    FLOAT           reduce using rule 95 (operadoresCompuestosLogic -> OR_EQUAL .)
    DOUBLE          reduce using rule 95 (operadoresCompuestosLogic -> OR_EQUAL .)
    INT             reduce using rule 95 (operadoresCompuestosLogic -> OR_EQUAL .)


state 109

    (96) operadoresCompuestosLogic -> EXC_OREQUAL .

    BOOL            reduce using rule 96 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    IDENTIFICADOR   reduce using rule 96 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    FLOAT           reduce using rule 96 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    DOUBLE          reduce using rule 96 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    INT             reduce using rule 96 (operadoresCompuestosLogic -> EXC_OREQUAL .)


state 110

    (89) operadoresCompuestosNumber -> AUMENTADO .

    IDENTIFICADOR   reduce using rule 89 (operadoresCompuestosNumber -> AUMENTADO .)
    FLOAT           reduce using rule 89 (operadoresCompuestosNumber -> AUMENTADO .)
    DOUBLE          reduce using rule 89 (operadoresCompuestosNumber -> AUMENTADO .)
    INT             reduce using rule 89 (operadoresCompuestosNumber -> AUMENTADO .)


state 111

    (90) operadoresCompuestosNumber -> DECREMENTADO .

    IDENTIFICADOR   reduce using rule 90 (operadoresCompuestosNumber -> DECREMENTADO .)
    FLOAT           reduce using rule 90 (operadoresCompuestosNumber -> DECREMENTADO .)
    DOUBLE          reduce using rule 90 (operadoresCompuestosNumber -> DECREMENTADO .)
    INT             reduce using rule 90 (operadoresCompuestosNumber -> DECREMENTADO .)


state 112

    (91) operadoresCompuestosNumber -> MULTIPLICADO_POR .

    IDENTIFICADOR   reduce using rule 91 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    FLOAT           reduce using rule 91 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    DOUBLE          reduce using rule 91 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    INT             reduce using rule 91 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)


state 113

    (92) operadoresCompuestosNumber -> DIVIDIDO_POR .

    IDENTIFICADOR   reduce using rule 92 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    FLOAT           reduce using rule 92 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    DOUBLE          reduce using rule 92 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    INT             reduce using rule 92 (operadoresCompuestosNumber -> DIVIDIDO_POR .)


state 114

    (93) operadoresCompuestosNumber -> MODULO_DE .

    IDENTIFICADOR   reduce using rule 93 (operadoresCompuestosNumber -> MODULO_DE .)
    FLOAT           reduce using rule 93 (operadoresCompuestosNumber -> MODULO_DE .)
    DOUBLE          reduce using rule 93 (operadoresCompuestosNumber -> MODULO_DE .)
    INT             reduce using rule 93 (operadoresCompuestosNumber -> MODULO_DE .)


state 115

    (111) declaracionAsignacion -> declaracionEstructuraD IGUAL . NULL

    NULL            shift and go to state 164


state 116

    (105) declaracionAsignacion -> declaracionClase IGUAL . NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> declaracionClase IGUAL . NULL
    (107) declaracionAsignacion -> declaracionClase IGUAL . IDENTIFICADOR

    NEW             shift and go to state 165
    NULL            shift and go to state 167
    IDENTIFICADOR   shift and go to state 166


state 117

    (108) declaracionAsignacion -> declaracionNull IGUAL . valor
    (109) declaracionAsignacion -> declaracionNull IGUAL . expresion
    (110) declaracionAsignacion -> declaracionNull IGUAL . NULL
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (176) expresion -> . expresion_operacion_aritmetica
    (177) expresion -> . expresion_condicional
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (178) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (179) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (180) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (181) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (182) expresion_condicional -> . numero operador_condicional numero
    (183) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (185) expresion_condicional -> . numero operador_condicional IDENTIFICADOR

    NULL            shift and go to state 170
    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    IDENTIFICADOR   shift and go to state 136
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    valor                          shift and go to state 168
    expresion                      shift and go to state 169
    numero                         shift and go to state 43
    expresion_operacion_aritmetica shift and go to state 24
    expresion_condicional          shift and go to state 25

state 118

    (178) expresion_operacion_aritmetica -> numero operador_aritmentico . numero
    (179) expresion_operacion_aritmetica -> numero operador_aritmentico . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 172
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    numero                         shift and go to state 171

state 119

    (182) expresion_condicional -> numero operador_condicional . numero
    (185) expresion_condicional -> numero operador_condicional . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 174
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    numero                         shift and go to state 173

state 120

    (136) switch_case -> SWITCH PAR_IZQ . valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    IDENTIFICADOR   shift and go to state 133
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    valor                          shift and go to state 175
    numero                         shift and go to state 132

state 121

    (149) for -> FOR PAR_IZQ . forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (158) forInicializador -> . tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador
    (159) forInicializador -> . IDENTIFICADOR IGUAL valorForInicializador
    (160) tipoDatoForInicializador -> . FLOAT_TYPE
    (161) tipoDatoForInicializador -> . DOUBLE_TYPE
    (162) tipoDatoForInicializador -> . INT_TYPE

    IDENTIFICADOR   shift and go to state 178
    FLOAT_TYPE      shift and go to state 179
    DOUBLE_TYPE     shift and go to state 180
    INT_TYPE        shift and go to state 181

    forInicializador               shift and go to state 176
    tipoDatoForInicializador       shift and go to state 177

state 122

    (169) lista -> LIST tipoLista . IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (115) declaracionList -> LIST tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 182


state 123

    (170) tipoLista -> MENOR_QUE . valor_tipo_inicializador MAYOR_QUE
    (27) valor_tipo_inicializador -> . FLOAT_TYPE
    (28) valor_tipo_inicializador -> . DOUBLE_TYPE
    (29) valor_tipo_inicializador -> . STRING_TYPE
    (30) valor_tipo_inicializador -> . INT_TYPE
    (31) valor_tipo_inicializador -> . BOOL_TYPE
    (32) valor_tipo_inicializador -> . CHAR_TYPE
    (33) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 184
    DOUBLE_TYPE     shift and go to state 185
    STRING_TYPE     shift and go to state 186
    INT_TYPE        shift and go to state 187
    BOOL_TYPE       shift and go to state 188
    CHAR_TYPE       shift and go to state 189
    IDENTIFICADOR   shift and go to state 190

    valor_tipo_inicializador       shift and go to state 183

state 124

    (171) pila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (117) declaracionPila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (27) valor_tipo_inicializador -> . FLOAT_TYPE
    (28) valor_tipo_inicializador -> . DOUBLE_TYPE
    (29) valor_tipo_inicializador -> . STRING_TYPE
    (30) valor_tipo_inicializador -> . INT_TYPE
    (31) valor_tipo_inicializador -> . BOOL_TYPE
    (32) valor_tipo_inicializador -> . CHAR_TYPE
    (33) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 184
    DOUBLE_TYPE     shift and go to state 185
    STRING_TYPE     shift and go to state 186
    INT_TYPE        shift and go to state 187
    BOOL_TYPE       shift and go to state 188
    CHAR_TYPE       shift and go to state 189
    IDENTIFICADOR   shift and go to state 190

    valor_tipo_inicializador       shift and go to state 191

state 125

    (189) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . STRING PAR_DER
    (190) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . operacion_string PAR_DER
    (191) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . IDENTIFICADOR PAR_DER
    (192) salida_dos -> CONSOLE_WRITELINE PAR_IZQ . C_CADENA_INTERPOLADA STRING PAR_DER
    (54) operacion_string -> . STRING SUMA STRING
    (55) operacion_string -> . STRING SUMA IDENTIFICADOR
    (56) operacion_string -> . IDENTIFICADOR SUMA STRING
    (57) operacion_string -> . IDENTIFICADOR SUMA IDENTIFICADOR

    STRING          shift and go to state 192
    IDENTIFICADOR   shift and go to state 194
    C_CADENA_INTERPOLADA shift and go to state 195

    operacion_string               shift and go to state 193

state 126

    (193) salida_tres -> CONSOLE_READLINE PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 196


state 127

    (196) funcion_tipo_uno -> modificador_acceso VOID . IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (197) funcion_tipo_tres -> modificador_acceso VOID . IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    IDENTIFICADOR   shift and go to state 197


state 128

    (124) while_normal -> WHILE PAR_IZQ . expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (182) expresion_condicional -> . numero operador_condicional numero
    (183) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (185) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 199
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    expresion_condicional          shift and go to state 198
    numero                         shift and go to state 154

state 129

    (125) while_do -> DO LLAVE_IZQ . body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (126) body_while -> . asignacion END_OF_LINE
    (127) body_while -> . declaracion END_OF_LINE
    (128) body_while -> . salida_entrada END_OF_LINE
    (129) body_while -> . BREAK END_OF_LINE
    (130) body_while -> . CONTINUE END_OF_LINE
    (131) body_while -> . asignacion END_OF_LINE body_while
    (132) body_while -> . declaracion END_OF_LINE body_while
    (133) body_while -> . salida_entrada END_OF_LINE body_while
    (134) body_while -> . BREAK END_OF_LINE body_while
    (135) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    BREAK           shift and go to state 204
    CONTINUE        shift and go to state 205
    IDENTIFICADOR   shift and go to state 206
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    body_while                     shift and go to state 200
    asignacion                     shift and go to state 201
    declaracion                    shift and go to state 202
    salida_entrada                 shift and go to state 203
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 130

    (116) declaracionQueue -> QUEUE tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 209


state 131

    (118) comparacion -> valor operador_realacional valor .

    $end            reduce using rule 118 (comparacion -> valor operador_realacional valor .)
    LLAVE_DER       reduce using rule 118 (comparacion -> valor operador_realacional valor .)
    END_OF_LINE     reduce using rule 118 (comparacion -> valor operador_realacional valor .)


state 132

    (12) valor -> numero .

    $end            reduce using rule 12 (valor -> numero .)
    LLAVE_DER       reduce using rule 12 (valor -> numero .)
    END_OF_LINE     reduce using rule 12 (valor -> numero .)
    PAR_DER         reduce using rule 12 (valor -> numero .)
    DOS_PUNTOS      reduce using rule 12 (valor -> numero .)
    IGUAL_IGUAL     reduce using rule 12 (valor -> numero .)
    NO_IGUAL        reduce using rule 12 (valor -> numero .)
    MENOR_QUE       reduce using rule 12 (valor -> numero .)
    MENOR_O_IGUAL_QUE reduce using rule 12 (valor -> numero .)
    MAYOR_QUE       reduce using rule 12 (valor -> numero .)
    MAYOR_O_IGUAL_QUE reduce using rule 12 (valor -> numero .)


state 133

    (15) valor -> IDENTIFICADOR .

    $end            reduce using rule 15 (valor -> IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 15 (valor -> IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 15 (valor -> IDENTIFICADOR .)
    PAR_DER         reduce using rule 15 (valor -> IDENTIFICADOR .)
    DOS_PUNTOS      reduce using rule 15 (valor -> IDENTIFICADOR .)


state 134

    (64) asignacionSimple -> IDENTIFICADOR IGUAL . valor
    (65) asignacionSimple -> IDENTIFICADOR IGUAL . expresion
    (66) asignacionSimple -> IDENTIFICADOR IGUAL . salida_entrada
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (176) expresion -> . expresion_operacion_aritmetica
    (177) expresion -> . expresion_condicional
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (178) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (179) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (180) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (181) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (182) expresion_condicional -> . numero operador_condicional numero
    (183) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (185) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER

    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    IDENTIFICADOR   shift and go to state 136
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53

    valor                          shift and go to state 137
    expresion                      shift and go to state 138
    salida_entrada                 shift and go to state 139
    numero                         shift and go to state 43
    expresion_operacion_aritmetica shift and go to state 24
    expresion_condicional          shift and go to state 25
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28

state 135

    (102) declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .

    IGUAL           reduce using rule 102 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 102 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)
    COMA            reduce using rule 102 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)
    PAR_DER         reduce using rule 102 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)


state 136

    (15) valor -> IDENTIFICADOR .
    (180) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (181) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (183) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (43) operador_aritmentico -> . SUMA
    (44) operador_aritmentico -> . RESTA
    (45) operador_aritmentico -> . MULTIPLICACION
    (46) operador_aritmentico -> . DIVISION
    (47) operador_aritmentico -> . MODULO
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

    END_OF_LINE     reduce using rule 15 (valor -> IDENTIFICADOR .)
    COMA            reduce using rule 15 (valor -> IDENTIFICADOR .)
    PAR_DER         reduce using rule 15 (valor -> IDENTIFICADOR .)
    SUMA            shift and go to state 96
    RESTA           shift and go to state 97
    MULTIPLICACION  shift and go to state 98
    DIVISION        shift and go to state 99
    MODULO          shift and go to state 100
    IGUAL_IGUAL     shift and go to state 101
    NO_IGUAL        shift and go to state 102
    MENOR_QUE       shift and go to state 103
    MENOR_O_IGUAL_QUE shift and go to state 104
    MAYOR_QUE       shift and go to state 105
    MAYOR_O_IGUAL_QUE shift and go to state 106

    operador_aritmentico           shift and go to state 90
    operador_condicional           shift and go to state 91

state 137

    (64) asignacionSimple -> IDENTIFICADOR IGUAL valor .

    END_OF_LINE     reduce using rule 64 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)
    COMA            reduce using rule 64 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)
    PAR_DER         reduce using rule 64 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)


state 138

    (65) asignacionSimple -> IDENTIFICADOR IGUAL expresion .

    END_OF_LINE     reduce using rule 65 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)
    COMA            reduce using rule 65 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)
    PAR_DER         reduce using rule 65 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)


state 139

    (66) asignacionSimple -> IDENTIFICADOR IGUAL salida_entrada .

    END_OF_LINE     reduce using rule 66 (asignacionSimple -> IDENTIFICADOR IGUAL salida_entrada .)
    COMA            reduce using rule 66 (asignacionSimple -> IDENTIFICADOR IGUAL salida_entrada .)
    PAR_DER         reduce using rule 66 (asignacionSimple -> IDENTIFICADOR IGUAL salida_entrada .)


state 140

    (68) asignacionClase -> IDENTIFICADOR IGUAL NEW . IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionPila -> NEW . STACK tipoLista PAR_IZQ PAR_DER
    (73) asignacionQueue -> NEW . QUEUE tipoLista PAR_IZQ PAR_DER
    (74) asignacionList -> NEW . LIST tipoLista PAR_IZQ PAR_DER

    IDENTIFICADOR   shift and go to state 210
    STACK           shift and go to state 211
    QUEUE           shift and go to state 212
    LIST            shift and go to state 213


state 141

    (69) asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionPila .

    END_OF_LINE     reduce using rule 69 (asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionPila .)


state 142

    (70) asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionQueue .

    END_OF_LINE     reduce using rule 70 (asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionQueue .)


state 143

    (71) asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionList .

    END_OF_LINE     reduce using rule 71 (asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionList .)


state 144

    (67) asignacionNull -> IDENTIFICADOR IGUAL NULL .

    END_OF_LINE     reduce using rule 67 (asignacionNull -> IDENTIFICADOR IGUAL NULL .)


state 145

    (181) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .

    END_OF_LINE     reduce using rule 181 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    COMA            reduce using rule 181 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    PAR_DER         reduce using rule 181 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)


state 146

    (180) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .

    END_OF_LINE     reduce using rule 180 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    COMA            reduce using rule 180 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    PAR_DER         reduce using rule 180 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)


state 147

    (183) expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .

    END_OF_LINE     reduce using rule 183 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    COMA            reduce using rule 183 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    PAR_DER         reduce using rule 183 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)


state 148

    (184) expresion_condicional -> IDENTIFICADOR operador_condicional numero .

    END_OF_LINE     reduce using rule 184 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    COMA            reduce using rule 184 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    PAR_DER         reduce using rule 184 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)


state 149

    (174) stack_push -> IDENTIFICADOR PUNTO PUSH . PAR_IZQ valor PAR_DER

    PAR_IZQ         shift and go to state 214


state 150

    (175) stack_pop -> IDENTIFICADOR PUNTO POP . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 215


state 151

    (80) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR .
    (183) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

    END_OF_LINE     reduce using rule 80 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR .)
    IGUAL_IGUAL     shift and go to state 101
    NO_IGUAL        shift and go to state 102
    MENOR_QUE       shift and go to state 103
    MENOR_O_IGUAL_QUE shift and go to state 104
    MAYOR_QUE       shift and go to state 105
    MAYOR_O_IGUAL_QUE shift and go to state 106

    operador_condicional           shift and go to state 91

state 152

    (78) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL .

    END_OF_LINE     reduce using rule 78 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL .)


state 153

    (79) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional .

    END_OF_LINE     reduce using rule 79 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional .)


state 154

    (182) expresion_condicional -> numero . operador_condicional numero
    (185) expresion_condicional -> numero . operador_condicional IDENTIFICADOR
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 101
    NO_IGUAL        shift and go to state 102
    MENOR_QUE       shift and go to state 103
    MENOR_O_IGUAL_QUE shift and go to state 104
    MAYOR_QUE       shift and go to state 105
    MAYOR_O_IGUAL_QUE shift and go to state 106

    operador_condicional           shift and go to state 119

state 155

    (83) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR .
    (180) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (181) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (43) operador_aritmentico -> . SUMA
    (44) operador_aritmentico -> . RESTA
    (45) operador_aritmentico -> . MULTIPLICACION
    (46) operador_aritmentico -> . DIVISION
    (47) operador_aritmentico -> . MODULO

    END_OF_LINE     reduce using rule 83 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR .)
    SUMA            shift and go to state 96
    RESTA           shift and go to state 97
    MULTIPLICACION  shift and go to state 98
    DIVISION        shift and go to state 99
    MODULO          shift and go to state 100

    operador_aritmentico           shift and go to state 90

state 156

    (81) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero .
    (178) expresion_operacion_aritmetica -> numero . operador_aritmentico numero
    (179) expresion_operacion_aritmetica -> numero . operador_aritmentico IDENTIFICADOR
    (43) operador_aritmentico -> . SUMA
    (44) operador_aritmentico -> . RESTA
    (45) operador_aritmentico -> . MULTIPLICACION
    (46) operador_aritmentico -> . DIVISION
    (47) operador_aritmentico -> . MODULO

    END_OF_LINE     reduce using rule 81 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero .)
    SUMA            shift and go to state 96
    RESTA           shift and go to state 97
    MULTIPLICACION  shift and go to state 98
    DIVISION        shift and go to state 99
    MODULO          shift and go to state 100

    operador_aritmentico           shift and go to state 118

state 157

    (82) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica .

    END_OF_LINE     reduce using rule 82 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica .)


state 158

    (84) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL valor .

    END_OF_LINE     reduce using rule 84 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL valor .)


state 159

    (85) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL expresion .

    END_OF_LINE     reduce using rule 85 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL expresion .)


state 160

    (86) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionPila .

    END_OF_LINE     reduce using rule 86 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionPila .)


state 161

    (87) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionQueue .

    END_OF_LINE     reduce using rule 87 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionQueue .)


state 162

    (88) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionList .

    END_OF_LINE     reduce using rule 88 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionList .)


state 163

    (72) asignacionPila -> NEW . STACK tipoLista PAR_IZQ PAR_DER
    (73) asignacionQueue -> NEW . QUEUE tipoLista PAR_IZQ PAR_DER
    (74) asignacionList -> NEW . LIST tipoLista PAR_IZQ PAR_DER

    STACK           shift and go to state 211
    QUEUE           shift and go to state 212
    LIST            shift and go to state 213


state 164

    (111) declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .

    END_OF_LINE     reduce using rule 111 (declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .)
    COMA            reduce using rule 111 (declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .)
    PAR_DER         reduce using rule 111 (declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .)


state 165

    (105) declaracionAsignacion -> declaracionClase IGUAL NEW . IDENTIFICADOR PAR_IZQ PAR_DER

    IDENTIFICADOR   shift and go to state 216


state 166

    (107) declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .

    END_OF_LINE     reduce using rule 107 (declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .)
    COMA            reduce using rule 107 (declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .)
    PAR_DER         reduce using rule 107 (declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .)


state 167

    (106) declaracionAsignacion -> declaracionClase IGUAL NULL .

    END_OF_LINE     reduce using rule 106 (declaracionAsignacion -> declaracionClase IGUAL NULL .)
    COMA            reduce using rule 106 (declaracionAsignacion -> declaracionClase IGUAL NULL .)
    PAR_DER         reduce using rule 106 (declaracionAsignacion -> declaracionClase IGUAL NULL .)


state 168

    (108) declaracionAsignacion -> declaracionNull IGUAL valor .

    END_OF_LINE     reduce using rule 108 (declaracionAsignacion -> declaracionNull IGUAL valor .)
    COMA            reduce using rule 108 (declaracionAsignacion -> declaracionNull IGUAL valor .)
    PAR_DER         reduce using rule 108 (declaracionAsignacion -> declaracionNull IGUAL valor .)


state 169

    (109) declaracionAsignacion -> declaracionNull IGUAL expresion .

    END_OF_LINE     reduce using rule 109 (declaracionAsignacion -> declaracionNull IGUAL expresion .)
    COMA            reduce using rule 109 (declaracionAsignacion -> declaracionNull IGUAL expresion .)
    PAR_DER         reduce using rule 109 (declaracionAsignacion -> declaracionNull IGUAL expresion .)


state 170

    (110) declaracionAsignacion -> declaracionNull IGUAL NULL .

    END_OF_LINE     reduce using rule 110 (declaracionAsignacion -> declaracionNull IGUAL NULL .)
    COMA            reduce using rule 110 (declaracionAsignacion -> declaracionNull IGUAL NULL .)
    PAR_DER         reduce using rule 110 (declaracionAsignacion -> declaracionNull IGUAL NULL .)


state 171

    (178) expresion_operacion_aritmetica -> numero operador_aritmentico numero .

    END_OF_LINE     reduce using rule 178 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    COMA            reduce using rule 178 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    PAR_DER         reduce using rule 178 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)


state 172

    (179) expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .

    END_OF_LINE     reduce using rule 179 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    COMA            reduce using rule 179 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    PAR_DER         reduce using rule 179 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)


state 173

    (182) expresion_condicional -> numero operador_condicional numero .

    END_OF_LINE     reduce using rule 182 (expresion_condicional -> numero operador_condicional numero .)
    COMA            reduce using rule 182 (expresion_condicional -> numero operador_condicional numero .)
    PAR_DER         reduce using rule 182 (expresion_condicional -> numero operador_condicional numero .)


state 174

    (185) expresion_condicional -> numero operador_condicional IDENTIFICADOR .

    END_OF_LINE     reduce using rule 185 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    COMA            reduce using rule 185 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    PAR_DER         reduce using rule 185 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)


state 175

    (136) switch_case -> SWITCH PAR_IZQ valor . PAR_DER LLAVE_IZQ casos LLAVE_DER

    PAR_DER         shift and go to state 217


state 176

    (149) for -> FOR PAR_IZQ forInicializador . END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    END_OF_LINE     shift and go to state 218


state 177

    (158) forInicializador -> tipoDatoForInicializador . IDENTIFICADOR IGUAL valorForInicializador

    IDENTIFICADOR   shift and go to state 219


state 178

    (159) forInicializador -> IDENTIFICADOR . IGUAL valorForInicializador

    IGUAL           shift and go to state 220


state 179

    (160) tipoDatoForInicializador -> FLOAT_TYPE .

    IDENTIFICADOR   reduce using rule 160 (tipoDatoForInicializador -> FLOAT_TYPE .)


state 180

    (161) tipoDatoForInicializador -> DOUBLE_TYPE .

    IDENTIFICADOR   reduce using rule 161 (tipoDatoForInicializador -> DOUBLE_TYPE .)


state 181

    (162) tipoDatoForInicializador -> INT_TYPE .

    IDENTIFICADOR   reduce using rule 162 (tipoDatoForInicializador -> INT_TYPE .)


state 182

    (169) lista -> LIST tipoLista IDENTIFICADOR . IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (115) declaracionList -> LIST tipoLista IDENTIFICADOR .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 221
    END_OF_LINE     reduce using rule 115 (declaracionList -> LIST tipoLista IDENTIFICADOR .)

  ! IGUAL           [ reduce using rule 115 (declaracionList -> LIST tipoLista IDENTIFICADOR .) ]


state 183

    (170) tipoLista -> MENOR_QUE valor_tipo_inicializador . MAYOR_QUE

    MAYOR_QUE       shift and go to state 222


state 184

    (27) valor_tipo_inicializador -> FLOAT_TYPE .

    MAYOR_QUE       reduce using rule 27 (valor_tipo_inicializador -> FLOAT_TYPE .)


state 185

    (28) valor_tipo_inicializador -> DOUBLE_TYPE .

    MAYOR_QUE       reduce using rule 28 (valor_tipo_inicializador -> DOUBLE_TYPE .)


state 186

    (29) valor_tipo_inicializador -> STRING_TYPE .

    MAYOR_QUE       reduce using rule 29 (valor_tipo_inicializador -> STRING_TYPE .)


state 187

    (30) valor_tipo_inicializador -> INT_TYPE .

    MAYOR_QUE       reduce using rule 30 (valor_tipo_inicializador -> INT_TYPE .)


state 188

    (31) valor_tipo_inicializador -> BOOL_TYPE .

    MAYOR_QUE       reduce using rule 31 (valor_tipo_inicializador -> BOOL_TYPE .)


state 189

    (32) valor_tipo_inicializador -> CHAR_TYPE .

    MAYOR_QUE       reduce using rule 32 (valor_tipo_inicializador -> CHAR_TYPE .)


state 190

    (33) valor_tipo_inicializador -> IDENTIFICADOR .

    MAYOR_QUE       reduce using rule 33 (valor_tipo_inicializador -> IDENTIFICADOR .)


state 191

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (117) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR

    MAYOR_QUE       shift and go to state 223


state 192

    (189) salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING . PAR_DER
    (54) operacion_string -> STRING . SUMA STRING
    (55) operacion_string -> STRING . SUMA IDENTIFICADOR

    PAR_DER         shift and go to state 224
    SUMA            shift and go to state 225


state 193

    (190) salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string . PAR_DER

    PAR_DER         shift and go to state 226


state 194

    (191) salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR . PAR_DER
    (56) operacion_string -> IDENTIFICADOR . SUMA STRING
    (57) operacion_string -> IDENTIFICADOR . SUMA IDENTIFICADOR

    PAR_DER         shift and go to state 227
    SUMA            shift and go to state 228


state 195

    (192) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA . STRING PAR_DER

    STRING          shift and go to state 229


state 196

    (193) salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 193 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)
    COMA            reduce using rule 193 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)
    PAR_DER         reduce using rule 193 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)


state 197

    (196) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR . PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (197) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR . PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    PAR_IZQ         shift and go to state 230


state 198

    (124) while_normal -> WHILE PAR_IZQ expresion_condicional . PAR_DER LLAVE_IZQ body_while LLAVE_DER

    PAR_DER         shift and go to state 231


state 199

    (183) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 101
    NO_IGUAL        shift and go to state 102
    MENOR_QUE       shift and go to state 103
    MENOR_O_IGUAL_QUE shift and go to state 104
    MAYOR_QUE       shift and go to state 105
    MAYOR_O_IGUAL_QUE shift and go to state 106

    operador_condicional           shift and go to state 91

state 200

    (125) while_do -> DO LLAVE_IZQ body_while . LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    LLAVE_DER       shift and go to state 232


state 201

    (126) body_while -> asignacion . END_OF_LINE
    (131) body_while -> asignacion . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 233


state 202

    (127) body_while -> declaracion . END_OF_LINE
    (132) body_while -> declaracion . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 234


state 203

    (128) body_while -> salida_entrada . END_OF_LINE
    (133) body_while -> salida_entrada . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 235


state 204

    (129) body_while -> BREAK . END_OF_LINE
    (134) body_while -> BREAK . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 236


state 205

    (130) body_while -> CONTINUE . END_OF_LINE
    (135) body_while -> CONTINUE . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 237


state 206

    (64) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (65) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (66) asignacionSimple -> IDENTIFICADOR . IGUAL salida_entrada
    (68) asignacionClase -> IDENTIFICADOR . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionPila
    (70) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionQueue
    (71) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionList
    (67) asignacionNull -> IDENTIFICADOR . IGUAL NULL
    (103) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR
    (78) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionList
    (94) operadoresCompuestosLogic -> . AND_EQUAL
    (95) operadoresCompuestosLogic -> . OR_EQUAL
    (96) operadoresCompuestosLogic -> . EXC_OREQUAL
    (89) operadoresCompuestosNumber -> . AUMENTADO
    (90) operadoresCompuestosNumber -> . DECREMENTADO
    (91) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (92) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (93) operadoresCompuestosNumber -> . MODULO_DE

    IGUAL           shift and go to state 89
    IDENTIFICADOR   shift and go to state 88
    NULL_EQUAL      shift and go to state 95
    AND_EQUAL       shift and go to state 107
    OR_EQUAL        shift and go to state 108
    EXC_OREQUAL     shift and go to state 109
    AUMENTADO       shift and go to state 110
    DECREMENTADO    shift and go to state 111
    MULTIPLICADO_POR shift and go to state 112
    DIVIDIDO_POR    shift and go to state 113
    MODULO_DE       shift and go to state 114

    operadoresCompuestosLogic      shift and go to state 93
    operadoresCompuestosNumber     shift and go to state 94

state 207

    (115) declaracionList -> LIST . tipoLista IDENTIFICADOR
    (170) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 123

    tipoLista                      shift and go to state 238

state 208

    (117) declaracionPila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    MENOR_QUE       shift and go to state 239


state 209

    (116) declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .

    IGUAL           reduce using rule 116 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 116 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    COMA            reduce using rule 116 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    PAR_DER         reduce using rule 116 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)


state 210

    (68) asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 240


state 211

    (72) asignacionPila -> NEW STACK . tipoLista PAR_IZQ PAR_DER
    (170) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 123

    tipoLista                      shift and go to state 241

state 212

    (73) asignacionQueue -> NEW QUEUE . tipoLista PAR_IZQ PAR_DER
    (170) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 123

    tipoLista                      shift and go to state 242

state 213

    (74) asignacionList -> NEW LIST . tipoLista PAR_IZQ PAR_DER
    (170) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 123

    tipoLista                      shift and go to state 243

state 214

    (174) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ . valor PAR_DER
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    IDENTIFICADOR   shift and go to state 133
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    valor                          shift and go to state 244
    numero                         shift and go to state 132

state 215

    (175) stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 245


state 216

    (105) declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 246


state 217

    (136) switch_case -> SWITCH PAR_IZQ valor PAR_DER . LLAVE_IZQ casos LLAVE_DER

    LLAVE_IZQ       shift and go to state 247


state 218

    (149) for -> FOR PAR_IZQ forInicializador END_OF_LINE . forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (153) forCondicion -> . IDENTIFICADOR operador_condicional valorForCondicion

    IDENTIFICADOR   shift and go to state 249

    forCondicion                   shift and go to state 248

state 219

    (158) forInicializador -> tipoDatoForInicializador IDENTIFICADOR . IGUAL valorForInicializador

    IGUAL           shift and go to state 250


state 220

    (159) forInicializador -> IDENTIFICADOR IGUAL . valorForInicializador
    (163) valorForInicializador -> . FLOAT
    (164) valorForInicializador -> . DOUBLE
    (165) valorForInicializador -> . INT
    (166) valorForInicializador -> . IDENTIFICADOR

    FLOAT           shift and go to state 253
    DOUBLE          shift and go to state 254
    INT             shift and go to state 255
    IDENTIFICADOR   shift and go to state 251

    valorForInicializador          shift and go to state 252

state 221

    (169) lista -> LIST tipoLista IDENTIFICADOR IGUAL . NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE

    NEW             shift and go to state 256


state 222

    (170) tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .

    IDENTIFICADOR   reduce using rule 170 (tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .)
    PAR_IZQ         reduce using rule 170 (tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .)


state 223

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (117) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 257


state 224

    (189) salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .

    END_OF_LINE     reduce using rule 189 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)
    COMA            reduce using rule 189 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)
    PAR_DER         reduce using rule 189 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)


state 225

    (54) operacion_string -> STRING SUMA . STRING
    (55) operacion_string -> STRING SUMA . IDENTIFICADOR

    STRING          shift and go to state 258
    IDENTIFICADOR   shift and go to state 259


state 226

    (190) salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .

    END_OF_LINE     reduce using rule 190 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)
    COMA            reduce using rule 190 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)
    PAR_DER         reduce using rule 190 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)


state 227

    (191) salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .

    END_OF_LINE     reduce using rule 191 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)
    COMA            reduce using rule 191 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)
    PAR_DER         reduce using rule 191 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)


state 228

    (56) operacion_string -> IDENTIFICADOR SUMA . STRING
    (57) operacion_string -> IDENTIFICADOR SUMA . IDENTIFICADOR

    STRING          shift and go to state 261
    IDENTIFICADOR   shift and go to state 260


state 229

    (192) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING . PAR_DER

    PAR_DER         shift and go to state 262


state 230

    (196) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ . PAR_DER LLAVE_IZQ body LLAVE_DER
    (197) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ . parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (198) parametrosF -> . declaracion
    (199) parametrosF -> . declaracion COMA parametrosF
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    PAR_DER         shift and go to state 264
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    IDENTIFICADOR   shift and go to state 263
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    parametrosF                    shift and go to state 265
    declaracion                    shift and go to state 266
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 231

    (124) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER . LLAVE_IZQ body_while LLAVE_DER

    LLAVE_IZQ       shift and go to state 267


state 232

    (125) while_do -> DO LLAVE_IZQ body_while LLAVE_DER . WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    WHILE           shift and go to state 268


state 233

    (126) body_while -> asignacion END_OF_LINE .
    (131) body_while -> asignacion END_OF_LINE . body_while
    (126) body_while -> . asignacion END_OF_LINE
    (127) body_while -> . declaracion END_OF_LINE
    (128) body_while -> . salida_entrada END_OF_LINE
    (129) body_while -> . BREAK END_OF_LINE
    (130) body_while -> . CONTINUE END_OF_LINE
    (131) body_while -> . asignacion END_OF_LINE body_while
    (132) body_while -> . declaracion END_OF_LINE body_while
    (133) body_while -> . salida_entrada END_OF_LINE body_while
    (134) body_while -> . BREAK END_OF_LINE body_while
    (135) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 126 (body_while -> asignacion END_OF_LINE .)
    BREAK           shift and go to state 204
    CONTINUE        shift and go to state 205
    IDENTIFICADOR   shift and go to state 206
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    asignacion                     shift and go to state 201
    body_while                     shift and go to state 269
    declaracion                    shift and go to state 202
    salida_entrada                 shift and go to state 203
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 234

    (127) body_while -> declaracion END_OF_LINE .
    (132) body_while -> declaracion END_OF_LINE . body_while
    (126) body_while -> . asignacion END_OF_LINE
    (127) body_while -> . declaracion END_OF_LINE
    (128) body_while -> . salida_entrada END_OF_LINE
    (129) body_while -> . BREAK END_OF_LINE
    (130) body_while -> . CONTINUE END_OF_LINE
    (131) body_while -> . asignacion END_OF_LINE body_while
    (132) body_while -> . declaracion END_OF_LINE body_while
    (133) body_while -> . salida_entrada END_OF_LINE body_while
    (134) body_while -> . BREAK END_OF_LINE body_while
    (135) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 127 (body_while -> declaracion END_OF_LINE .)
    BREAK           shift and go to state 204
    CONTINUE        shift and go to state 205
    IDENTIFICADOR   shift and go to state 206
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    declaracion                    shift and go to state 202
    body_while                     shift and go to state 270
    asignacion                     shift and go to state 201
    salida_entrada                 shift and go to state 203
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 235

    (128) body_while -> salida_entrada END_OF_LINE .
    (133) body_while -> salida_entrada END_OF_LINE . body_while
    (126) body_while -> . asignacion END_OF_LINE
    (127) body_while -> . declaracion END_OF_LINE
    (128) body_while -> . salida_entrada END_OF_LINE
    (129) body_while -> . BREAK END_OF_LINE
    (130) body_while -> . CONTINUE END_OF_LINE
    (131) body_while -> . asignacion END_OF_LINE body_while
    (132) body_while -> . declaracion END_OF_LINE body_while
    (133) body_while -> . salida_entrada END_OF_LINE body_while
    (134) body_while -> . BREAK END_OF_LINE body_while
    (135) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 128 (body_while -> salida_entrada END_OF_LINE .)
    BREAK           shift and go to state 204
    CONTINUE        shift and go to state 205
    IDENTIFICADOR   shift and go to state 206
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    salida_entrada                 shift and go to state 203
    body_while                     shift and go to state 271
    asignacion                     shift and go to state 201
    declaracion                    shift and go to state 202
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 236

    (129) body_while -> BREAK END_OF_LINE .
    (134) body_while -> BREAK END_OF_LINE . body_while
    (126) body_while -> . asignacion END_OF_LINE
    (127) body_while -> . declaracion END_OF_LINE
    (128) body_while -> . salida_entrada END_OF_LINE
    (129) body_while -> . BREAK END_OF_LINE
    (130) body_while -> . CONTINUE END_OF_LINE
    (131) body_while -> . asignacion END_OF_LINE body_while
    (132) body_while -> . declaracion END_OF_LINE body_while
    (133) body_while -> . salida_entrada END_OF_LINE body_while
    (134) body_while -> . BREAK END_OF_LINE body_while
    (135) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 129 (body_while -> BREAK END_OF_LINE .)
    BREAK           shift and go to state 204
    CONTINUE        shift and go to state 205
    IDENTIFICADOR   shift and go to state 206
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    body_while                     shift and go to state 272
    asignacion                     shift and go to state 201
    declaracion                    shift and go to state 202
    salida_entrada                 shift and go to state 203
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 237

    (130) body_while -> CONTINUE END_OF_LINE .
    (135) body_while -> CONTINUE END_OF_LINE . body_while
    (126) body_while -> . asignacion END_OF_LINE
    (127) body_while -> . declaracion END_OF_LINE
    (128) body_while -> . salida_entrada END_OF_LINE
    (129) body_while -> . BREAK END_OF_LINE
    (130) body_while -> . CONTINUE END_OF_LINE
    (131) body_while -> . asignacion END_OF_LINE body_while
    (132) body_while -> . declaracion END_OF_LINE body_while
    (133) body_while -> . salida_entrada END_OF_LINE body_while
    (134) body_while -> . BREAK END_OF_LINE body_while
    (135) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 130 (body_while -> CONTINUE END_OF_LINE .)
    BREAK           shift and go to state 204
    CONTINUE        shift and go to state 205
    IDENTIFICADOR   shift and go to state 206
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    body_while                     shift and go to state 273
    asignacion                     shift and go to state 201
    declaracion                    shift and go to state 202
    salida_entrada                 shift and go to state 203
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 238

    (115) declaracionList -> LIST tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 274


state 239

    (117) declaracionPila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (27) valor_tipo_inicializador -> . FLOAT_TYPE
    (28) valor_tipo_inicializador -> . DOUBLE_TYPE
    (29) valor_tipo_inicializador -> . STRING_TYPE
    (30) valor_tipo_inicializador -> . INT_TYPE
    (31) valor_tipo_inicializador -> . BOOL_TYPE
    (32) valor_tipo_inicializador -> . CHAR_TYPE
    (33) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 184
    DOUBLE_TYPE     shift and go to state 185
    STRING_TYPE     shift and go to state 186
    INT_TYPE        shift and go to state 187
    BOOL_TYPE       shift and go to state 188
    CHAR_TYPE       shift and go to state 189
    IDENTIFICADOR   shift and go to state 190

    valor_tipo_inicializador       shift and go to state 275

state 240

    (68) asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 276


state 241

    (72) asignacionPila -> NEW STACK tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 277


state 242

    (73) asignacionQueue -> NEW QUEUE tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 278


state 243

    (74) asignacionList -> NEW LIST tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 279


state 244

    (174) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor . PAR_DER

    PAR_DER         shift and go to state 280


state 245

    (175) stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 175 (stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER .)


state 246

    (105) declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 281


state 247

    (136) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ . casos LLAVE_DER
    (137) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (138) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (139) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (140) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    CASE            shift and go to state 283

    casos                          shift and go to state 282

state 248

    (149) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion . END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    END_OF_LINE     shift and go to state 284


state 249

    (153) forCondicion -> IDENTIFICADOR . operador_condicional valorForCondicion
    (48) operador_condicional -> . IGUAL_IGUAL
    (49) operador_condicional -> . NO_IGUAL
    (50) operador_condicional -> . MENOR_QUE
    (51) operador_condicional -> . MENOR_O_IGUAL_QUE
    (52) operador_condicional -> . MAYOR_QUE
    (53) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 101
    NO_IGUAL        shift and go to state 102
    MENOR_QUE       shift and go to state 103
    MENOR_O_IGUAL_QUE shift and go to state 104
    MAYOR_QUE       shift and go to state 105
    MAYOR_O_IGUAL_QUE shift and go to state 106

    operador_condicional           shift and go to state 285

state 250

    (158) forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL . valorForInicializador
    (163) valorForInicializador -> . FLOAT
    (164) valorForInicializador -> . DOUBLE
    (165) valorForInicializador -> . INT
    (166) valorForInicializador -> . IDENTIFICADOR

    FLOAT           shift and go to state 253
    DOUBLE          shift and go to state 254
    INT             shift and go to state 255
    IDENTIFICADOR   shift and go to state 251

    valorForInicializador          shift and go to state 286

state 251

    (166) valorForInicializador -> IDENTIFICADOR .

    END_OF_LINE     reduce using rule 166 (valorForInicializador -> IDENTIFICADOR .)


state 252

    (159) forInicializador -> IDENTIFICADOR IGUAL valorForInicializador .

    END_OF_LINE     reduce using rule 159 (forInicializador -> IDENTIFICADOR IGUAL valorForInicializador .)


state 253

    (163) valorForInicializador -> FLOAT .

    END_OF_LINE     reduce using rule 163 (valorForInicializador -> FLOAT .)


state 254

    (164) valorForInicializador -> DOUBLE .

    END_OF_LINE     reduce using rule 164 (valorForInicializador -> DOUBLE .)


state 255

    (165) valorForInicializador -> INT .

    END_OF_LINE     reduce using rule 165 (valorForInicializador -> INT .)


state 256

    (169) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW . LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE

    LIST            shift and go to state 287


state 257

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR . IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (117) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 288
    END_OF_LINE     reduce using rule 117 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)

  ! IGUAL           [ reduce using rule 117 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .) ]


state 258

    (54) operacion_string -> STRING SUMA STRING .

    PAR_DER         reduce using rule 54 (operacion_string -> STRING SUMA STRING .)


state 259

    (55) operacion_string -> STRING SUMA IDENTIFICADOR .

    PAR_DER         reduce using rule 55 (operacion_string -> STRING SUMA IDENTIFICADOR .)


state 260

    (57) operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR .

    PAR_DER         reduce using rule 57 (operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR .)


state 261

    (56) operacion_string -> IDENTIFICADOR SUMA STRING .

    PAR_DER         reduce using rule 56 (operacion_string -> IDENTIFICADOR SUMA STRING .)


state 262

    (192) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .

    END_OF_LINE     reduce using rule 192 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)
    COMA            reduce using rule 192 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)
    PAR_DER         reduce using rule 192 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)


state 263

    (103) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 88


state 264

    (196) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER . LLAVE_IZQ body LLAVE_DER

    LLAVE_IZQ       shift and go to state 289


state 265

    (197) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF . PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    PAR_DER         shift and go to state 290


state 266

    (198) parametrosF -> declaracion .
    (199) parametrosF -> declaracion . COMA parametrosF

    PAR_DER         reduce using rule 198 (parametrosF -> declaracion .)
    COMA            shift and go to state 291


state 267

    (124) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ . body_while LLAVE_DER
    (126) body_while -> . asignacion END_OF_LINE
    (127) body_while -> . declaracion END_OF_LINE
    (128) body_while -> . salida_entrada END_OF_LINE
    (129) body_while -> . BREAK END_OF_LINE
    (130) body_while -> . CONTINUE END_OF_LINE
    (131) body_while -> . asignacion END_OF_LINE body_while
    (132) body_while -> . declaracion END_OF_LINE body_while
    (133) body_while -> . salida_entrada END_OF_LINE body_while
    (134) body_while -> . BREAK END_OF_LINE body_while
    (135) body_while -> . CONTINUE END_OF_LINE body_while
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    BREAK           shift and go to state 204
    CONTINUE        shift and go to state 205
    IDENTIFICADOR   shift and go to state 206
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    body_while                     shift and go to state 292
    asignacion                     shift and go to state 201
    declaracion                    shift and go to state 202
    salida_entrada                 shift and go to state 203
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 268

    (125) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE . PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 293


state 269

    (131) body_while -> asignacion END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 131 (body_while -> asignacion END_OF_LINE body_while .)


state 270

    (132) body_while -> declaracion END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 132 (body_while -> declaracion END_OF_LINE body_while .)


state 271

    (133) body_while -> salida_entrada END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 133 (body_while -> salida_entrada END_OF_LINE body_while .)


state 272

    (134) body_while -> BREAK END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 134 (body_while -> BREAK END_OF_LINE body_while .)


state 273

    (135) body_while -> CONTINUE END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 135 (body_while -> CONTINUE END_OF_LINE body_while .)


state 274

    (115) declaracionList -> LIST tipoLista IDENTIFICADOR .

    IGUAL           reduce using rule 115 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 115 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    COMA            reduce using rule 115 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    PAR_DER         reduce using rule 115 (declaracionList -> LIST tipoLista IDENTIFICADOR .)


state 275

    (117) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR

    MAYOR_QUE       shift and go to state 294


state 276

    (68) asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 68 (asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)


state 277

    (72) asignacionPila -> NEW STACK tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 295


state 278

    (73) asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 296


state 279

    (74) asignacionList -> NEW LIST tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 297


state 280

    (174) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER .

    END_OF_LINE     reduce using rule 174 (stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER .)


state 281

    (105) declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 105 (declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)
    COMA            reduce using rule 105 (declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)
    PAR_DER         reduce using rule 105 (declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)


state 282

    (136) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos . LLAVE_DER

    LLAVE_DER       shift and go to state 298


state 283

    (137) casos -> CASE . valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (138) casos -> CASE . valor DOS_PUNTOS BREAK END_OF_LINE
    (139) casos -> CASE . valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (140) casos -> CASE . valor DOS_PUNTOS BREAK END_OF_LINE casos
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    IDENTIFICADOR   shift and go to state 133
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    valor                          shift and go to state 299
    numero                         shift and go to state 132

state 284

    (149) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE . forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (150) forIterador -> . IDENTIFICADOR operadorForIteracion

    IDENTIFICADOR   shift and go to state 301

    forIterador                    shift and go to state 300

state 285

    (153) forCondicion -> IDENTIFICADOR operador_condicional . valorForCondicion
    (154) valorForCondicion -> . FLOAT
    (155) valorForCondicion -> . DOUBLE
    (156) valorForCondicion -> . INT
    (157) valorForCondicion -> . IDENTIFICADOR

    FLOAT           shift and go to state 304
    DOUBLE          shift and go to state 305
    INT             shift and go to state 306
    IDENTIFICADOR   shift and go to state 302

    valorForCondicion              shift and go to state 303

state 286

    (158) forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador .

    END_OF_LINE     reduce using rule 158 (forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador .)


state 287

    (169) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST . tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (170) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 123

    tipoLista                      shift and go to state 307

state 288

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL . NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    NEW             shift and go to state 308


state 289

    (196) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ . body LLAVE_DER
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (118) comparacion -> . valor operador_realacional valor
    (119) estructura_control -> . while
    (120) estructura_control -> . switch_case
    (121) estructura_control -> . for
    (167) estructura_datos -> . lista
    (168) estructura_datos -> . pila
    (176) expresion -> . expresion_operacion_aritmetica
    (177) expresion -> . expresion_condicional
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (194) funcion -> . funcion_tipo_uno
    (195) funcion -> . funcion_tipo_tres
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (58) empty -> . END_OF_LINE
    (172) funciones_estructura_datos -> . stack_push
    (173) funciones_estructura_datos -> . stack_pop
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (122) while -> . while_normal
    (123) while -> . while_do
    (136) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (149) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (169) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (171) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (178) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (179) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (180) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (181) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (182) expresion_condicional -> . numero operador_condicional numero
    (183) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (185) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (196) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (197) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (174) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (175) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (124) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (125) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (34) modificador_acceso -> . PRIVATE
    (35) modificador_acceso -> . PROTECTED
    (36) modificador_acceso -> . PUBLIC
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 32
    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    SWITCH          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 50
    STACK           shift and go to state 51
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66
    WHILE           shift and go to state 67
    DO              shift and go to state 68
    PRIVATE         shift and go to state 69
    PROTECTED       shift and go to state 70
    PUBLIC          shift and go to state 71
    QUEUE           shift and go to state 72

    modificador_acceso             shift and go to state 54
    body                           shift and go to state 309
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor                          shift and go to state 18
    while                          shift and go to state 19
    switch_case                    shift and go to state 20
    for                            shift and go to state 21
    lista                          shift and go to state 22
    pila                           shift and go to state 23
    expresion_operacion_aritmetica shift and go to state 24
    expresion_condicional          shift and go to state 25
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    funcion_tipo_uno               shift and go to state 29
    funcion_tipo_tres              shift and go to state 30
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    stack_push                     shift and go to state 37
    stack_pop                      shift and go to state 38
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    numero                         shift and go to state 43
    while_normal                   shift and go to state 46
    while_do                       shift and go to state 47
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 290

    (197) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER . LLAVE_IZQ bodyF LLAVE_DER

    LLAVE_IZQ       shift and go to state 310


state 291

    (199) parametrosF -> declaracion COMA . parametrosF
    (198) parametrosF -> . declaracion
    (199) parametrosF -> . declaracion COMA parametrosF
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    IDENTIFICADOR   shift and go to state 263
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    declaracion                    shift and go to state 266
    parametrosF                    shift and go to state 311
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 292

    (124) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while . LLAVE_DER

    LLAVE_DER       shift and go to state 312


state 293

    (125) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ . expresion_condicional PAR_DER END_OF_LINE
    (182) expresion_condicional -> . numero operador_condicional numero
    (183) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (185) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    IDENTIFICADOR   shift and go to state 199
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    expresion_condicional          shift and go to state 313
    numero                         shift and go to state 154

state 294

    (117) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 314


state 295

    (72) asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 72 (asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER .)


state 296

    (73) asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 73 (asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER .)


state 297

    (74) asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 74 (asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER .)


state 298

    (136) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .

    $end            reduce using rule 136 (switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .)
    LLAVE_DER       reduce using rule 136 (switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .)


state 299

    (137) casos -> CASE valor . DOS_PUNTOS body_case BREAK END_OF_LINE
    (138) casos -> CASE valor . DOS_PUNTOS BREAK END_OF_LINE
    (139) casos -> CASE valor . DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (140) casos -> CASE valor . DOS_PUNTOS BREAK END_OF_LINE casos

    DOS_PUNTOS      shift and go to state 315


state 300

    (149) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador . PAR_DER LLAVE_IZQ body LLAVE_DER

    PAR_DER         shift and go to state 316


state 301

    (150) forIterador -> IDENTIFICADOR . operadorForIteracion
    (151) operadorForIteracion -> . INCREMENTO
    (152) operadorForIteracion -> . DECREMENTO

    INCREMENTO      shift and go to state 318
    DECREMENTO      shift and go to state 319

    operadorForIteracion           shift and go to state 317

state 302

    (157) valorForCondicion -> IDENTIFICADOR .

    END_OF_LINE     reduce using rule 157 (valorForCondicion -> IDENTIFICADOR .)


state 303

    (153) forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion .

    END_OF_LINE     reduce using rule 153 (forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion .)


state 304

    (154) valorForCondicion -> FLOAT .

    END_OF_LINE     reduce using rule 154 (valorForCondicion -> FLOAT .)


state 305

    (155) valorForCondicion -> DOUBLE .

    END_OF_LINE     reduce using rule 155 (valorForCondicion -> DOUBLE .)


state 306

    (156) valorForCondicion -> INT .

    END_OF_LINE     reduce using rule 156 (valorForCondicion -> INT .)


state 307

    (169) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista . PAR_IZQ PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 320


state 308

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    STACK           shift and go to state 321


state 309

    (196) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body . LLAVE_DER

    LLAVE_DER       shift and go to state 322


state 310

    (197) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ . bodyF LLAVE_DER
    (200) bodyF -> . asignacion END_OF_LINE
    (201) bodyF -> . declaracion END_OF_LINE
    (202) bodyF -> . salida_entrada END_OF_LINE
    (203) bodyF -> . asignacion END_OF_LINE bodyF
    (204) bodyF -> . declaracion END_OF_LINE bodyF
    (205) bodyF -> . salida_entrada END_OF_LINE bodyF
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 206
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    bodyF                          shift and go to state 323
    asignacion                     shift and go to state 324
    declaracion                    shift and go to state 325
    salida_entrada                 shift and go to state 326
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 311

    (199) parametrosF -> declaracion COMA parametrosF .

    PAR_DER         reduce using rule 199 (parametrosF -> declaracion COMA parametrosF .)


state 312

    (124) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .

    $end            reduce using rule 124 (while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .)
    LLAVE_DER       reduce using rule 124 (while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .)


state 313

    (125) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 327


state 314

    (117) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .

    IGUAL           reduce using rule 117 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 117 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    COMA            reduce using rule 117 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    PAR_DER         reduce using rule 117 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)


state 315

    (137) casos -> CASE valor DOS_PUNTOS . body_case BREAK END_OF_LINE
    (138) casos -> CASE valor DOS_PUNTOS . BREAK END_OF_LINE
    (139) casos -> CASE valor DOS_PUNTOS . body_case BREAK END_OF_LINE casos
    (140) casos -> CASE valor DOS_PUNTOS . BREAK END_OF_LINE casos
    (141) body_case -> . asignacion END_OF_LINE
    (142) body_case -> . declaracion END_OF_LINE
    (143) body_case -> . comparacion END_OF_LINE
    (144) body_case -> . salida_entrada END_OF_LINE
    (145) body_case -> . asignacion END_OF_LINE body_case
    (146) body_case -> . declaracion END_OF_LINE body_case
    (147) body_case -> . salida_entrada END_OF_LINE body_case
    (148) body_case -> . comparacion END_OF_LINE body_case
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (118) comparacion -> . valor operador_realacional valor
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BREAK           shift and go to state 329
    IDENTIFICADOR   shift and go to state 334
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    valor                          shift and go to state 18
    body_case                      shift and go to state 328
    asignacion                     shift and go to state 330
    declaracion                    shift and go to state 331
    comparacion                    shift and go to state 332
    salida_entrada                 shift and go to state 333
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63
    numero                         shift and go to state 132

state 316

    (149) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER . LLAVE_IZQ body LLAVE_DER

    LLAVE_IZQ       shift and go to state 335


state 317

    (150) forIterador -> IDENTIFICADOR operadorForIteracion .

    PAR_DER         reduce using rule 150 (forIterador -> IDENTIFICADOR operadorForIteracion .)


state 318

    (151) operadorForIteracion -> INCREMENTO .

    PAR_DER         reduce using rule 151 (operadorForIteracion -> INCREMENTO .)


state 319

    (152) operadorForIteracion -> DECREMENTO .

    PAR_DER         reduce using rule 152 (operadorForIteracion -> DECREMENTO .)


state 320

    (169) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 336


state 321

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    MENOR_QUE       shift and go to state 337


state 322

    (196) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .

    $end            reduce using rule 196 (funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .)
    LLAVE_DER       reduce using rule 196 (funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .)


state 323

    (197) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF . LLAVE_DER

    LLAVE_DER       shift and go to state 338


state 324

    (200) bodyF -> asignacion . END_OF_LINE
    (203) bodyF -> asignacion . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 339


state 325

    (201) bodyF -> declaracion . END_OF_LINE
    (204) bodyF -> declaracion . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 340


state 326

    (202) bodyF -> salida_entrada . END_OF_LINE
    (205) bodyF -> salida_entrada . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 341


state 327

    (125) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 342


state 328

    (137) casos -> CASE valor DOS_PUNTOS body_case . BREAK END_OF_LINE
    (139) casos -> CASE valor DOS_PUNTOS body_case . BREAK END_OF_LINE casos

    BREAK           shift and go to state 343


state 329

    (138) casos -> CASE valor DOS_PUNTOS BREAK . END_OF_LINE
    (140) casos -> CASE valor DOS_PUNTOS BREAK . END_OF_LINE casos

    END_OF_LINE     shift and go to state 344


state 330

    (141) body_case -> asignacion . END_OF_LINE
    (145) body_case -> asignacion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 345


state 331

    (142) body_case -> declaracion . END_OF_LINE
    (146) body_case -> declaracion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 346


state 332

    (143) body_case -> comparacion . END_OF_LINE
    (148) body_case -> comparacion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 347


state 333

    (144) body_case -> salida_entrada . END_OF_LINE
    (147) body_case -> salida_entrada . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 348


state 334

    (64) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (65) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (66) asignacionSimple -> IDENTIFICADOR . IGUAL salida_entrada
    (68) asignacionClase -> IDENTIFICADOR . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionPila
    (70) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionQueue
    (71) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionList
    (67) asignacionNull -> IDENTIFICADOR . IGUAL NULL
    (103) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR
    (15) valor -> IDENTIFICADOR .
    (78) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionList
    (94) operadoresCompuestosLogic -> . AND_EQUAL
    (95) operadoresCompuestosLogic -> . OR_EQUAL
    (96) operadoresCompuestosLogic -> . EXC_OREQUAL
    (89) operadoresCompuestosNumber -> . AUMENTADO
    (90) operadoresCompuestosNumber -> . DECREMENTADO
    (91) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (92) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (93) operadoresCompuestosNumber -> . MODULO_DE

    IGUAL           shift and go to state 89
    IDENTIFICADOR   shift and go to state 88
    IGUAL_IGUAL     reduce using rule 15 (valor -> IDENTIFICADOR .)
    NO_IGUAL        reduce using rule 15 (valor -> IDENTIFICADOR .)
    MENOR_QUE       reduce using rule 15 (valor -> IDENTIFICADOR .)
    MENOR_O_IGUAL_QUE reduce using rule 15 (valor -> IDENTIFICADOR .)
    MAYOR_QUE       reduce using rule 15 (valor -> IDENTIFICADOR .)
    MAYOR_O_IGUAL_QUE reduce using rule 15 (valor -> IDENTIFICADOR .)
    NULL_EQUAL      shift and go to state 95
    AND_EQUAL       shift and go to state 107
    OR_EQUAL        shift and go to state 108
    EXC_OREQUAL     shift and go to state 109
    AUMENTADO       shift and go to state 110
    DECREMENTADO    shift and go to state 111
    MULTIPLICADO_POR shift and go to state 112
    DIVIDIDO_POR    shift and go to state 113
    MODULO_DE       shift and go to state 114

    operadoresCompuestosLogic      shift and go to state 93
    operadoresCompuestosNumber     shift and go to state 94

state 335

    (149) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ . body LLAVE_DER
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (118) comparacion -> . valor operador_realacional valor
    (119) estructura_control -> . while
    (120) estructura_control -> . switch_case
    (121) estructura_control -> . for
    (167) estructura_datos -> . lista
    (168) estructura_datos -> . pila
    (176) expresion -> . expresion_operacion_aritmetica
    (177) expresion -> . expresion_condicional
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (194) funcion -> . funcion_tipo_uno
    (195) funcion -> . funcion_tipo_tres
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (58) empty -> . END_OF_LINE
    (172) funciones_estructura_datos -> . stack_push
    (173) funciones_estructura_datos -> . stack_pop
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (122) while -> . while_normal
    (123) while -> . while_do
    (136) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (149) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (169) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (171) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (178) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (179) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (180) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (181) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (182) expresion_condicional -> . numero operador_condicional numero
    (183) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (184) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (185) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (196) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (197) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (174) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (175) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT
    (124) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (125) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (34) modificador_acceso -> . PRIVATE
    (35) modificador_acceso -> . PROTECTED
    (36) modificador_acceso -> . PUBLIC
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 32
    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    SWITCH          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 50
    STACK           shift and go to state 51
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66
    WHILE           shift and go to state 67
    DO              shift and go to state 68
    PRIVATE         shift and go to state 69
    PROTECTED       shift and go to state 70
    PUBLIC          shift and go to state 71
    QUEUE           shift and go to state 72

    body                           shift and go to state 349
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor                          shift and go to state 18
    while                          shift and go to state 19
    switch_case                    shift and go to state 20
    for                            shift and go to state 21
    lista                          shift and go to state 22
    pila                           shift and go to state 23
    expresion_operacion_aritmetica shift and go to state 24
    expresion_condicional          shift and go to state 25
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    funcion_tipo_uno               shift and go to state 29
    funcion_tipo_tres              shift and go to state 30
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    stack_push                     shift and go to state 37
    stack_pop                      shift and go to state 38
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    numero                         shift and go to state 43
    while_normal                   shift and go to state 46
    while_do                       shift and go to state 47
    modificador_acceso             shift and go to state 54
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 336

    (169) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 350


state 337

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (27) valor_tipo_inicializador -> . FLOAT_TYPE
    (28) valor_tipo_inicializador -> . DOUBLE_TYPE
    (29) valor_tipo_inicializador -> . STRING_TYPE
    (30) valor_tipo_inicializador -> . INT_TYPE
    (31) valor_tipo_inicializador -> . BOOL_TYPE
    (32) valor_tipo_inicializador -> . CHAR_TYPE
    (33) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 184
    DOUBLE_TYPE     shift and go to state 185
    STRING_TYPE     shift and go to state 186
    INT_TYPE        shift and go to state 187
    BOOL_TYPE       shift and go to state 188
    CHAR_TYPE       shift and go to state 189
    IDENTIFICADOR   shift and go to state 190

    valor_tipo_inicializador       shift and go to state 351

state 338

    (197) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .

    $end            reduce using rule 197 (funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .)
    LLAVE_DER       reduce using rule 197 (funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .)


state 339

    (200) bodyF -> asignacion END_OF_LINE .
    (203) bodyF -> asignacion END_OF_LINE . bodyF
    (200) bodyF -> . asignacion END_OF_LINE
    (201) bodyF -> . declaracion END_OF_LINE
    (202) bodyF -> . salida_entrada END_OF_LINE
    (203) bodyF -> . asignacion END_OF_LINE bodyF
    (204) bodyF -> . declaracion END_OF_LINE bodyF
    (205) bodyF -> . salida_entrada END_OF_LINE bodyF
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 200 (bodyF -> asignacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 206
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    asignacion                     shift and go to state 324
    bodyF                          shift and go to state 352
    declaracion                    shift and go to state 325
    salida_entrada                 shift and go to state 326
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 340

    (201) bodyF -> declaracion END_OF_LINE .
    (204) bodyF -> declaracion END_OF_LINE . bodyF
    (200) bodyF -> . asignacion END_OF_LINE
    (201) bodyF -> . declaracion END_OF_LINE
    (202) bodyF -> . salida_entrada END_OF_LINE
    (203) bodyF -> . asignacion END_OF_LINE bodyF
    (204) bodyF -> . declaracion END_OF_LINE bodyF
    (205) bodyF -> . salida_entrada END_OF_LINE bodyF
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 201 (bodyF -> declaracion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 206
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    declaracion                    shift and go to state 325
    bodyF                          shift and go to state 353
    asignacion                     shift and go to state 324
    salida_entrada                 shift and go to state 326
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 341

    (202) bodyF -> salida_entrada END_OF_LINE .
    (205) bodyF -> salida_entrada END_OF_LINE . bodyF
    (200) bodyF -> . asignacion END_OF_LINE
    (201) bodyF -> . declaracion END_OF_LINE
    (202) bodyF -> . salida_entrada END_OF_LINE
    (203) bodyF -> . asignacion END_OF_LINE bodyF
    (204) bodyF -> . declaracion END_OF_LINE bodyF
    (205) bodyF -> . salida_entrada END_OF_LINE bodyF
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 202 (bodyF -> salida_entrada END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 206
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208

    salida_entrada                 shift and go to state 326
    bodyF                          shift and go to state 354
    asignacion                     shift and go to state 324
    declaracion                    shift and go to state 325
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63

state 342

    (125) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .

    $end            reduce using rule 125 (while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 125 (while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .)


state 343

    (137) casos -> CASE valor DOS_PUNTOS body_case BREAK . END_OF_LINE
    (139) casos -> CASE valor DOS_PUNTOS body_case BREAK . END_OF_LINE casos

    END_OF_LINE     shift and go to state 355


state 344

    (138) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE .
    (140) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE . casos
    (137) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (138) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (139) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (140) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    LLAVE_DER       reduce using rule 138 (casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE .)
    CASE            shift and go to state 283

    casos                          shift and go to state 356

state 345

    (141) body_case -> asignacion END_OF_LINE .
    (145) body_case -> asignacion END_OF_LINE . body_case
    (141) body_case -> . asignacion END_OF_LINE
    (142) body_case -> . declaracion END_OF_LINE
    (143) body_case -> . comparacion END_OF_LINE
    (144) body_case -> . salida_entrada END_OF_LINE
    (145) body_case -> . asignacion END_OF_LINE body_case
    (146) body_case -> . declaracion END_OF_LINE body_case
    (147) body_case -> . salida_entrada END_OF_LINE body_case
    (148) body_case -> . comparacion END_OF_LINE body_case
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (118) comparacion -> . valor operador_realacional valor
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BREAK           reduce using rule 141 (body_case -> asignacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 334
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    asignacion                     shift and go to state 330
    body_case                      shift and go to state 357
    declaracion                    shift and go to state 331
    comparacion                    shift and go to state 332
    salida_entrada                 shift and go to state 333
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    valor                          shift and go to state 18
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63
    numero                         shift and go to state 132

state 346

    (142) body_case -> declaracion END_OF_LINE .
    (146) body_case -> declaracion END_OF_LINE . body_case
    (141) body_case -> . asignacion END_OF_LINE
    (142) body_case -> . declaracion END_OF_LINE
    (143) body_case -> . comparacion END_OF_LINE
    (144) body_case -> . salida_entrada END_OF_LINE
    (145) body_case -> . asignacion END_OF_LINE body_case
    (146) body_case -> . declaracion END_OF_LINE body_case
    (147) body_case -> . salida_entrada END_OF_LINE body_case
    (148) body_case -> . comparacion END_OF_LINE body_case
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (118) comparacion -> . valor operador_realacional valor
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BREAK           reduce using rule 142 (body_case -> declaracion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 334
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    declaracion                    shift and go to state 331
    body_case                      shift and go to state 358
    asignacion                     shift and go to state 330
    comparacion                    shift and go to state 332
    salida_entrada                 shift and go to state 333
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    valor                          shift and go to state 18
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63
    numero                         shift and go to state 132

state 347

    (143) body_case -> comparacion END_OF_LINE .
    (148) body_case -> comparacion END_OF_LINE . body_case
    (141) body_case -> . asignacion END_OF_LINE
    (142) body_case -> . declaracion END_OF_LINE
    (143) body_case -> . comparacion END_OF_LINE
    (144) body_case -> . salida_entrada END_OF_LINE
    (145) body_case -> . asignacion END_OF_LINE body_case
    (146) body_case -> . declaracion END_OF_LINE body_case
    (147) body_case -> . salida_entrada END_OF_LINE body_case
    (148) body_case -> . comparacion END_OF_LINE body_case
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (118) comparacion -> . valor operador_realacional valor
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BREAK           reduce using rule 143 (body_case -> comparacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 334
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    comparacion                    shift and go to state 332
    body_case                      shift and go to state 359
    asignacion                     shift and go to state 330
    declaracion                    shift and go to state 331
    salida_entrada                 shift and go to state 333
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    valor                          shift and go to state 18
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63
    numero                         shift and go to state 132

state 348

    (144) body_case -> salida_entrada END_OF_LINE .
    (147) body_case -> salida_entrada END_OF_LINE . body_case
    (141) body_case -> . asignacion END_OF_LINE
    (142) body_case -> . declaracion END_OF_LINE
    (143) body_case -> . comparacion END_OF_LINE
    (144) body_case -> . salida_entrada END_OF_LINE
    (145) body_case -> . asignacion END_OF_LINE body_case
    (146) body_case -> . declaracion END_OF_LINE body_case
    (147) body_case -> . salida_entrada END_OF_LINE body_case
    (148) body_case -> . comparacion END_OF_LINE body_case
    (59) asignacion -> . asignacionSimple
    (60) asignacion -> . asignacionCompuesta
    (61) asignacion -> . asignacionClase
    (62) asignacion -> . asignacionEstructuraD
    (63) asignacion -> . asignacionNull
    (97) declaracion -> . valor_tipo IDENTIFICADOR
    (98) declaracion -> . declaracionEstructuraD
    (99) declaracion -> . declaracionAsignacion
    (100) declaracion -> . declaracionClase
    (101) declaracion -> . declaracionNull
    (118) comparacion -> . valor operador_realacional valor
    (186) salida_entrada -> . salida_uno
    (187) salida_entrada -> . salida_dos
    (188) salida_entrada -> . salida_tres
    (64) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (65) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL salida_entrada
    (75) asignacionCompuesta -> . asignacionCompuesta_Logic
    (76) asignacionCompuesta -> . asignacionCompuesta_Number
    (77) asignacionCompuesta -> . asignacionCompuesta_Null
    (68) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (69) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (70) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (71) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (67) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (21) valor_tipo -> . CHAR_TYPE
    (22) valor_tipo -> . FLOAT_TYPE
    (23) valor_tipo -> . DOUBLE_TYPE
    (24) valor_tipo -> . INT_TYPE
    (25) valor_tipo -> . BOOL_TYPE
    (26) valor_tipo -> . STRING_TYPE
    (112) declaracionEstructuraD -> . declaracionList
    (113) declaracionEstructuraD -> . declaracionQueue
    (114) declaracionEstructuraD -> . declaracionPila
    (104) declaracionAsignacion -> . valor_tipo asignacionSimple
    (105) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (106) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (107) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (108) declaracionAsignacion -> . declaracionNull IGUAL valor
    (109) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (110) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (111) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (103) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (102) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (11) valor -> . CHAR
    (12) valor -> . numero
    (13) valor -> . BOOL
    (14) valor -> . STRING
    (15) valor -> . IDENTIFICADOR
    (189) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (190) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (191) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (192) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (193) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (78) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (79) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (80) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (81) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (82) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (83) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (84) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (85) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (86) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (87) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (88) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (115) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (116) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (117) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (16) numero -> . FLOAT
    (17) numero -> . DOUBLE
    (18) numero -> . INT

    BREAK           reduce using rule 144 (body_case -> salida_entrada END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 334
    CHAR_TYPE       shift and go to state 55
    FLOAT_TYPE      shift and go to state 56
    DOUBLE_TYPE     shift and go to state 57
    INT_TYPE        shift and go to state 58
    BOOL_TYPE       shift and go to state 59
    STRING_TYPE     shift and go to state 60
    CHAR            shift and go to state 42
    BOOL            shift and go to state 44
    STRING          shift and go to state 45
    CONSOLE_WRITELINE shift and go to state 52
    CONSOLE_READLINE shift and go to state 53
    LIST            shift and go to state 207
    QUEUE           shift and go to state 72
    STACK           shift and go to state 208
    FLOAT           shift and go to state 64
    DOUBLE          shift and go to state 65
    INT             shift and go to state 66

    salida_entrada                 shift and go to state 333
    body_case                      shift and go to state 360
    asignacion                     shift and go to state 330
    declaracion                    shift and go to state 331
    comparacion                    shift and go to state 332
    asignacionSimple               shift and go to state 13
    asignacionCompuesta            shift and go to state 14
    asignacionClase                shift and go to state 15
    asignacionEstructuraD          shift and go to state 16
    asignacionNull                 shift and go to state 17
    valor_tipo                     shift and go to state 31
    declaracionEstructuraD         shift and go to state 33
    declaracionAsignacion          shift and go to state 34
    declaracionClase               shift and go to state 35
    declaracionNull                shift and go to state 36
    valor                          shift and go to state 18
    salida_uno                     shift and go to state 26
    salida_dos                     shift and go to state 27
    salida_tres                    shift and go to state 28
    asignacionCompuesta_Logic      shift and go to state 39
    asignacionCompuesta_Number     shift and go to state 40
    asignacionCompuesta_Null       shift and go to state 41
    declaracionList                shift and go to state 61
    declaracionQueue               shift and go to state 62
    declaracionPila                shift and go to state 63
    numero                         shift and go to state 132

state 349

    (149) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body . LLAVE_DER

    LLAVE_DER       shift and go to state 361


state 350

    (169) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .

    $end            reduce using rule 169 (lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 169 (lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .)


state 351

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    MAYOR_QUE       shift and go to state 362


state 352

    (203) bodyF -> asignacion END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 203 (bodyF -> asignacion END_OF_LINE bodyF .)


state 353

    (204) bodyF -> declaracion END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 204 (bodyF -> declaracion END_OF_LINE bodyF .)


state 354

    (205) bodyF -> salida_entrada END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 205 (bodyF -> salida_entrada END_OF_LINE bodyF .)


state 355

    (137) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE .
    (139) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE . casos
    (137) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (138) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (139) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (140) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    LLAVE_DER       reduce using rule 137 (casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE .)
    CASE            shift and go to state 283

    casos                          shift and go to state 363

state 356

    (140) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos .

    LLAVE_DER       reduce using rule 140 (casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos .)


state 357

    (145) body_case -> asignacion END_OF_LINE body_case .

    BREAK           reduce using rule 145 (body_case -> asignacion END_OF_LINE body_case .)


state 358

    (146) body_case -> declaracion END_OF_LINE body_case .

    BREAK           reduce using rule 146 (body_case -> declaracion END_OF_LINE body_case .)


state 359

    (148) body_case -> comparacion END_OF_LINE body_case .

    BREAK           reduce using rule 148 (body_case -> comparacion END_OF_LINE body_case .)


state 360

    (147) body_case -> salida_entrada END_OF_LINE body_case .

    BREAK           reduce using rule 147 (body_case -> salida_entrada END_OF_LINE body_case .)


state 361

    (149) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .

    $end            reduce using rule 149 (for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .)
    LLAVE_DER       reduce using rule 149 (for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .)


state 362

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . PAR_IZQ PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 364


state 363

    (139) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos .

    LLAVE_DER       reduce using rule 139 (casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos .)


state 364

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 365


state 365

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 366


state 366

    (171) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .

    $end            reduce using rule 171 (pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 171 (pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 32 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 32 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 32 resolved as shift
WARNING: shift/reduce conflict for MENOR_O_IGUAL_QUE in state 32 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 32 resolved as shift
WARNING: shift/reduce conflict for MAYOR_O_IGUAL_QUE in state 32 resolved as shift
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 43 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 43 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 43 resolved as shift
WARNING: shift/reduce conflict for MENOR_O_IGUAL_QUE in state 43 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 43 resolved as shift
WARNING: shift/reduce conflict for MAYOR_O_IGUAL_QUE in state 43 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 182 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 257 resolved as shift
