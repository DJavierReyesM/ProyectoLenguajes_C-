Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    AND
    AND_EQUAL
    AUMENTADO
    BREAK
    BYTE
    CASE
    CLASS
    COMA
    COMILLA_DOBLE
    COMILLA_SIMPLE
    CONSOLE_READLINE
    CONSOLE_WRITELINE
    CONST
    CONTINUE
    COR_DER
    COR_IZQ
    C_CADENA_INTERPOLADA
    C_IDENT_TEXTUAL
    DECREMENTADO
    DECREMENTO
    DEFAULT
    DIVIDIDO_POR
    DO
    DOS_PUNTOS
    ELSE
    EXC_OREQUAL
    FINALLY
    FOR
    GLOBAL
    IN
    INCREMENTO
    IR
    LAMBDA
    LEFTSHIFT_EQUAL
    LET
    LLAVE_DER
    LLAVE_IZQ
    MODULO_DE
    MULTIPLICADO_POR
    NEGACION
    NEW
    NOR
    NULL
    NULL_EQUAL
    NULL_VAL
    OBJECT
    ON
    OP_TERNARIO
    OR
    ORDERBY
    OR_EQUAL
    PAR_DER
    PAR_IZQ
    PUNTO
    PUSH
    RETURN
    RIGHTSHIFT_EQUAL
    SHIFT_MAYOR
    SHIFT_MENOR
    SIMPLE_AND
    SIMPLE_OR
    STACK
    STRUCT
    SWITCH
    THIS
    TO_UPPER
    TYPEOF
    VAR
    WHEN
    WHERE
    WHILE

Grammar

Rule 0     S' -> body
Rule 1     body -> asignacion END_OF_LINE
Rule 2     body -> comparacion
Rule 3     body -> estructura_control
Rule 4     body -> estructura_datos
Rule 5     body -> expresion
Rule 6     body -> salida_entrada
Rule 7     body -> funcion
Rule 8     body -> declaracion END_OF_LINE
Rule 9     body -> empty
Rule 10    valor -> CHAR
Rule 11    valor -> numero
Rule 12    valor -> BOOL
Rule 13    valor -> STRING
Rule 14    valor -> IDENTIFICADOR
Rule 15    numero -> FLOAT
Rule 16    numero -> DOUBLE
Rule 17    numero -> INT
Rule 18    valor_tipo -> CHAR_TYPE
Rule 19    valor_tipo -> FLOAT_TYPE
Rule 20    valor_tipo -> DOUBLE_TYPE
Rule 21    valor_tipo -> INT_TYPE
Rule 22    valor_tipo -> BOOL_TYPE
Rule 23    valor_tipo -> STRING_TYPE
Rule 24    valor_tipo -> VOID
Rule 25    modificador_acceso -> PRIVATE
Rule 26    modificador_acceso -> PROTECTED
Rule 27    modificador_acceso -> PUBLIC
Rule 28    operador_realacional -> IGUAL_IGUAL
Rule 29    operador_realacional -> NO_IGUAL
Rule 30    operador_realacional -> MENOR_QUE
Rule 31    operador_realacional -> MENOR_O_IGUAL_QUE
Rule 32    operador_realacional -> MAYOR_QUE
Rule 33    operador_realacional -> MAYOR_O_IGUAL_QUE
Rule 34    operador_aritmentico -> SUMA
Rule 35    operador_aritmentico -> RESTA
Rule 36    operador_aritmentico -> MULTIPLICACION
Rule 37    operador_aritmentico -> DIVISION
Rule 38    operador_aritmentico -> MODULO
Rule 39    operador_condicional -> IGUAL_IGUAL
Rule 40    operador_condicional -> NO_IGUAL
Rule 41    operador_condicional -> MENOR_QUE
Rule 42    operador_condicional -> MENOR_O_IGUAL_QUE
Rule 43    operador_condicional -> MAYOR_QUE
Rule 44    operador_condicional -> MAYOR_O_IGUAL_QUE
Rule 45    empty -> END_OF_LINE
Rule 46    asignacion -> asignacionSimple
Rule 47    asignacionSimple -> IDENTIFICADOR IGUAL valor
Rule 48    asignacionSimple -> IDENTIFICADOR IGUAL expresion
Rule 49    declaracion -> valor_tipo IDENTIFICADOR
Rule 50    declaracion -> valor_tipo asignacion
Rule 51    comparacion -> valor operador_realacional valor
Rule 52    estructura_control -> while
Rule 53    estructura_control -> switch_case
Rule 54    estructura_control -> for
Rule 55    while -> IGUAL
Rule 56    switch_case -> IGUAL
Rule 57    for -> IGUAL
Rule 58    estructura_datos -> IGUAL
Rule 59    expresion -> expresion_operacion_aritmetica
Rule 60    expresion -> expresion_condicional
Rule 61    expresion_operacion_aritmetica -> numero operador_aritmentico numero
Rule 62    expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR
Rule 63    expresion_condicional -> numero operador_condicional numero
Rule 64    expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR
Rule 65    salida_entrada -> IGUAL
Rule 66    funcion -> IGUAL

Terminals, with rules where they appear

ADD                  : 
AND                  : 
AND_EQUAL            : 
AUMENTADO            : 
BOOL                 : 12
BOOL_TYPE            : 22
BREAK                : 
BYTE                 : 
CASE                 : 
CHAR                 : 10
CHAR_TYPE            : 18
CLASS                : 
COMA                 : 
COMILLA_DOBLE        : 
COMILLA_SIMPLE       : 
CONSOLE_READLINE     : 
CONSOLE_WRITELINE    : 
CONST                : 
CONTINUE             : 
COR_DER              : 
COR_IZQ              : 
C_CADENA_INTERPOLADA : 
C_IDENT_TEXTUAL      : 
DECREMENTADO         : 
DECREMENTO           : 
DEFAULT              : 
DIVIDIDO_POR         : 
DIVISION             : 37
DO                   : 
DOS_PUNTOS           : 
DOUBLE               : 16
DOUBLE_TYPE          : 20
ELSE                 : 
END_OF_LINE          : 1 8 45
EXC_OREQUAL          : 
FINALLY              : 
FLOAT                : 15
FLOAT_TYPE           : 19
FOR                  : 
GLOBAL               : 
IDENTIFICADOR        : 14 47 48 49 62 62 64 64
IGUAL                : 47 48 55 56 57 58 65 66
IGUAL_IGUAL          : 28 39
IN                   : 
INCREMENTO           : 
INT                  : 17
INT_TYPE             : 21
IR                   : 
LAMBDA               : 
LEFTSHIFT_EQUAL      : 
LET                  : 
LLAVE_DER            : 
LLAVE_IZQ            : 
MAYOR_O_IGUAL_QUE    : 33 44
MAYOR_QUE            : 32 43
MENOR_O_IGUAL_QUE    : 31 42
MENOR_QUE            : 30 41
MODULO               : 38
MODULO_DE            : 
MULTIPLICACION       : 36
MULTIPLICADO_POR     : 
NEGACION             : 
NEW                  : 
NOR                  : 
NO_IGUAL             : 29 40
NULL                 : 
NULL_EQUAL           : 
NULL_VAL             : 
OBJECT               : 
ON                   : 
OP_TERNARIO          : 
OR                   : 
ORDERBY              : 
OR_EQUAL             : 
PAR_DER              : 
PAR_IZQ              : 
PRIVATE              : 25
PROTECTED            : 26
PUBLIC               : 27
PUNTO                : 
PUSH                 : 
RESTA                : 35
RETURN               : 
RIGHTSHIFT_EQUAL     : 
SHIFT_MAYOR          : 
SHIFT_MENOR          : 
SIMPLE_AND           : 
SIMPLE_OR            : 
STACK                : 
STRING               : 13
STRING_TYPE          : 23
STRUCT               : 
SUMA                 : 34
SWITCH               : 
THIS                 : 
TO_UPPER             : 
TYPEOF               : 
VAR                  : 
VOID                 : 24
WHEN                 : 
WHERE                : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 50
asignacionSimple     : 46
body                 : 0
comparacion          : 2
declaracion          : 8
empty                : 9
estructura_control   : 3
estructura_datos     : 4
expresion            : 5 48
expresion_condicional : 60
expresion_operacion_aritmetica : 59
for                  : 54
funcion              : 7
modificador_acceso   : 
numero               : 11 61 61 63 63
operador_aritmentico : 61 62
operador_condicional : 63 64
operador_realacional : 51
salida_entrada       : 6
switch_case          : 53
valor                : 47 51 51
valor_tipo           : 49 50
while                : 52

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion
    (6) body -> . salida_entrada
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (46) asignacion -> . asignacionSimple
    (51) comparacion -> . valor operador_realacional valor
    (52) estructura_control -> . while
    (53) estructura_control -> . switch_case
    (54) estructura_control -> . for
    (58) estructura_datos -> . IGUAL
    (59) expresion -> . expresion_operacion_aritmetica
    (60) expresion -> . expresion_condicional
    (65) salida_entrada -> . IGUAL
    (66) funcion -> . IGUAL
    (49) declaracion -> . valor_tipo IDENTIFICADOR
    (50) declaracion -> . valor_tipo asignacion
    (45) empty -> . END_OF_LINE
    (47) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (48) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (10) valor -> . CHAR
    (11) valor -> . numero
    (12) valor -> . BOOL
    (13) valor -> . STRING
    (14) valor -> . IDENTIFICADOR
    (55) while -> . IGUAL
    (56) switch_case -> . IGUAL
    (57) for -> . IGUAL
    (61) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (62) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (63) expresion_condicional -> . numero operador_condicional numero
    (64) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (18) valor_tipo -> . CHAR_TYPE
    (19) valor_tipo -> . FLOAT_TYPE
    (20) valor_tipo -> . DOUBLE_TYPE
    (21) valor_tipo -> . INT_TYPE
    (22) valor_tipo -> . BOOL_TYPE
    (23) valor_tipo -> . STRING_TYPE
    (24) valor_tipo -> . VOID
    (15) numero -> . FLOAT
    (16) numero -> . DOUBLE
    (17) numero -> . INT

    IGUAL           shift and go to state 17
    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 24
    STRING          shift and go to state 25
    CHAR_TYPE       shift and go to state 26
    FLOAT_TYPE      shift and go to state 27
    DOUBLE_TYPE     shift and go to state 28
    INT_TYPE        shift and go to state 29
    BOOL_TYPE       shift and go to state 30
    STRING_TYPE     shift and go to state 31
    VOID            shift and go to state 32
    FLOAT           shift and go to state 33
    DOUBLE          shift and go to state 34
    INT             shift and go to state 35

    body                           shift and go to state 1
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    asignacionSimple               shift and go to state 12
    valor                          shift and go to state 13
    while                          shift and go to state 14
    switch_case                    shift and go to state 15
    for                            shift and go to state 16
    expresion_operacion_aritmetica shift and go to state 18
    expresion_condicional          shift and go to state 19
    valor_tipo                     shift and go to state 20
    numero                         shift and go to state 23

state 1

    (0) S' -> body .



state 2

    (1) body -> asignacion . END_OF_LINE

    END_OF_LINE     shift and go to state 36


state 3

    (45) empty -> END_OF_LINE .

    $end            reduce using rule 45 (empty -> END_OF_LINE .)


state 4

    (2) body -> comparacion .

    $end            reduce using rule 2 (body -> comparacion .)


state 5

    (3) body -> estructura_control .

    $end            reduce using rule 3 (body -> estructura_control .)


state 6

    (4) body -> estructura_datos .

    $end            reduce using rule 4 (body -> estructura_datos .)


state 7

    (5) body -> expresion .

    $end            reduce using rule 5 (body -> expresion .)


state 8

    (6) body -> salida_entrada .

    $end            reduce using rule 6 (body -> salida_entrada .)


state 9

    (7) body -> funcion .

    $end            reduce using rule 7 (body -> funcion .)


state 10

    (8) body -> declaracion . END_OF_LINE

    END_OF_LINE     shift and go to state 37


state 11

    (9) body -> empty .

    $end            reduce using rule 9 (body -> empty .)


state 12

    (46) asignacion -> asignacionSimple .

    END_OF_LINE     reduce using rule 46 (asignacion -> asignacionSimple .)


state 13

    (51) comparacion -> valor . operador_realacional valor
    (28) operador_realacional -> . IGUAL_IGUAL
    (29) operador_realacional -> . NO_IGUAL
    (30) operador_realacional -> . MENOR_QUE
    (31) operador_realacional -> . MENOR_O_IGUAL_QUE
    (32) operador_realacional -> . MAYOR_QUE
    (33) operador_realacional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 39
    NO_IGUAL        shift and go to state 40
    MENOR_QUE       shift and go to state 41
    MENOR_O_IGUAL_QUE shift and go to state 42
    MAYOR_QUE       shift and go to state 43
    MAYOR_O_IGUAL_QUE shift and go to state 44

    operador_realacional           shift and go to state 38

state 14

    (52) estructura_control -> while .

    $end            reduce using rule 52 (estructura_control -> while .)


state 15

    (53) estructura_control -> switch_case .

    $end            reduce using rule 53 (estructura_control -> switch_case .)


state 16

    (54) estructura_control -> for .

    $end            reduce using rule 54 (estructura_control -> for .)


state 17

    (58) estructura_datos -> IGUAL .
    (65) salida_entrada -> IGUAL .
    (66) funcion -> IGUAL .
    (55) while -> IGUAL .
    (56) switch_case -> IGUAL .
    (57) for -> IGUAL .

  ! reduce/reduce conflict for $end resolved using rule 58 (estructura_datos -> IGUAL .)
  ! reduce/reduce conflict for $end resolved using rule 58 (estructura_datos -> IGUAL .)
  ! reduce/reduce conflict for $end resolved using rule 55 (while -> IGUAL .)
  ! reduce/reduce conflict for $end resolved using rule 55 (while -> IGUAL .)
  ! reduce/reduce conflict for $end resolved using rule 55 (while -> IGUAL .)
    $end            reduce using rule 55 (while -> IGUAL .)

  ! $end            [ reduce using rule 58 (estructura_datos -> IGUAL .) ]
  ! $end            [ reduce using rule 65 (salida_entrada -> IGUAL .) ]
  ! $end            [ reduce using rule 66 (funcion -> IGUAL .) ]
  ! $end            [ reduce using rule 56 (switch_case -> IGUAL .) ]
  ! $end            [ reduce using rule 57 (for -> IGUAL .) ]


state 18

    (59) expresion -> expresion_operacion_aritmetica .

    $end            reduce using rule 59 (expresion -> expresion_operacion_aritmetica .)
    END_OF_LINE     reduce using rule 59 (expresion -> expresion_operacion_aritmetica .)


state 19

    (60) expresion -> expresion_condicional .

    $end            reduce using rule 60 (expresion -> expresion_condicional .)
    END_OF_LINE     reduce using rule 60 (expresion -> expresion_condicional .)


state 20

    (49) declaracion -> valor_tipo . IDENTIFICADOR
    (50) declaracion -> valor_tipo . asignacion
    (46) asignacion -> . asignacionSimple
    (47) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (48) asignacionSimple -> . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 45

    asignacion                     shift and go to state 46
    asignacionSimple               shift and go to state 12

state 21

    (47) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (48) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (14) valor -> IDENTIFICADOR .
    (62) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (64) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (34) operador_aritmentico -> . SUMA
    (35) operador_aritmentico -> . RESTA
    (36) operador_aritmentico -> . MULTIPLICACION
    (37) operador_aritmentico -> . DIVISION
    (38) operador_aritmentico -> . MODULO
    (39) operador_condicional -> . IGUAL_IGUAL
    (40) operador_condicional -> . NO_IGUAL
    (41) operador_condicional -> . MENOR_QUE
    (42) operador_condicional -> . MENOR_O_IGUAL_QUE
    (43) operador_condicional -> . MAYOR_QUE
    (44) operador_condicional -> . MAYOR_O_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_O_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_O_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 47
    SUMA            shift and go to state 50
    RESTA           shift and go to state 51
    MULTIPLICACION  shift and go to state 52
    DIVISION        shift and go to state 53
    MODULO          shift and go to state 54
    IGUAL_IGUAL     shift and go to state 55
    NO_IGUAL        shift and go to state 56
    MENOR_QUE       shift and go to state 57
    MENOR_O_IGUAL_QUE shift and go to state 58
    MAYOR_QUE       shift and go to state 59
    MAYOR_O_IGUAL_QUE shift and go to state 60

  ! IGUAL_IGUAL     [ reduce using rule 14 (valor -> IDENTIFICADOR .) ]
  ! NO_IGUAL        [ reduce using rule 14 (valor -> IDENTIFICADOR .) ]
  ! MENOR_QUE       [ reduce using rule 14 (valor -> IDENTIFICADOR .) ]
  ! MENOR_O_IGUAL_QUE [ reduce using rule 14 (valor -> IDENTIFICADOR .) ]
  ! MAYOR_QUE       [ reduce using rule 14 (valor -> IDENTIFICADOR .) ]
  ! MAYOR_O_IGUAL_QUE [ reduce using rule 14 (valor -> IDENTIFICADOR .) ]

    operador_aritmentico           shift and go to state 48
    operador_condicional           shift and go to state 49

state 22

    (10) valor -> CHAR .

    IGUAL_IGUAL     reduce using rule 10 (valor -> CHAR .)
    NO_IGUAL        reduce using rule 10 (valor -> CHAR .)
    MENOR_QUE       reduce using rule 10 (valor -> CHAR .)
    MENOR_O_IGUAL_QUE reduce using rule 10 (valor -> CHAR .)
    MAYOR_QUE       reduce using rule 10 (valor -> CHAR .)
    MAYOR_O_IGUAL_QUE reduce using rule 10 (valor -> CHAR .)
    $end            reduce using rule 10 (valor -> CHAR .)
    END_OF_LINE     reduce using rule 10 (valor -> CHAR .)


state 23

    (11) valor -> numero .
    (61) expresion_operacion_aritmetica -> numero . operador_aritmentico numero
    (63) expresion_condicional -> numero . operador_condicional numero
    (34) operador_aritmentico -> . SUMA
    (35) operador_aritmentico -> . RESTA
    (36) operador_aritmentico -> . MULTIPLICACION
    (37) operador_aritmentico -> . DIVISION
    (38) operador_aritmentico -> . MODULO
    (39) operador_condicional -> . IGUAL_IGUAL
    (40) operador_condicional -> . NO_IGUAL
    (41) operador_condicional -> . MENOR_QUE
    (42) operador_condicional -> . MENOR_O_IGUAL_QUE
    (43) operador_condicional -> . MAYOR_QUE
    (44) operador_condicional -> . MAYOR_O_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_O_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_O_IGUAL_QUE resolved as shift
    END_OF_LINE     reduce using rule 11 (valor -> numero .)
    SUMA            shift and go to state 50
    RESTA           shift and go to state 51
    MULTIPLICACION  shift and go to state 52
    DIVISION        shift and go to state 53
    MODULO          shift and go to state 54
    IGUAL_IGUAL     shift and go to state 55
    NO_IGUAL        shift and go to state 56
    MENOR_QUE       shift and go to state 57
    MENOR_O_IGUAL_QUE shift and go to state 58
    MAYOR_QUE       shift and go to state 59
    MAYOR_O_IGUAL_QUE shift and go to state 60

  ! IGUAL_IGUAL     [ reduce using rule 11 (valor -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 11 (valor -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 11 (valor -> numero .) ]
  ! MENOR_O_IGUAL_QUE [ reduce using rule 11 (valor -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 11 (valor -> numero .) ]
  ! MAYOR_O_IGUAL_QUE [ reduce using rule 11 (valor -> numero .) ]

    operador_aritmentico           shift and go to state 61
    operador_condicional           shift and go to state 62

state 24

    (12) valor -> BOOL .

    IGUAL_IGUAL     reduce using rule 12 (valor -> BOOL .)
    NO_IGUAL        reduce using rule 12 (valor -> BOOL .)
    MENOR_QUE       reduce using rule 12 (valor -> BOOL .)
    MENOR_O_IGUAL_QUE reduce using rule 12 (valor -> BOOL .)
    MAYOR_QUE       reduce using rule 12 (valor -> BOOL .)
    MAYOR_O_IGUAL_QUE reduce using rule 12 (valor -> BOOL .)
    $end            reduce using rule 12 (valor -> BOOL .)
    END_OF_LINE     reduce using rule 12 (valor -> BOOL .)


state 25

    (13) valor -> STRING .

    IGUAL_IGUAL     reduce using rule 13 (valor -> STRING .)
    NO_IGUAL        reduce using rule 13 (valor -> STRING .)
    MENOR_QUE       reduce using rule 13 (valor -> STRING .)
    MENOR_O_IGUAL_QUE reduce using rule 13 (valor -> STRING .)
    MAYOR_QUE       reduce using rule 13 (valor -> STRING .)
    MAYOR_O_IGUAL_QUE reduce using rule 13 (valor -> STRING .)
    $end            reduce using rule 13 (valor -> STRING .)
    END_OF_LINE     reduce using rule 13 (valor -> STRING .)


state 26

    (18) valor_tipo -> CHAR_TYPE .

    IDENTIFICADOR   reduce using rule 18 (valor_tipo -> CHAR_TYPE .)


state 27

    (19) valor_tipo -> FLOAT_TYPE .

    IDENTIFICADOR   reduce using rule 19 (valor_tipo -> FLOAT_TYPE .)


state 28

    (20) valor_tipo -> DOUBLE_TYPE .

    IDENTIFICADOR   reduce using rule 20 (valor_tipo -> DOUBLE_TYPE .)


state 29

    (21) valor_tipo -> INT_TYPE .

    IDENTIFICADOR   reduce using rule 21 (valor_tipo -> INT_TYPE .)


state 30

    (22) valor_tipo -> BOOL_TYPE .

    IDENTIFICADOR   reduce using rule 22 (valor_tipo -> BOOL_TYPE .)


state 31

    (23) valor_tipo -> STRING_TYPE .

    IDENTIFICADOR   reduce using rule 23 (valor_tipo -> STRING_TYPE .)


state 32

    (24) valor_tipo -> VOID .

    IDENTIFICADOR   reduce using rule 24 (valor_tipo -> VOID .)


state 33

    (15) numero -> FLOAT .

    SUMA            reduce using rule 15 (numero -> FLOAT .)
    RESTA           reduce using rule 15 (numero -> FLOAT .)
    MULTIPLICACION  reduce using rule 15 (numero -> FLOAT .)
    DIVISION        reduce using rule 15 (numero -> FLOAT .)
    MODULO          reduce using rule 15 (numero -> FLOAT .)
    IGUAL_IGUAL     reduce using rule 15 (numero -> FLOAT .)
    NO_IGUAL        reduce using rule 15 (numero -> FLOAT .)
    MENOR_QUE       reduce using rule 15 (numero -> FLOAT .)
    MENOR_O_IGUAL_QUE reduce using rule 15 (numero -> FLOAT .)
    MAYOR_QUE       reduce using rule 15 (numero -> FLOAT .)
    MAYOR_O_IGUAL_QUE reduce using rule 15 (numero -> FLOAT .)
    $end            reduce using rule 15 (numero -> FLOAT .)
    END_OF_LINE     reduce using rule 15 (numero -> FLOAT .)


state 34

    (16) numero -> DOUBLE .

    SUMA            reduce using rule 16 (numero -> DOUBLE .)
    RESTA           reduce using rule 16 (numero -> DOUBLE .)
    MULTIPLICACION  reduce using rule 16 (numero -> DOUBLE .)
    DIVISION        reduce using rule 16 (numero -> DOUBLE .)
    MODULO          reduce using rule 16 (numero -> DOUBLE .)
    IGUAL_IGUAL     reduce using rule 16 (numero -> DOUBLE .)
    NO_IGUAL        reduce using rule 16 (numero -> DOUBLE .)
    MENOR_QUE       reduce using rule 16 (numero -> DOUBLE .)
    MENOR_O_IGUAL_QUE reduce using rule 16 (numero -> DOUBLE .)
    MAYOR_QUE       reduce using rule 16 (numero -> DOUBLE .)
    MAYOR_O_IGUAL_QUE reduce using rule 16 (numero -> DOUBLE .)
    $end            reduce using rule 16 (numero -> DOUBLE .)
    END_OF_LINE     reduce using rule 16 (numero -> DOUBLE .)


state 35

    (17) numero -> INT .

    SUMA            reduce using rule 17 (numero -> INT .)
    RESTA           reduce using rule 17 (numero -> INT .)
    MULTIPLICACION  reduce using rule 17 (numero -> INT .)
    DIVISION        reduce using rule 17 (numero -> INT .)
    MODULO          reduce using rule 17 (numero -> INT .)
    IGUAL_IGUAL     reduce using rule 17 (numero -> INT .)
    NO_IGUAL        reduce using rule 17 (numero -> INT .)
    MENOR_QUE       reduce using rule 17 (numero -> INT .)
    MENOR_O_IGUAL_QUE reduce using rule 17 (numero -> INT .)
    MAYOR_QUE       reduce using rule 17 (numero -> INT .)
    MAYOR_O_IGUAL_QUE reduce using rule 17 (numero -> INT .)
    $end            reduce using rule 17 (numero -> INT .)
    END_OF_LINE     reduce using rule 17 (numero -> INT .)


state 36

    (1) body -> asignacion END_OF_LINE .

    $end            reduce using rule 1 (body -> asignacion END_OF_LINE .)


state 37

    (8) body -> declaracion END_OF_LINE .

    $end            reduce using rule 8 (body -> declaracion END_OF_LINE .)


state 38

    (51) comparacion -> valor operador_realacional . valor
    (10) valor -> . CHAR
    (11) valor -> . numero
    (12) valor -> . BOOL
    (13) valor -> . STRING
    (14) valor -> . IDENTIFICADOR
    (15) numero -> . FLOAT
    (16) numero -> . DOUBLE
    (17) numero -> . INT

    CHAR            shift and go to state 22
    BOOL            shift and go to state 24
    STRING          shift and go to state 25
    IDENTIFICADOR   shift and go to state 65
    FLOAT           shift and go to state 33
    DOUBLE          shift and go to state 34
    INT             shift and go to state 35

    valor                          shift and go to state 63
    numero                         shift and go to state 64

state 39

    (28) operador_realacional -> IGUAL_IGUAL .

    CHAR            reduce using rule 28 (operador_realacional -> IGUAL_IGUAL .)
    BOOL            reduce using rule 28 (operador_realacional -> IGUAL_IGUAL .)
    STRING          reduce using rule 28 (operador_realacional -> IGUAL_IGUAL .)
    IDENTIFICADOR   reduce using rule 28 (operador_realacional -> IGUAL_IGUAL .)
    FLOAT           reduce using rule 28 (operador_realacional -> IGUAL_IGUAL .)
    DOUBLE          reduce using rule 28 (operador_realacional -> IGUAL_IGUAL .)
    INT             reduce using rule 28 (operador_realacional -> IGUAL_IGUAL .)


state 40

    (29) operador_realacional -> NO_IGUAL .

    CHAR            reduce using rule 29 (operador_realacional -> NO_IGUAL .)
    BOOL            reduce using rule 29 (operador_realacional -> NO_IGUAL .)
    STRING          reduce using rule 29 (operador_realacional -> NO_IGUAL .)
    IDENTIFICADOR   reduce using rule 29 (operador_realacional -> NO_IGUAL .)
    FLOAT           reduce using rule 29 (operador_realacional -> NO_IGUAL .)
    DOUBLE          reduce using rule 29 (operador_realacional -> NO_IGUAL .)
    INT             reduce using rule 29 (operador_realacional -> NO_IGUAL .)


state 41

    (30) operador_realacional -> MENOR_QUE .

    CHAR            reduce using rule 30 (operador_realacional -> MENOR_QUE .)
    BOOL            reduce using rule 30 (operador_realacional -> MENOR_QUE .)
    STRING          reduce using rule 30 (operador_realacional -> MENOR_QUE .)
    IDENTIFICADOR   reduce using rule 30 (operador_realacional -> MENOR_QUE .)
    FLOAT           reduce using rule 30 (operador_realacional -> MENOR_QUE .)
    DOUBLE          reduce using rule 30 (operador_realacional -> MENOR_QUE .)
    INT             reduce using rule 30 (operador_realacional -> MENOR_QUE .)


state 42

    (31) operador_realacional -> MENOR_O_IGUAL_QUE .

    CHAR            reduce using rule 31 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    BOOL            reduce using rule 31 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    STRING          reduce using rule 31 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    IDENTIFICADOR   reduce using rule 31 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 31 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 31 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    INT             reduce using rule 31 (operador_realacional -> MENOR_O_IGUAL_QUE .)


state 43

    (32) operador_realacional -> MAYOR_QUE .

    CHAR            reduce using rule 32 (operador_realacional -> MAYOR_QUE .)
    BOOL            reduce using rule 32 (operador_realacional -> MAYOR_QUE .)
    STRING          reduce using rule 32 (operador_realacional -> MAYOR_QUE .)
    IDENTIFICADOR   reduce using rule 32 (operador_realacional -> MAYOR_QUE .)
    FLOAT           reduce using rule 32 (operador_realacional -> MAYOR_QUE .)
    DOUBLE          reduce using rule 32 (operador_realacional -> MAYOR_QUE .)
    INT             reduce using rule 32 (operador_realacional -> MAYOR_QUE .)


state 44

    (33) operador_realacional -> MAYOR_O_IGUAL_QUE .

    CHAR            reduce using rule 33 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    BOOL            reduce using rule 33 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    STRING          reduce using rule 33 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    IDENTIFICADOR   reduce using rule 33 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 33 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 33 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    INT             reduce using rule 33 (operador_realacional -> MAYOR_O_IGUAL_QUE .)


state 45

    (49) declaracion -> valor_tipo IDENTIFICADOR .
    (47) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (48) asignacionSimple -> IDENTIFICADOR . IGUAL expresion

    END_OF_LINE     reduce using rule 49 (declaracion -> valor_tipo IDENTIFICADOR .)
    IGUAL           shift and go to state 47


state 46

    (50) declaracion -> valor_tipo asignacion .

    END_OF_LINE     reduce using rule 50 (declaracion -> valor_tipo asignacion .)


state 47

    (47) asignacionSimple -> IDENTIFICADOR IGUAL . valor
    (48) asignacionSimple -> IDENTIFICADOR IGUAL . expresion
    (10) valor -> . CHAR
    (11) valor -> . numero
    (12) valor -> . BOOL
    (13) valor -> . STRING
    (14) valor -> . IDENTIFICADOR
    (59) expresion -> . expresion_operacion_aritmetica
    (60) expresion -> . expresion_condicional
    (15) numero -> . FLOAT
    (16) numero -> . DOUBLE
    (17) numero -> . INT
    (61) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (62) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (63) expresion_condicional -> . numero operador_condicional numero
    (64) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR

    CHAR            shift and go to state 22
    BOOL            shift and go to state 24
    STRING          shift and go to state 25
    IDENTIFICADOR   shift and go to state 66
    FLOAT           shift and go to state 33
    DOUBLE          shift and go to state 34
    INT             shift and go to state 35

    valor                          shift and go to state 67
    expresion                      shift and go to state 68
    numero                         shift and go to state 23
    expresion_operacion_aritmetica shift and go to state 18
    expresion_condicional          shift and go to state 19

state 48

    (62) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 69


state 49

    (64) expresion_condicional -> IDENTIFICADOR operador_condicional . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 70


state 50

    (34) operador_aritmentico -> SUMA .

    IDENTIFICADOR   reduce using rule 34 (operador_aritmentico -> SUMA .)
    FLOAT           reduce using rule 34 (operador_aritmentico -> SUMA .)
    DOUBLE          reduce using rule 34 (operador_aritmentico -> SUMA .)
    INT             reduce using rule 34 (operador_aritmentico -> SUMA .)


state 51

    (35) operador_aritmentico -> RESTA .

    IDENTIFICADOR   reduce using rule 35 (operador_aritmentico -> RESTA .)
    FLOAT           reduce using rule 35 (operador_aritmentico -> RESTA .)
    DOUBLE          reduce using rule 35 (operador_aritmentico -> RESTA .)
    INT             reduce using rule 35 (operador_aritmentico -> RESTA .)


state 52

    (36) operador_aritmentico -> MULTIPLICACION .

    IDENTIFICADOR   reduce using rule 36 (operador_aritmentico -> MULTIPLICACION .)
    FLOAT           reduce using rule 36 (operador_aritmentico -> MULTIPLICACION .)
    DOUBLE          reduce using rule 36 (operador_aritmentico -> MULTIPLICACION .)
    INT             reduce using rule 36 (operador_aritmentico -> MULTIPLICACION .)


state 53

    (37) operador_aritmentico -> DIVISION .

    IDENTIFICADOR   reduce using rule 37 (operador_aritmentico -> DIVISION .)
    FLOAT           reduce using rule 37 (operador_aritmentico -> DIVISION .)
    DOUBLE          reduce using rule 37 (operador_aritmentico -> DIVISION .)
    INT             reduce using rule 37 (operador_aritmentico -> DIVISION .)


state 54

    (38) operador_aritmentico -> MODULO .

    IDENTIFICADOR   reduce using rule 38 (operador_aritmentico -> MODULO .)
    FLOAT           reduce using rule 38 (operador_aritmentico -> MODULO .)
    DOUBLE          reduce using rule 38 (operador_aritmentico -> MODULO .)
    INT             reduce using rule 38 (operador_aritmentico -> MODULO .)


state 55

    (39) operador_condicional -> IGUAL_IGUAL .

    IDENTIFICADOR   reduce using rule 39 (operador_condicional -> IGUAL_IGUAL .)
    FLOAT           reduce using rule 39 (operador_condicional -> IGUAL_IGUAL .)
    DOUBLE          reduce using rule 39 (operador_condicional -> IGUAL_IGUAL .)
    INT             reduce using rule 39 (operador_condicional -> IGUAL_IGUAL .)


state 56

    (40) operador_condicional -> NO_IGUAL .

    IDENTIFICADOR   reduce using rule 40 (operador_condicional -> NO_IGUAL .)
    FLOAT           reduce using rule 40 (operador_condicional -> NO_IGUAL .)
    DOUBLE          reduce using rule 40 (operador_condicional -> NO_IGUAL .)
    INT             reduce using rule 40 (operador_condicional -> NO_IGUAL .)


state 57

    (41) operador_condicional -> MENOR_QUE .

    IDENTIFICADOR   reduce using rule 41 (operador_condicional -> MENOR_QUE .)
    FLOAT           reduce using rule 41 (operador_condicional -> MENOR_QUE .)
    DOUBLE          reduce using rule 41 (operador_condicional -> MENOR_QUE .)
    INT             reduce using rule 41 (operador_condicional -> MENOR_QUE .)


state 58

    (42) operador_condicional -> MENOR_O_IGUAL_QUE .

    IDENTIFICADOR   reduce using rule 42 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 42 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 42 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    INT             reduce using rule 42 (operador_condicional -> MENOR_O_IGUAL_QUE .)


state 59

    (43) operador_condicional -> MAYOR_QUE .

    IDENTIFICADOR   reduce using rule 43 (operador_condicional -> MAYOR_QUE .)
    FLOAT           reduce using rule 43 (operador_condicional -> MAYOR_QUE .)
    DOUBLE          reduce using rule 43 (operador_condicional -> MAYOR_QUE .)
    INT             reduce using rule 43 (operador_condicional -> MAYOR_QUE .)


state 60

    (44) operador_condicional -> MAYOR_O_IGUAL_QUE .

    IDENTIFICADOR   reduce using rule 44 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 44 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 44 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    INT             reduce using rule 44 (operador_condicional -> MAYOR_O_IGUAL_QUE .)


state 61

    (61) expresion_operacion_aritmetica -> numero operador_aritmentico . numero
    (15) numero -> . FLOAT
    (16) numero -> . DOUBLE
    (17) numero -> . INT

    FLOAT           shift and go to state 33
    DOUBLE          shift and go to state 34
    INT             shift and go to state 35

    numero                         shift and go to state 71

state 62

    (63) expresion_condicional -> numero operador_condicional . numero
    (15) numero -> . FLOAT
    (16) numero -> . DOUBLE
    (17) numero -> . INT

    FLOAT           shift and go to state 33
    DOUBLE          shift and go to state 34
    INT             shift and go to state 35

    numero                         shift and go to state 72

state 63

    (51) comparacion -> valor operador_realacional valor .

    $end            reduce using rule 51 (comparacion -> valor operador_realacional valor .)


state 64

    (11) valor -> numero .

    $end            reduce using rule 11 (valor -> numero .)


state 65

    (14) valor -> IDENTIFICADOR .

    $end            reduce using rule 14 (valor -> IDENTIFICADOR .)


state 66

    (14) valor -> IDENTIFICADOR .
    (62) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (64) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (34) operador_aritmentico -> . SUMA
    (35) operador_aritmentico -> . RESTA
    (36) operador_aritmentico -> . MULTIPLICACION
    (37) operador_aritmentico -> . DIVISION
    (38) operador_aritmentico -> . MODULO
    (39) operador_condicional -> . IGUAL_IGUAL
    (40) operador_condicional -> . NO_IGUAL
    (41) operador_condicional -> . MENOR_QUE
    (42) operador_condicional -> . MENOR_O_IGUAL_QUE
    (43) operador_condicional -> . MAYOR_QUE
    (44) operador_condicional -> . MAYOR_O_IGUAL_QUE

    END_OF_LINE     reduce using rule 14 (valor -> IDENTIFICADOR .)
    SUMA            shift and go to state 50
    RESTA           shift and go to state 51
    MULTIPLICACION  shift and go to state 52
    DIVISION        shift and go to state 53
    MODULO          shift and go to state 54
    IGUAL_IGUAL     shift and go to state 55
    NO_IGUAL        shift and go to state 56
    MENOR_QUE       shift and go to state 57
    MENOR_O_IGUAL_QUE shift and go to state 58
    MAYOR_QUE       shift and go to state 59
    MAYOR_O_IGUAL_QUE shift and go to state 60

    operador_aritmentico           shift and go to state 48
    operador_condicional           shift and go to state 49

state 67

    (47) asignacionSimple -> IDENTIFICADOR IGUAL valor .

    END_OF_LINE     reduce using rule 47 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)


state 68

    (48) asignacionSimple -> IDENTIFICADOR IGUAL expresion .

    END_OF_LINE     reduce using rule 48 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)


state 69

    (62) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .

    $end            reduce using rule 62 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 62 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)


state 70

    (64) expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .

    $end            reduce using rule 64 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 64 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)


state 71

    (61) expresion_operacion_aritmetica -> numero operador_aritmentico numero .

    $end            reduce using rule 61 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    END_OF_LINE     reduce using rule 61 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)


state 72

    (63) expresion_condicional -> numero operador_condicional numero .

    $end            reduce using rule 63 (expresion_condicional -> numero operador_condicional numero .)
    END_OF_LINE     reduce using rule 63 (expresion_condicional -> numero operador_condicional numero .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 21 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 21 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 21 resolved as shift
WARNING: shift/reduce conflict for MENOR_O_IGUAL_QUE in state 21 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 21 resolved as shift
WARNING: shift/reduce conflict for MAYOR_O_IGUAL_QUE in state 21 resolved as shift
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 23 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 23 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 23 resolved as shift
WARNING: shift/reduce conflict for MENOR_O_IGUAL_QUE in state 23 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 23 resolved as shift
WARNING: shift/reduce conflict for MAYOR_O_IGUAL_QUE in state 23 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (estructura_datos -> IGUAL)
WARNING: rejected rule (salida_entrada -> IGUAL) in state 17
WARNING: reduce/reduce conflict in state 17 resolved using rule (estructura_datos -> IGUAL)
WARNING: rejected rule (funcion -> IGUAL) in state 17
WARNING: reduce/reduce conflict in state 17 resolved using rule (while -> IGUAL)
WARNING: rejected rule (estructura_datos -> IGUAL) in state 17
WARNING: reduce/reduce conflict in state 17 resolved using rule (while -> IGUAL)
WARNING: rejected rule (switch_case -> IGUAL) in state 17
WARNING: reduce/reduce conflict in state 17 resolved using rule (while -> IGUAL)
WARNING: rejected rule (for -> IGUAL) in state 17
WARNING: Rule (salida_entrada -> IGUAL) is never reduced
WARNING: Rule (funcion -> IGUAL) is never reduced
WARNING: Rule (estructura_datos -> IGUAL) is never reduced
WARNING: Rule (switch_case -> IGUAL) is never reduced
WARNING: Rule (for -> IGUAL) is never reduced
