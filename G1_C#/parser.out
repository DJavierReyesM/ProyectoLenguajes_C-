Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    AND
    BYTE
    CLASS
    COMILLA_DOBLE
    COMILLA_SIMPLE
    CONST
    C_IDENT_TEXTUAL
    DEFAULT
    ELSE
    FINALLY
    GLOBAL
    IN
    IR
    LET
    NEGACION
    NOR
    NULL_VAL
    OBJECT
    ON
    OR
    ORDERBY
    RETURN
    SHIFT_MAYOR
    SHIFT_MENOR
    SIMPLE_AND
    SIMPLE_OR
    STRUCT
    THIS
    TO_UPPER
    TYPEOF
    VAR
    WHEN
    WHERE

Grammar

Rule 0     S' -> body
Rule 1     body -> asignacion END_OF_LINE
Rule 2     body -> comparacion
Rule 3     body -> estructura_control
Rule 4     body -> estructura_datos
Rule 5     body -> expresion END_OF_LINE
Rule 6     body -> salida_entrada END_OF_LINE
Rule 7     body -> funcion
Rule 8     body -> declaracion END_OF_LINE
Rule 9     body -> empty
Rule 10    body -> funciones_estructura_datos END_OF_LINE
Rule 11    body -> lambda_exp
Rule 12    valor -> CHAR
Rule 13    valor -> numero
Rule 14    valor -> BOOL
Rule 15    valor -> STRING
Rule 16    valor -> IDENTIFICADOR
Rule 17    numero -> FLOAT
Rule 18    numero -> DOUBLE
Rule 19    numero -> INT
Rule 20    ftipo -> valor_tipo
Rule 21    ftipo -> VOID
Rule 22    valor_tipo -> CHAR_TYPE
Rule 23    valor_tipo -> FLOAT_TYPE
Rule 24    valor_tipo -> DOUBLE_TYPE
Rule 25    valor_tipo -> INT_TYPE
Rule 26    valor_tipo -> BOOL_TYPE
Rule 27    valor_tipo -> STRING_TYPE
Rule 28    valor_tipo_inicializador -> FLOAT_TYPE
Rule 29    valor_tipo_inicializador -> DOUBLE_TYPE
Rule 30    valor_tipo_inicializador -> STRING_TYPE
Rule 31    valor_tipo_inicializador -> INT_TYPE
Rule 32    valor_tipo_inicializador -> BOOL_TYPE
Rule 33    valor_tipo_inicializador -> CHAR_TYPE
Rule 34    valor_tipo_inicializador -> IDENTIFICADOR
Rule 35    modificador_acceso -> PRIVATE
Rule 36    modificador_acceso -> PROTECTED
Rule 37    modificador_acceso -> PUBLIC
Rule 38    operador_realacional -> IGUAL_IGUAL
Rule 39    operador_realacional -> NO_IGUAL
Rule 40    operador_realacional -> MENOR_QUE
Rule 41    operador_realacional -> MENOR_O_IGUAL_QUE
Rule 42    operador_realacional -> MAYOR_QUE
Rule 43    operador_realacional -> MAYOR_O_IGUAL_QUE
Rule 44    operador_aritmentico -> SUMA
Rule 45    operador_aritmentico -> RESTA
Rule 46    operador_aritmentico -> MULTIPLICACION
Rule 47    operador_aritmentico -> DIVISION
Rule 48    operador_aritmentico -> MODULO
Rule 49    operador_condicional -> IGUAL_IGUAL
Rule 50    operador_condicional -> NO_IGUAL
Rule 51    operador_condicional -> MENOR_QUE
Rule 52    operador_condicional -> MENOR_O_IGUAL_QUE
Rule 53    operador_condicional -> MAYOR_QUE
Rule 54    operador_condicional -> MAYOR_O_IGUAL_QUE
Rule 55    operacion_string -> STRING SUMA STRING
Rule 56    operacion_string -> STRING SUMA IDENTIFICADOR
Rule 57    operacion_string -> IDENTIFICADOR SUMA STRING
Rule 58    operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR
Rule 59    empty -> END_OF_LINE
Rule 60    asignacion -> asignacionSimple
Rule 61    asignacion -> asignacionCompuesta
Rule 62    asignacion -> asignacionClase
Rule 63    asignacion -> asignacionEstructuraD
Rule 64    asignacion -> asignacionNull
Rule 65    asignacion -> asignacionIndex
Rule 66    asignacion -> asignacionRef
Rule 67    asignacionSimple -> IDENTIFICADOR IGUAL valor
Rule 68    asignacionSimple -> IDENTIFICADOR IGUAL expresion
Rule 69    asignacionSimple -> IDENTIFICADOR IGUAL salida_tres
Rule 70    asignacionSimple -> IDENTIFICADOR IGUAL index
Rule 71    asignacionNull -> IDENTIFICADOR IGUAL NULL
Rule 72    asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
Rule 73    asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionPila
Rule 74    asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionQueue
Rule 75    asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionList
Rule 76    asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER
Rule 77    asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER
Rule 78    asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER
Rule 79    asignacionIndex -> index IGUAL index
Rule 80    asignacionIndex -> index IGUAL valor
Rule 81    index -> IDENTIFICADOR COR_IZQ INT COR_DER
Rule 82    index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
Rule 83    asignacionRef -> IDENTIFICADOR IGUAL REF IDENTIFICADOR
Rule 84    asignacionRef -> IDENTIFICADOR IGUAL REF index
Rule 85    asignacionCompuesta -> asignacionCompuesta_Logic
Rule 86    asignacionCompuesta -> asignacionCompuesta_Number
Rule 87    asignacionCompuesta -> asignacionCompuesta_Null
Rule 88    asignacionCompuesta -> asignacionCompuesta_Shift
Rule 89    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL
Rule 90    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
Rule 91    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
Rule 92    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic INT
Rule 93    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero
Rule 94    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
Rule 95    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
Rule 96    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL valor
Rule 97    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL expresion
Rule 98    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionPila
Rule 99    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionQueue
Rule 100   asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionList
Rule 101   asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
Rule 102   asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift INT
Rule 103   operadoresCompuestosNumber -> AUMENTADO
Rule 104   operadoresCompuestosNumber -> DECREMENTADO
Rule 105   operadoresCompuestosNumber -> MULTIPLICADO_POR
Rule 106   operadoresCompuestosNumber -> DIVIDIDO_POR
Rule 107   operadoresCompuestosNumber -> MODULO_DE
Rule 108   operadoresCompuestosLogic -> AND_EQUAL
Rule 109   operadoresCompuestosLogic -> OR_EQUAL
Rule 110   operadoresCompuestosLogic -> EXC_OREQUAL
Rule 111   operadoresCompuestosShift -> LEFTSHIFT_EQUAL
Rule 112   operadoresCompuestosShift -> RIGHTSHIFT_EQUAL
Rule 113   declaracion -> valor_tipo IDENTIFICADOR
Rule 114   declaracion -> declaracionEstructuraD
Rule 115   declaracion -> declaracionAsignacion
Rule 116   declaracion -> declaracionClase
Rule 117   declaracion -> declaracionNull
Rule 118   declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR
Rule 119   declaracionClase -> IDENTIFICADOR IDENTIFICADOR
Rule 120   declaracionAsignacion -> valor_tipo asignacionSimple
Rule 121   declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
Rule 122   declaracionAsignacion -> declaracionClase IGUAL NULL
Rule 123   declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR
Rule 124   declaracionAsignacion -> declaracionNull IGUAL valor
Rule 125   declaracionAsignacion -> declaracionNull IGUAL expresion
Rule 126   declaracionAsignacion -> declaracionNull IGUAL NULL
Rule 127   declaracionAsignacion -> declaracionEstructuraD IGUAL NULL
Rule 128   declaracionAsignacion -> REF valor_tipo asignacionRef
Rule 129   declaracionAsignacion -> REF IDENTIFICADOR asignacionRef
Rule 130   declaracionAsignacion -> REF declaracionEstructuraD asignacionRef
Rule 131   declaracionEstructuraD -> declaracionList
Rule 132   declaracionEstructuraD -> declaracionQueue
Rule 133   declaracionEstructuraD -> declaracionPila
Rule 134   declaracionList -> LIST tipoLista IDENTIFICADOR
Rule 135   declaracionQueue -> QUEUE tipoLista IDENTIFICADOR
Rule 136   declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
Rule 137   comparacion -> valor operador_realacional valor
Rule 138   estructura_control -> while
Rule 139   estructura_control -> switch_case
Rule 140   estructura_control -> for
Rule 141   while -> while_normal
Rule 142   while -> while_do
Rule 143   while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
Rule 144   while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
Rule 145   body_while -> asignacion END_OF_LINE
Rule 146   body_while -> declaracion END_OF_LINE
Rule 147   body_while -> salida_entrada END_OF_LINE
Rule 148   body_while -> BREAK END_OF_LINE
Rule 149   body_while -> CONTINUE END_OF_LINE
Rule 150   body_while -> asignacion END_OF_LINE body_while
Rule 151   body_while -> declaracion END_OF_LINE body_while
Rule 152   body_while -> salida_entrada END_OF_LINE body_while
Rule 153   body_while -> BREAK END_OF_LINE body_while
Rule 154   body_while -> CONTINUE END_OF_LINE body_while
Rule 155   switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
Rule 156   casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
Rule 157   casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE
Rule 158   casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
Rule 159   casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos
Rule 160   body_case -> asignacion END_OF_LINE
Rule 161   body_case -> declaracion END_OF_LINE
Rule 162   body_case -> comparacion END_OF_LINE
Rule 163   body_case -> salida_entrada END_OF_LINE
Rule 164   body_case -> asignacion END_OF_LINE body_case
Rule 165   body_case -> declaracion END_OF_LINE body_case
Rule 166   body_case -> salida_entrada END_OF_LINE body_case
Rule 167   body_case -> comparacion END_OF_LINE body_case
Rule 168   for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
Rule 169   forIterador -> IDENTIFICADOR operadorForIteracion
Rule 170   operadorForIteracion -> INCREMENTO
Rule 171   operadorForIteracion -> DECREMENTO
Rule 172   forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion
Rule 173   valorForCondicion -> FLOAT
Rule 174   valorForCondicion -> DOUBLE
Rule 175   valorForCondicion -> INT
Rule 176   valorForCondicion -> IDENTIFICADOR
Rule 177   forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador
Rule 178   forInicializador -> IDENTIFICADOR IGUAL valorForInicializador
Rule 179   tipoDatoForInicializador -> FLOAT_TYPE
Rule 180   tipoDatoForInicializador -> DOUBLE_TYPE
Rule 181   tipoDatoForInicializador -> INT_TYPE
Rule 182   valorForInicializador -> FLOAT
Rule 183   valorForInicializador -> DOUBLE
Rule 184   valorForInicializador -> INT
Rule 185   valorForInicializador -> IDENTIFICADOR
Rule 186   estructura_datos -> lista
Rule 187   estructura_datos -> pila
Rule 188   lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
Rule 189   tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE
Rule 190   pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
Rule 191   funciones_estructura_datos -> stack_push
Rule 192   funciones_estructura_datos -> stack_pop
Rule 193   stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
Rule 194   stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
Rule 195   stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
Rule 196   expresion -> expresion_operacion_aritmetica
Rule 197   expresion -> expresion_condicional
Rule 198   expresion_operacion_aritmetica -> numero operador_aritmentico numero
Rule 199   expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR
Rule 200   expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero
Rule 201   expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR
Rule 202   expresion_condicional -> numero operador_condicional numero
Rule 203   expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR
Rule 204   expresion_condicional -> IDENTIFICADOR operador_condicional numero
Rule 205   expresion_condicional -> numero operador_condicional IDENTIFICADOR
Rule 206   salida_entrada -> salida_uno
Rule 207   salida_entrada -> salida_dos
Rule 208   salida_entrada -> salida_tres
Rule 209   salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
Rule 210   salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
Rule 211   salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
Rule 212   salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
Rule 213   salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER
Rule 214   funcion -> funcion_tipo_uno
Rule 215   funcion -> funcion_tipo_tres
Rule 216   funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
Rule 217   funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
Rule 218   parametrosF -> declaracion
Rule 219   parametrosF -> declaracion COMA parametrosF
Rule 220   bodyF -> asignacion END_OF_LINE
Rule 221   bodyF -> declaracion END_OF_LINE
Rule 222   bodyF -> salida_entrada END_OF_LINE
Rule 223   bodyF -> asignacion END_OF_LINE bodyF
Rule 224   bodyF -> declaracion END_OF_LINE bodyF
Rule 225   bodyF -> salida_entrada END_OF_LINE bodyF
Rule 226   lambda_exp -> lambdaArg LAMBDA lambdaCuerpo
Rule 227   lambdaArg -> PAR_IZQ PAR_DER
Rule 228   lambdaArg -> PAR_IZQ lambdaParametrosUno PAR_DER
Rule 229   lambdaArg -> PAR_IZQ lambdaParametrosDos PAR_DER
Rule 230   lambdaArg -> IDENTIFICADOR
Rule 231   lambdaParametrosUno -> valor_tipo IDENTIFICADOR
Rule 232   lambdaParametrosUno -> valor_tipo IDENTIFICADOR COMA lambdaParametrosUno
Rule 233   lambdaParametrosDos -> IDENTIFICADOR
Rule 234   lambdaParametrosDos -> IDENTIFICADOR COMA lambdaParametrosDos
Rule 235   lambdaCuerpo -> expresion
Rule 236   lambdaCuerpo -> salida_uno
Rule 237   lambdaCuerpo -> salida_dos

Terminals, with rules where they appear

ADD                  : 
AND                  : 
AND_EQUAL            : 108
AUMENTADO            : 103
BOOL                 : 14 89
BOOL_TYPE            : 26 32
BREAK                : 148 153 156 157 158 159
BYTE                 : 
CASE                 : 156 157 158 159
CHAR                 : 12
CHAR_TYPE            : 22 33
CLASS                : 
COMA                 : 219 232 234
COMILLA_DOBLE        : 
COMILLA_SIMPLE       : 
CONSOLE_READLINE     : 213
CONSOLE_WRITELINE    : 209 210 211 212
CONST                : 
CONTINUE             : 149 154
COR_DER              : 81 82
COR_IZQ              : 81 82
C_CADENA_INTERPOLADA : 212
C_IDENT_TEXTUAL      : 
DECREMENTADO         : 104
DECREMENTO           : 171
DEFAULT              : 
DIVIDIDO_POR         : 106
DIVISION             : 47
DO                   : 144
DOS_PUNTOS           : 156 157 158 159
DOUBLE               : 18 174 183
DOUBLE_TYPE          : 24 29 180
ELSE                 : 
END_OF_LINE          : 1 5 6 8 10 59 144 145 146 147 148 149 150 151 152 153 154 156 157 158 159 160 161 162 163 164 165 166 167 168 168 188 190 220 221 222 223 224 225
EXC_OREQUAL          : 110
FINALLY              : 
FLOAT                : 17 173 182
FLOAT_TYPE           : 23 28 179
FOR                  : 168
GLOBAL               : 
IDENTIFICADOR        : 16 34 56 57 58 58 67 68 69 70 71 72 72 73 74 75 81 82 82 83 83 84 89 90 91 91 92 93 94 95 95 96 97 98 99 100 101 101 102 113 118 119 119 121 123 129 134 135 136 169 172 176 177 178 185 188 190 193 194 194 195 199 200 201 201 203 203 204 205 211 216 217 230 231 232 233 234
IGUAL                : 67 68 69 70 71 72 73 74 75 79 80 83 84 121 122 123 124 125 126 127 177 178 188 190
IGUAL_IGUAL          : 38 49
IN                   : 
INCREMENTO           : 170
INT                  : 19 81 92 102 175 184
INT_TYPE             : 25 31 181
IR                   : 
LAMBDA               : 226
LEFTSHIFT_EQUAL      : 111
LET                  : 
LIST                 : 78 134 188 188
LLAVE_DER            : 143 144 155 168 216 217
LLAVE_IZQ            : 143 144 155 168 216 217
MAYOR_O_IGUAL_QUE    : 43 54
MAYOR_QUE            : 42 53 136 189 190 190
MENOR_O_IGUAL_QUE    : 41 52
MENOR_QUE            : 40 51 136 189 190 190
MODULO               : 48
MODULO_DE            : 107
MULTIPLICACION       : 46
MULTIPLICADO_POR     : 105
NEGACION             : 
NEW                  : 72 76 77 78 121 188 190 194
NOR                  : 
NO_IGUAL             : 39 50
NULL                 : 71 122 126 127
NULL_EQUAL           : 96 97 98 99 100
NULL_VAL             : 
OBJECT               : 
ON                   : 
OP_TERNARIO          : 118
OR                   : 
ORDERBY              : 
OR_EQUAL             : 109
PAR_DER              : 72 76 77 78 121 143 144 155 168 188 190 193 194 194 195 209 210 211 212 213 216 217 227 228 229
PAR_IZQ              : 72 76 77 78 121 143 144 155 168 188 190 193 194 194 195 209 210 211 212 213 216 217 227 228 229
POP                  : 195
PRIVATE              : 35
PROTECTED            : 36
PUBLIC               : 37
PUNTO                : 193 194 195
PUSH                 : 193 194
QUEUE                : 77 135
REF                  : 83 84 128 129 130
RESTA                : 45
RETURN               : 
RIGHTSHIFT_EQUAL     : 112
SHIFT_MAYOR          : 
SHIFT_MENOR          : 
SIMPLE_AND           : 
SIMPLE_OR            : 
STACK                : 76 136 190 190
STRING               : 15 55 55 56 57 209 212
STRING_TYPE          : 27 30
STRUCT               : 
SUMA                 : 44 55 56 57 58
SWITCH               : 155
THIS                 : 
TO_UPPER             : 
TYPEOF               : 
VAR                  : 
VOID                 : 21 216 217
WHEN                 : 
WHERE                : 
WHILE                : 143 144
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 145 150 160 164 220 223
asignacionClase      : 62
asignacionCompuesta  : 61
asignacionCompuesta_Logic : 85
asignacionCompuesta_Null : 87
asignacionCompuesta_Number : 86
asignacionCompuesta_Shift : 88
asignacionEstructuraD : 63
asignacionIndex      : 65
asignacionList       : 75 100
asignacionNull       : 64
asignacionPila       : 73 98
asignacionQueue      : 74 99
asignacionRef        : 66 128 129 130
asignacionSimple     : 60 120
body                 : 168 216 0
bodyF                : 217 223 224 225
body_case            : 156 158 164 165 166 167
body_while           : 143 144 150 151 152 153 154
casos                : 155 158 159
comparacion          : 2 162 167
declaracion          : 8 146 151 161 165 218 219 221 224
declaracionAsignacion : 115
declaracionClase     : 116 121 122 123
declaracionEstructuraD : 114 127 130
declaracionList      : 131
declaracionNull      : 117 124 125 126
declaracionPila      : 133
declaracionQueue     : 132
empty                : 9
estructura_control   : 3
estructura_datos     : 4
expresion            : 5 68 97 125 235
expresion_condicional : 90 143 144 197
expresion_operacion_aritmetica : 94 196
for                  : 140
forCondicion         : 168
forInicializador     : 168
forIterador          : 168
ftipo                : 
funcion              : 7
funcion_tipo_tres    : 215
funcion_tipo_uno     : 214
funciones_estructura_datos : 10
index                : 70 79 79 80 84
lambdaArg            : 226
lambdaCuerpo         : 226
lambdaParametrosDos  : 229 234
lambdaParametrosUno  : 228 232
lambda_exp           : 11
lista                : 186
modificador_acceso   : 216 217
numero               : 13 93 198 198 199 200 202 202 204 205
operacion_string     : 210
operadorForIteracion : 169
operador_aritmentico : 198 199 200 201
operador_condicional : 172 202 203 204 205
operador_realacional : 137
operadoresCompuestosLogic : 89 90 91 92
operadoresCompuestosNumber : 93 94 95
operadoresCompuestosShift : 101 102
parametrosF          : 217 219
pila                 : 187
salida_dos           : 207 237
salida_entrada       : 6 147 152 163 166 222 225
salida_tres          : 69 208
salida_uno           : 206 236
stack_pop            : 192
stack_push           : 191
switch_case          : 139
tipoDatoForInicializador : 177
tipoLista            : 76 77 78 134 135 188 188
valor                : 67 80 96 124 137 137 155 156 157 158 159 193
valorForCondicion    : 172
valorForInicializador : 177 178
valor_tipo           : 20 113 118 120 128 231 232
valor_tipo_inicializador : 136 189 190 190
while                : 138
while_do             : 142
while_normal         : 141

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (11) body -> . lambda_exp
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (137) comparacion -> . valor operador_realacional valor
    (138) estructura_control -> . while
    (139) estructura_control -> . switch_case
    (140) estructura_control -> . for
    (186) estructura_datos -> . lista
    (187) estructura_datos -> . pila
    (196) expresion -> . expresion_operacion_aritmetica
    (197) expresion -> . expresion_condicional
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (214) funcion -> . funcion_tipo_uno
    (215) funcion -> . funcion_tipo_tres
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (59) empty -> . END_OF_LINE
    (191) funciones_estructura_datos -> . stack_push
    (192) funciones_estructura_datos -> . stack_pop
    (226) lambda_exp -> . lambdaArg LAMBDA lambdaCuerpo
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (141) while -> . while_normal
    (142) while -> . while_do
    (155) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (168) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (188) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (190) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (198) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (200) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (202) expresion_condicional -> . numero operador_condicional numero
    (203) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (205) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (216) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (217) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (193) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (194) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (195) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (227) lambdaArg -> . PAR_IZQ PAR_DER
    (228) lambdaArg -> . PAR_IZQ lambdaParametrosUno PAR_DER
    (229) lambdaArg -> . PAR_IZQ lambdaParametrosDos PAR_DER
    (230) lambdaArg -> . IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (143) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (144) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (35) modificador_acceso -> . PRIVATE
    (36) modificador_acceso -> . PROTECTED
    (37) modificador_acceso -> . PUBLIC
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 35
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    SWITCH          shift and go to state 56
    FOR             shift and go to state 57
    LIST            shift and go to state 58
    STACK           shift and go to state 59
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    PAR_IZQ         shift and go to state 48
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72
    WHILE           shift and go to state 75
    DO              shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    PUBLIC          shift and go to state 79
    QUEUE           shift and go to state 80

    body                           shift and go to state 1
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    lambda_exp                     shift and go to state 13
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor                          shift and go to state 21
    while                          shift and go to state 22
    switch_case                    shift and go to state 23
    for                            shift and go to state 24
    lista                          shift and go to state 25
    pila                           shift and go to state 26
    expresion_operacion_aritmetica shift and go to state 27
    expresion_condicional          shift and go to state 28
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    funcion_tipo_uno               shift and go to state 32
    funcion_tipo_tres              shift and go to state 33
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    stack_push                     shift and go to state 40
    stack_pop                      shift and go to state 41
    lambdaArg                      shift and go to state 42
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    numero                         shift and go to state 51
    while_normal                   shift and go to state 54
    while_do                       shift and go to state 55
    modificador_acceso             shift and go to state 62
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 1

    (0) S' -> body .



state 2

    (1) body -> asignacion . END_OF_LINE

    END_OF_LINE     shift and go to state 81


state 3

    (59) empty -> END_OF_LINE .

    $end            reduce using rule 59 (empty -> END_OF_LINE .)
    LLAVE_DER       reduce using rule 59 (empty -> END_OF_LINE .)


state 4

    (2) body -> comparacion .

    $end            reduce using rule 2 (body -> comparacion .)
    LLAVE_DER       reduce using rule 2 (body -> comparacion .)


state 5

    (3) body -> estructura_control .

    $end            reduce using rule 3 (body -> estructura_control .)
    LLAVE_DER       reduce using rule 3 (body -> estructura_control .)


state 6

    (4) body -> estructura_datos .

    $end            reduce using rule 4 (body -> estructura_datos .)
    LLAVE_DER       reduce using rule 4 (body -> estructura_datos .)


state 7

    (5) body -> expresion . END_OF_LINE

    END_OF_LINE     shift and go to state 82


state 8

    (6) body -> salida_entrada . END_OF_LINE

    END_OF_LINE     shift and go to state 83


state 9

    (7) body -> funcion .

    $end            reduce using rule 7 (body -> funcion .)
    LLAVE_DER       reduce using rule 7 (body -> funcion .)


state 10

    (8) body -> declaracion . END_OF_LINE

    END_OF_LINE     shift and go to state 84


state 11

    (9) body -> empty .

    $end            reduce using rule 9 (body -> empty .)
    LLAVE_DER       reduce using rule 9 (body -> empty .)


state 12

    (10) body -> funciones_estructura_datos . END_OF_LINE

    END_OF_LINE     shift and go to state 85


state 13

    (11) body -> lambda_exp .

    $end            reduce using rule 11 (body -> lambda_exp .)
    LLAVE_DER       reduce using rule 11 (body -> lambda_exp .)


state 14

    (60) asignacion -> asignacionSimple .

    END_OF_LINE     reduce using rule 60 (asignacion -> asignacionSimple .)


state 15

    (61) asignacion -> asignacionCompuesta .

    END_OF_LINE     reduce using rule 61 (asignacion -> asignacionCompuesta .)


state 16

    (62) asignacion -> asignacionClase .

    END_OF_LINE     reduce using rule 62 (asignacion -> asignacionClase .)


state 17

    (63) asignacion -> asignacionEstructuraD .

    END_OF_LINE     reduce using rule 63 (asignacion -> asignacionEstructuraD .)


state 18

    (64) asignacion -> asignacionNull .

    END_OF_LINE     reduce using rule 64 (asignacion -> asignacionNull .)


state 19

    (65) asignacion -> asignacionIndex .

    END_OF_LINE     reduce using rule 65 (asignacion -> asignacionIndex .)


state 20

    (66) asignacion -> asignacionRef .

    END_OF_LINE     reduce using rule 66 (asignacion -> asignacionRef .)


state 21

    (137) comparacion -> valor . operador_realacional valor
    (38) operador_realacional -> . IGUAL_IGUAL
    (39) operador_realacional -> . NO_IGUAL
    (40) operador_realacional -> . MENOR_QUE
    (41) operador_realacional -> . MENOR_O_IGUAL_QUE
    (42) operador_realacional -> . MAYOR_QUE
    (43) operador_realacional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 87
    NO_IGUAL        shift and go to state 88
    MENOR_QUE       shift and go to state 89
    MENOR_O_IGUAL_QUE shift and go to state 90
    MAYOR_QUE       shift and go to state 91
    MAYOR_O_IGUAL_QUE shift and go to state 92

    operador_realacional           shift and go to state 86

state 22

    (138) estructura_control -> while .

    $end            reduce using rule 138 (estructura_control -> while .)
    LLAVE_DER       reduce using rule 138 (estructura_control -> while .)


state 23

    (139) estructura_control -> switch_case .

    $end            reduce using rule 139 (estructura_control -> switch_case .)
    LLAVE_DER       reduce using rule 139 (estructura_control -> switch_case .)


state 24

    (140) estructura_control -> for .

    $end            reduce using rule 140 (estructura_control -> for .)
    LLAVE_DER       reduce using rule 140 (estructura_control -> for .)


state 25

    (186) estructura_datos -> lista .

    $end            reduce using rule 186 (estructura_datos -> lista .)
    LLAVE_DER       reduce using rule 186 (estructura_datos -> lista .)


state 26

    (187) estructura_datos -> pila .

    $end            reduce using rule 187 (estructura_datos -> pila .)
    LLAVE_DER       reduce using rule 187 (estructura_datos -> pila .)


state 27

    (196) expresion -> expresion_operacion_aritmetica .

    END_OF_LINE     reduce using rule 196 (expresion -> expresion_operacion_aritmetica .)
    COMA            reduce using rule 196 (expresion -> expresion_operacion_aritmetica .)
    PAR_DER         reduce using rule 196 (expresion -> expresion_operacion_aritmetica .)
    $end            reduce using rule 196 (expresion -> expresion_operacion_aritmetica .)
    LLAVE_DER       reduce using rule 196 (expresion -> expresion_operacion_aritmetica .)


state 28

    (197) expresion -> expresion_condicional .

    END_OF_LINE     reduce using rule 197 (expresion -> expresion_condicional .)
    COMA            reduce using rule 197 (expresion -> expresion_condicional .)
    PAR_DER         reduce using rule 197 (expresion -> expresion_condicional .)
    $end            reduce using rule 197 (expresion -> expresion_condicional .)
    LLAVE_DER       reduce using rule 197 (expresion -> expresion_condicional .)


state 29

    (206) salida_entrada -> salida_uno .

    END_OF_LINE     reduce using rule 206 (salida_entrada -> salida_uno .)


state 30

    (207) salida_entrada -> salida_dos .

    END_OF_LINE     reduce using rule 207 (salida_entrada -> salida_dos .)


state 31

    (208) salida_entrada -> salida_tres .

    END_OF_LINE     reduce using rule 208 (salida_entrada -> salida_tres .)


state 32

    (214) funcion -> funcion_tipo_uno .

    $end            reduce using rule 214 (funcion -> funcion_tipo_uno .)
    LLAVE_DER       reduce using rule 214 (funcion -> funcion_tipo_uno .)


state 33

    (215) funcion -> funcion_tipo_tres .

    $end            reduce using rule 215 (funcion -> funcion_tipo_tres .)
    LLAVE_DER       reduce using rule 215 (funcion -> funcion_tipo_tres .)


state 34

    (113) declaracion -> valor_tipo . IDENTIFICADOR
    (120) declaracionAsignacion -> valor_tipo . asignacionSimple
    (118) declaracionNull -> valor_tipo . OP_TERNARIO IDENTIFICADOR
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index

    IDENTIFICADOR   shift and go to state 93
    OP_TERNARIO     shift and go to state 95

    asignacionSimple               shift and go to state 94

state 35

    (67) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (68) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (69) asignacionSimple -> IDENTIFICADOR . IGUAL salida_tres
    (70) asignacionSimple -> IDENTIFICADOR . IGUAL index
    (72) asignacionClase -> IDENTIFICADOR . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionPila
    (74) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionQueue
    (75) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionList
    (71) asignacionNull -> IDENTIFICADOR . IGUAL NULL
    (83) asignacionRef -> IDENTIFICADOR . IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> IDENTIFICADOR . IGUAL REF index
    (16) valor -> IDENTIFICADOR .
    (200) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (203) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (119) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR
    (193) stack_push -> IDENTIFICADOR . PUNTO PUSH PAR_IZQ valor PAR_DER
    (194) stack_push -> IDENTIFICADOR . PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (195) stack_pop -> IDENTIFICADOR . PUNTO POP PAR_IZQ PAR_DER
    (230) lambdaArg -> IDENTIFICADOR .
    (89) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift INT
    (81) index -> IDENTIFICADOR . COR_IZQ INT COR_DER
    (82) index -> IDENTIFICADOR . COR_IZQ IDENTIFICADOR COR_DER
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE
    (108) operadoresCompuestosLogic -> . AND_EQUAL
    (109) operadoresCompuestosLogic -> . OR_EQUAL
    (110) operadoresCompuestosLogic -> . EXC_OREQUAL
    (103) operadoresCompuestosNumber -> . AUMENTADO
    (104) operadoresCompuestosNumber -> . DECREMENTADO
    (105) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (106) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (107) operadoresCompuestosNumber -> . MODULO_DE
    (111) operadoresCompuestosShift -> . LEFTSHIFT_EQUAL
    (112) operadoresCompuestosShift -> . RIGHTSHIFT_EQUAL

  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_O_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_O_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 97
    IDENTIFICADOR   shift and go to state 96
    PUNTO           shift and go to state 100
    LAMBDA          reduce using rule 230 (lambdaArg -> IDENTIFICADOR .)
    NULL_EQUAL      shift and go to state 103
    COR_IZQ         shift and go to state 105
    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    IGUAL_IGUAL     shift and go to state 111
    NO_IGUAL        shift and go to state 112
    MENOR_QUE       shift and go to state 113
    MENOR_O_IGUAL_QUE shift and go to state 114
    MAYOR_QUE       shift and go to state 115
    MAYOR_O_IGUAL_QUE shift and go to state 116
    AND_EQUAL       shift and go to state 117
    OR_EQUAL        shift and go to state 118
    EXC_OREQUAL     shift and go to state 119
    AUMENTADO       shift and go to state 120
    DECREMENTADO    shift and go to state 121
    MULTIPLICADO_POR shift and go to state 122
    DIVIDIDO_POR    shift and go to state 123
    MODULO_DE       shift and go to state 124
    LEFTSHIFT_EQUAL shift and go to state 125
    RIGHTSHIFT_EQUAL shift and go to state 126

  ! IGUAL_IGUAL     [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]
  ! NO_IGUAL        [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]
  ! MENOR_QUE       [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]
  ! MENOR_O_IGUAL_QUE [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]
  ! MAYOR_QUE       [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]
  ! MAYOR_O_IGUAL_QUE [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]

    operador_aritmentico           shift and go to state 98
    operador_condicional           shift and go to state 99
    operadoresCompuestosLogic      shift and go to state 101
    operadoresCompuestosNumber     shift and go to state 102
    operadoresCompuestosShift      shift and go to state 104

state 36

    (114) declaracion -> declaracionEstructuraD .
    (127) declaracionAsignacion -> declaracionEstructuraD . IGUAL NULL

    END_OF_LINE     reduce using rule 114 (declaracion -> declaracionEstructuraD .)
    COMA            reduce using rule 114 (declaracion -> declaracionEstructuraD .)
    PAR_DER         reduce using rule 114 (declaracion -> declaracionEstructuraD .)
    IGUAL           shift and go to state 127


state 37

    (115) declaracion -> declaracionAsignacion .

    END_OF_LINE     reduce using rule 115 (declaracion -> declaracionAsignacion .)
    COMA            reduce using rule 115 (declaracion -> declaracionAsignacion .)
    PAR_DER         reduce using rule 115 (declaracion -> declaracionAsignacion .)


state 38

    (116) declaracion -> declaracionClase .
    (121) declaracionAsignacion -> declaracionClase . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> declaracionClase . IGUAL NULL
    (123) declaracionAsignacion -> declaracionClase . IGUAL IDENTIFICADOR

    END_OF_LINE     reduce using rule 116 (declaracion -> declaracionClase .)
    COMA            reduce using rule 116 (declaracion -> declaracionClase .)
    PAR_DER         reduce using rule 116 (declaracion -> declaracionClase .)
    IGUAL           shift and go to state 128


state 39

    (117) declaracion -> declaracionNull .
    (124) declaracionAsignacion -> declaracionNull . IGUAL valor
    (125) declaracionAsignacion -> declaracionNull . IGUAL expresion
    (126) declaracionAsignacion -> declaracionNull . IGUAL NULL

    END_OF_LINE     reduce using rule 117 (declaracion -> declaracionNull .)
    COMA            reduce using rule 117 (declaracion -> declaracionNull .)
    PAR_DER         reduce using rule 117 (declaracion -> declaracionNull .)
    IGUAL           shift and go to state 129


state 40

    (191) funciones_estructura_datos -> stack_push .

    END_OF_LINE     reduce using rule 191 (funciones_estructura_datos -> stack_push .)


state 41

    (192) funciones_estructura_datos -> stack_pop .

    END_OF_LINE     reduce using rule 192 (funciones_estructura_datos -> stack_pop .)


state 42

    (226) lambda_exp -> lambdaArg . LAMBDA lambdaCuerpo

    LAMBDA          shift and go to state 130


state 43

    (79) asignacionIndex -> index . IGUAL index
    (80) asignacionIndex -> index . IGUAL valor

    IGUAL           shift and go to state 131


state 44

    (85) asignacionCompuesta -> asignacionCompuesta_Logic .

    END_OF_LINE     reduce using rule 85 (asignacionCompuesta -> asignacionCompuesta_Logic .)


state 45

    (86) asignacionCompuesta -> asignacionCompuesta_Number .

    END_OF_LINE     reduce using rule 86 (asignacionCompuesta -> asignacionCompuesta_Number .)


state 46

    (87) asignacionCompuesta -> asignacionCompuesta_Null .

    END_OF_LINE     reduce using rule 87 (asignacionCompuesta -> asignacionCompuesta_Null .)


state 47

    (88) asignacionCompuesta -> asignacionCompuesta_Shift .

    END_OF_LINE     reduce using rule 88 (asignacionCompuesta -> asignacionCompuesta_Shift .)


state 48

    (227) lambdaArg -> PAR_IZQ . PAR_DER
    (228) lambdaArg -> PAR_IZQ . lambdaParametrosUno PAR_DER
    (229) lambdaArg -> PAR_IZQ . lambdaParametrosDos PAR_DER
    (231) lambdaParametrosUno -> . valor_tipo IDENTIFICADOR
    (232) lambdaParametrosUno -> . valor_tipo IDENTIFICADOR COMA lambdaParametrosUno
    (233) lambdaParametrosDos -> . IDENTIFICADOR
    (234) lambdaParametrosDos -> . IDENTIFICADOR COMA lambdaParametrosDos
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE

    PAR_DER         shift and go to state 132
    IDENTIFICADOR   shift and go to state 136
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68

    lambdaParametrosUno            shift and go to state 133
    lambdaParametrosDos            shift and go to state 134
    valor_tipo                     shift and go to state 135

state 49

    (128) declaracionAsignacion -> REF . valor_tipo asignacionRef
    (129) declaracionAsignacion -> REF . IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> REF . declaracionEstructuraD asignacionRef
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 138
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    valor_tipo                     shift and go to state 137
    declaracionEstructuraD         shift and go to state 139
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 50

    (12) valor -> CHAR .

    IGUAL_IGUAL     reduce using rule 12 (valor -> CHAR .)
    NO_IGUAL        reduce using rule 12 (valor -> CHAR .)
    MENOR_QUE       reduce using rule 12 (valor -> CHAR .)
    MENOR_O_IGUAL_QUE reduce using rule 12 (valor -> CHAR .)
    MAYOR_QUE       reduce using rule 12 (valor -> CHAR .)
    MAYOR_O_IGUAL_QUE reduce using rule 12 (valor -> CHAR .)
    $end            reduce using rule 12 (valor -> CHAR .)
    LLAVE_DER       reduce using rule 12 (valor -> CHAR .)
    END_OF_LINE     reduce using rule 12 (valor -> CHAR .)
    COMA            reduce using rule 12 (valor -> CHAR .)
    PAR_DER         reduce using rule 12 (valor -> CHAR .)
    DOS_PUNTOS      reduce using rule 12 (valor -> CHAR .)


state 51

    (13) valor -> numero .
    (198) expresion_operacion_aritmetica -> numero . operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> numero . operador_aritmentico IDENTIFICADOR
    (202) expresion_condicional -> numero . operador_condicional numero
    (205) expresion_condicional -> numero . operador_condicional IDENTIFICADOR
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_O_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_O_IGUAL_QUE resolved as shift
    END_OF_LINE     reduce using rule 13 (valor -> numero .)
    COMA            reduce using rule 13 (valor -> numero .)
    PAR_DER         reduce using rule 13 (valor -> numero .)
    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    IGUAL_IGUAL     shift and go to state 111
    NO_IGUAL        shift and go to state 112
    MENOR_QUE       shift and go to state 113
    MENOR_O_IGUAL_QUE shift and go to state 114
    MAYOR_QUE       shift and go to state 115
    MAYOR_O_IGUAL_QUE shift and go to state 116

  ! IGUAL_IGUAL     [ reduce using rule 13 (valor -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 13 (valor -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 13 (valor -> numero .) ]
  ! MENOR_O_IGUAL_QUE [ reduce using rule 13 (valor -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 13 (valor -> numero .) ]
  ! MAYOR_O_IGUAL_QUE [ reduce using rule 13 (valor -> numero .) ]

    operador_aritmentico           shift and go to state 142
    operador_condicional           shift and go to state 143

state 52

    (14) valor -> BOOL .

    IGUAL_IGUAL     reduce using rule 14 (valor -> BOOL .)
    NO_IGUAL        reduce using rule 14 (valor -> BOOL .)
    MENOR_QUE       reduce using rule 14 (valor -> BOOL .)
    MENOR_O_IGUAL_QUE reduce using rule 14 (valor -> BOOL .)
    MAYOR_QUE       reduce using rule 14 (valor -> BOOL .)
    MAYOR_O_IGUAL_QUE reduce using rule 14 (valor -> BOOL .)
    $end            reduce using rule 14 (valor -> BOOL .)
    LLAVE_DER       reduce using rule 14 (valor -> BOOL .)
    END_OF_LINE     reduce using rule 14 (valor -> BOOL .)
    COMA            reduce using rule 14 (valor -> BOOL .)
    PAR_DER         reduce using rule 14 (valor -> BOOL .)
    DOS_PUNTOS      reduce using rule 14 (valor -> BOOL .)


state 53

    (15) valor -> STRING .

    IGUAL_IGUAL     reduce using rule 15 (valor -> STRING .)
    NO_IGUAL        reduce using rule 15 (valor -> STRING .)
    MENOR_QUE       reduce using rule 15 (valor -> STRING .)
    MENOR_O_IGUAL_QUE reduce using rule 15 (valor -> STRING .)
    MAYOR_QUE       reduce using rule 15 (valor -> STRING .)
    MAYOR_O_IGUAL_QUE reduce using rule 15 (valor -> STRING .)
    $end            reduce using rule 15 (valor -> STRING .)
    LLAVE_DER       reduce using rule 15 (valor -> STRING .)
    END_OF_LINE     reduce using rule 15 (valor -> STRING .)
    COMA            reduce using rule 15 (valor -> STRING .)
    PAR_DER         reduce using rule 15 (valor -> STRING .)
    DOS_PUNTOS      reduce using rule 15 (valor -> STRING .)


state 54

    (141) while -> while_normal .

    $end            reduce using rule 141 (while -> while_normal .)
    LLAVE_DER       reduce using rule 141 (while -> while_normal .)


state 55

    (142) while -> while_do .

    $end            reduce using rule 142 (while -> while_do .)
    LLAVE_DER       reduce using rule 142 (while -> while_do .)


state 56

    (155) switch_case -> SWITCH . PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER

    PAR_IZQ         shift and go to state 144


state 57

    (168) for -> FOR . PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    PAR_IZQ         shift and go to state 145


state 58

    (188) lista -> LIST . tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (134) declaracionList -> LIST . tipoLista IDENTIFICADOR
    (189) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 147

    tipoLista                      shift and go to state 146

state 59

    (190) pila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (136) declaracionPila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    MENOR_QUE       shift and go to state 148


state 60

    (209) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ STRING PAR_DER
    (210) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> CONSOLE_WRITELINE . PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER

    PAR_IZQ         shift and go to state 149


state 61

    (213) salida_tres -> CONSOLE_READLINE . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 150


state 62

    (216) funcion_tipo_uno -> modificador_acceso . VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (217) funcion_tipo_tres -> modificador_acceso . VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    VOID            shift and go to state 151


state 63

    (22) valor_tipo -> CHAR_TYPE .

    IDENTIFICADOR   reduce using rule 22 (valor_tipo -> CHAR_TYPE .)
    OP_TERNARIO     reduce using rule 22 (valor_tipo -> CHAR_TYPE .)


state 64

    (23) valor_tipo -> FLOAT_TYPE .

    IDENTIFICADOR   reduce using rule 23 (valor_tipo -> FLOAT_TYPE .)
    OP_TERNARIO     reduce using rule 23 (valor_tipo -> FLOAT_TYPE .)


state 65

    (24) valor_tipo -> DOUBLE_TYPE .

    IDENTIFICADOR   reduce using rule 24 (valor_tipo -> DOUBLE_TYPE .)
    OP_TERNARIO     reduce using rule 24 (valor_tipo -> DOUBLE_TYPE .)


state 66

    (25) valor_tipo -> INT_TYPE .

    IDENTIFICADOR   reduce using rule 25 (valor_tipo -> INT_TYPE .)
    OP_TERNARIO     reduce using rule 25 (valor_tipo -> INT_TYPE .)


state 67

    (26) valor_tipo -> BOOL_TYPE .

    IDENTIFICADOR   reduce using rule 26 (valor_tipo -> BOOL_TYPE .)
    OP_TERNARIO     reduce using rule 26 (valor_tipo -> BOOL_TYPE .)


state 68

    (27) valor_tipo -> STRING_TYPE .

    IDENTIFICADOR   reduce using rule 27 (valor_tipo -> STRING_TYPE .)
    OP_TERNARIO     reduce using rule 27 (valor_tipo -> STRING_TYPE .)


state 69

    (131) declaracionEstructuraD -> declaracionList .

    IGUAL           reduce using rule 131 (declaracionEstructuraD -> declaracionList .)
    END_OF_LINE     reduce using rule 131 (declaracionEstructuraD -> declaracionList .)
    IDENTIFICADOR   reduce using rule 131 (declaracionEstructuraD -> declaracionList .)
    COMA            reduce using rule 131 (declaracionEstructuraD -> declaracionList .)
    PAR_DER         reduce using rule 131 (declaracionEstructuraD -> declaracionList .)


state 70

    (132) declaracionEstructuraD -> declaracionQueue .

    IGUAL           reduce using rule 132 (declaracionEstructuraD -> declaracionQueue .)
    END_OF_LINE     reduce using rule 132 (declaracionEstructuraD -> declaracionQueue .)
    IDENTIFICADOR   reduce using rule 132 (declaracionEstructuraD -> declaracionQueue .)
    COMA            reduce using rule 132 (declaracionEstructuraD -> declaracionQueue .)
    PAR_DER         reduce using rule 132 (declaracionEstructuraD -> declaracionQueue .)


state 71

    (133) declaracionEstructuraD -> declaracionPila .

    IGUAL           reduce using rule 133 (declaracionEstructuraD -> declaracionPila .)
    END_OF_LINE     reduce using rule 133 (declaracionEstructuraD -> declaracionPila .)
    IDENTIFICADOR   reduce using rule 133 (declaracionEstructuraD -> declaracionPila .)
    COMA            reduce using rule 133 (declaracionEstructuraD -> declaracionPila .)
    PAR_DER         reduce using rule 133 (declaracionEstructuraD -> declaracionPila .)


state 72

    (19) numero -> INT .

    SUMA            reduce using rule 19 (numero -> INT .)
    RESTA           reduce using rule 19 (numero -> INT .)
    MULTIPLICACION  reduce using rule 19 (numero -> INT .)
    DIVISION        reduce using rule 19 (numero -> INT .)
    MODULO          reduce using rule 19 (numero -> INT .)
    IGUAL_IGUAL     reduce using rule 19 (numero -> INT .)
    NO_IGUAL        reduce using rule 19 (numero -> INT .)
    MENOR_QUE       reduce using rule 19 (numero -> INT .)
    MENOR_O_IGUAL_QUE reduce using rule 19 (numero -> INT .)
    MAYOR_QUE       reduce using rule 19 (numero -> INT .)
    MAYOR_O_IGUAL_QUE reduce using rule 19 (numero -> INT .)
    $end            reduce using rule 19 (numero -> INT .)
    LLAVE_DER       reduce using rule 19 (numero -> INT .)
    END_OF_LINE     reduce using rule 19 (numero -> INT .)
    COMA            reduce using rule 19 (numero -> INT .)
    PAR_DER         reduce using rule 19 (numero -> INT .)
    DOS_PUNTOS      reduce using rule 19 (numero -> INT .)


state 73

    (17) numero -> FLOAT .

    SUMA            reduce using rule 17 (numero -> FLOAT .)
    RESTA           reduce using rule 17 (numero -> FLOAT .)
    MULTIPLICACION  reduce using rule 17 (numero -> FLOAT .)
    DIVISION        reduce using rule 17 (numero -> FLOAT .)
    MODULO          reduce using rule 17 (numero -> FLOAT .)
    IGUAL_IGUAL     reduce using rule 17 (numero -> FLOAT .)
    NO_IGUAL        reduce using rule 17 (numero -> FLOAT .)
    MENOR_QUE       reduce using rule 17 (numero -> FLOAT .)
    MENOR_O_IGUAL_QUE reduce using rule 17 (numero -> FLOAT .)
    MAYOR_QUE       reduce using rule 17 (numero -> FLOAT .)
    MAYOR_O_IGUAL_QUE reduce using rule 17 (numero -> FLOAT .)
    $end            reduce using rule 17 (numero -> FLOAT .)
    LLAVE_DER       reduce using rule 17 (numero -> FLOAT .)
    END_OF_LINE     reduce using rule 17 (numero -> FLOAT .)
    COMA            reduce using rule 17 (numero -> FLOAT .)
    PAR_DER         reduce using rule 17 (numero -> FLOAT .)
    DOS_PUNTOS      reduce using rule 17 (numero -> FLOAT .)


state 74

    (18) numero -> DOUBLE .

    SUMA            reduce using rule 18 (numero -> DOUBLE .)
    RESTA           reduce using rule 18 (numero -> DOUBLE .)
    MULTIPLICACION  reduce using rule 18 (numero -> DOUBLE .)
    DIVISION        reduce using rule 18 (numero -> DOUBLE .)
    MODULO          reduce using rule 18 (numero -> DOUBLE .)
    IGUAL_IGUAL     reduce using rule 18 (numero -> DOUBLE .)
    NO_IGUAL        reduce using rule 18 (numero -> DOUBLE .)
    MENOR_QUE       reduce using rule 18 (numero -> DOUBLE .)
    MENOR_O_IGUAL_QUE reduce using rule 18 (numero -> DOUBLE .)
    MAYOR_QUE       reduce using rule 18 (numero -> DOUBLE .)
    MAYOR_O_IGUAL_QUE reduce using rule 18 (numero -> DOUBLE .)
    $end            reduce using rule 18 (numero -> DOUBLE .)
    LLAVE_DER       reduce using rule 18 (numero -> DOUBLE .)
    END_OF_LINE     reduce using rule 18 (numero -> DOUBLE .)
    COMA            reduce using rule 18 (numero -> DOUBLE .)
    PAR_DER         reduce using rule 18 (numero -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 18 (numero -> DOUBLE .)


state 75

    (143) while_normal -> WHILE . PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER

    PAR_IZQ         shift and go to state 152


state 76

    (144) while_do -> DO . LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    LLAVE_IZQ       shift and go to state 153


state 77

    (35) modificador_acceso -> PRIVATE .

    VOID            reduce using rule 35 (modificador_acceso -> PRIVATE .)


state 78

    (36) modificador_acceso -> PROTECTED .

    VOID            reduce using rule 36 (modificador_acceso -> PROTECTED .)


state 79

    (37) modificador_acceso -> PUBLIC .

    VOID            reduce using rule 37 (modificador_acceso -> PUBLIC .)


state 80

    (135) declaracionQueue -> QUEUE . tipoLista IDENTIFICADOR
    (189) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 147

    tipoLista                      shift and go to state 154

state 81

    (1) body -> asignacion END_OF_LINE .

    $end            reduce using rule 1 (body -> asignacion END_OF_LINE .)
    LLAVE_DER       reduce using rule 1 (body -> asignacion END_OF_LINE .)


state 82

    (5) body -> expresion END_OF_LINE .

    $end            reduce using rule 5 (body -> expresion END_OF_LINE .)
    LLAVE_DER       reduce using rule 5 (body -> expresion END_OF_LINE .)


state 83

    (6) body -> salida_entrada END_OF_LINE .

    $end            reduce using rule 6 (body -> salida_entrada END_OF_LINE .)
    LLAVE_DER       reduce using rule 6 (body -> salida_entrada END_OF_LINE .)


state 84

    (8) body -> declaracion END_OF_LINE .

    $end            reduce using rule 8 (body -> declaracion END_OF_LINE .)
    LLAVE_DER       reduce using rule 8 (body -> declaracion END_OF_LINE .)


state 85

    (10) body -> funciones_estructura_datos END_OF_LINE .

    $end            reduce using rule 10 (body -> funciones_estructura_datos END_OF_LINE .)
    LLAVE_DER       reduce using rule 10 (body -> funciones_estructura_datos END_OF_LINE .)


state 86

    (137) comparacion -> valor operador_realacional . valor
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    IDENTIFICADOR   shift and go to state 157
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    valor                          shift and go to state 155
    numero                         shift and go to state 156

state 87

    (38) operador_realacional -> IGUAL_IGUAL .

    CHAR            reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    BOOL            reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    STRING          reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    IDENTIFICADOR   reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    FLOAT           reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    DOUBLE          reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    INT             reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)


state 88

    (39) operador_realacional -> NO_IGUAL .

    CHAR            reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    BOOL            reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    STRING          reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    IDENTIFICADOR   reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    FLOAT           reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    DOUBLE          reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    INT             reduce using rule 39 (operador_realacional -> NO_IGUAL .)


state 89

    (40) operador_realacional -> MENOR_QUE .

    CHAR            reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    BOOL            reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    STRING          reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    IDENTIFICADOR   reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    FLOAT           reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    DOUBLE          reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    INT             reduce using rule 40 (operador_realacional -> MENOR_QUE .)


state 90

    (41) operador_realacional -> MENOR_O_IGUAL_QUE .

    CHAR            reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    BOOL            reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    STRING          reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    IDENTIFICADOR   reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    INT             reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)


state 91

    (42) operador_realacional -> MAYOR_QUE .

    CHAR            reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    BOOL            reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    STRING          reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    IDENTIFICADOR   reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    FLOAT           reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    DOUBLE          reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    INT             reduce using rule 42 (operador_realacional -> MAYOR_QUE .)


state 92

    (43) operador_realacional -> MAYOR_O_IGUAL_QUE .

    CHAR            reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    BOOL            reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    STRING          reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    IDENTIFICADOR   reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    INT             reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)


state 93

    (113) declaracion -> valor_tipo IDENTIFICADOR .
    (67) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (68) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (69) asignacionSimple -> IDENTIFICADOR . IGUAL salida_tres
    (70) asignacionSimple -> IDENTIFICADOR . IGUAL index

    END_OF_LINE     reduce using rule 113 (declaracion -> valor_tipo IDENTIFICADOR .)
    COMA            reduce using rule 113 (declaracion -> valor_tipo IDENTIFICADOR .)
    PAR_DER         reduce using rule 113 (declaracion -> valor_tipo IDENTIFICADOR .)
    IGUAL           shift and go to state 158


state 94

    (120) declaracionAsignacion -> valor_tipo asignacionSimple .

    END_OF_LINE     reduce using rule 120 (declaracionAsignacion -> valor_tipo asignacionSimple .)
    COMA            reduce using rule 120 (declaracionAsignacion -> valor_tipo asignacionSimple .)
    PAR_DER         reduce using rule 120 (declaracionAsignacion -> valor_tipo asignacionSimple .)


state 95

    (118) declaracionNull -> valor_tipo OP_TERNARIO . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 159


state 96

    (119) declaracionClase -> IDENTIFICADOR IDENTIFICADOR .

    IGUAL           reduce using rule 119 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 119 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)
    COMA            reduce using rule 119 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)
    PAR_DER         reduce using rule 119 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)


state 97

    (67) asignacionSimple -> IDENTIFICADOR IGUAL . valor
    (68) asignacionSimple -> IDENTIFICADOR IGUAL . expresion
    (69) asignacionSimple -> IDENTIFICADOR IGUAL . salida_tres
    (70) asignacionSimple -> IDENTIFICADOR IGUAL . index
    (72) asignacionClase -> IDENTIFICADOR IGUAL . NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> IDENTIFICADOR IGUAL . asignacionPila
    (74) asignacionEstructuraD -> IDENTIFICADOR IGUAL . asignacionQueue
    (75) asignacionEstructuraD -> IDENTIFICADOR IGUAL . asignacionList
    (71) asignacionNull -> IDENTIFICADOR IGUAL . NULL
    (83) asignacionRef -> IDENTIFICADOR IGUAL . REF IDENTIFICADOR
    (84) asignacionRef -> IDENTIFICADOR IGUAL . REF index
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (196) expresion -> . expresion_operacion_aritmetica
    (197) expresion -> . expresion_condicional
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (76) asignacionPila -> . NEW STACK tipoLista PAR_IZQ PAR_DER
    (77) asignacionQueue -> . NEW QUEUE tipoLista PAR_IZQ PAR_DER
    (78) asignacionList -> . NEW LIST tipoLista PAR_IZQ PAR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (198) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (200) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (202) expresion_condicional -> . numero operador_condicional numero
    (203) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (205) expresion_condicional -> . numero operador_condicional IDENTIFICADOR

    NEW             shift and go to state 165
    NULL            shift and go to state 169
    REF             shift and go to state 170
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    IDENTIFICADOR   shift and go to state 160
    CONSOLE_READLINE shift and go to state 61
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    valor                          shift and go to state 161
    expresion                      shift and go to state 162
    salida_tres                    shift and go to state 163
    index                          shift and go to state 164
    asignacionPila                 shift and go to state 166
    asignacionQueue                shift and go to state 167
    asignacionList                 shift and go to state 168
    numero                         shift and go to state 51
    expresion_operacion_aritmetica shift and go to state 27
    expresion_condicional          shift and go to state 28

state 98

    (200) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico . numero
    (201) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 171
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    numero                         shift and go to state 172

state 99

    (203) expresion_condicional -> IDENTIFICADOR operador_condicional . IDENTIFICADOR
    (204) expresion_condicional -> IDENTIFICADOR operador_condicional . numero
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 173
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    numero                         shift and go to state 174

state 100

    (193) stack_push -> IDENTIFICADOR PUNTO . PUSH PAR_IZQ valor PAR_DER
    (194) stack_push -> IDENTIFICADOR PUNTO . PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (195) stack_pop -> IDENTIFICADOR PUNTO . POP PAR_IZQ PAR_DER

    PUSH            shift and go to state 175
    POP             shift and go to state 176


state 101

    (89) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . BOOL
    (90) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . expresion_condicional
    (91) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . INT
    (202) expresion_condicional -> . numero operador_condicional numero
    (203) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (205) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BOOL            shift and go to state 178
    IDENTIFICADOR   shift and go to state 177
    INT             shift and go to state 180
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74

    expresion_condicional          shift and go to state 179
    numero                         shift and go to state 181

state 102

    (93) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . numero
    (94) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (198) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (200) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 182
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    numero                         shift and go to state 183
    expresion_operacion_aritmetica shift and go to state 184

state 103

    (96) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . valor
    (97) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . expresion
    (98) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . asignacionPila
    (99) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . asignacionQueue
    (100) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . asignacionList
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (196) expresion -> . expresion_operacion_aritmetica
    (197) expresion -> . expresion_condicional
    (76) asignacionPila -> . NEW STACK tipoLista PAR_IZQ PAR_DER
    (77) asignacionQueue -> . NEW QUEUE tipoLista PAR_IZQ PAR_DER
    (78) asignacionList -> . NEW LIST tipoLista PAR_IZQ PAR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (198) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (200) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (202) expresion_condicional -> . numero operador_condicional numero
    (203) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (205) expresion_condicional -> . numero operador_condicional IDENTIFICADOR

    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    IDENTIFICADOR   shift and go to state 185
    NEW             shift and go to state 191
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    valor                          shift and go to state 186
    expresion                      shift and go to state 187
    asignacionPila                 shift and go to state 188
    asignacionQueue                shift and go to state 189
    asignacionList                 shift and go to state 190
    numero                         shift and go to state 51
    expresion_operacion_aritmetica shift and go to state 27
    expresion_condicional          shift and go to state 28

state 104

    (101) asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift . IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift . INT

    IDENTIFICADOR   shift and go to state 192
    INT             shift and go to state 193


state 105

    (81) index -> IDENTIFICADOR COR_IZQ . INT COR_DER
    (82) index -> IDENTIFICADOR COR_IZQ . IDENTIFICADOR COR_DER

    INT             shift and go to state 195
    IDENTIFICADOR   shift and go to state 194


state 106

    (44) operador_aritmentico -> SUMA .

    IDENTIFICADOR   reduce using rule 44 (operador_aritmentico -> SUMA .)
    FLOAT           reduce using rule 44 (operador_aritmentico -> SUMA .)
    DOUBLE          reduce using rule 44 (operador_aritmentico -> SUMA .)
    INT             reduce using rule 44 (operador_aritmentico -> SUMA .)


state 107

    (45) operador_aritmentico -> RESTA .

    IDENTIFICADOR   reduce using rule 45 (operador_aritmentico -> RESTA .)
    FLOAT           reduce using rule 45 (operador_aritmentico -> RESTA .)
    DOUBLE          reduce using rule 45 (operador_aritmentico -> RESTA .)
    INT             reduce using rule 45 (operador_aritmentico -> RESTA .)


state 108

    (46) operador_aritmentico -> MULTIPLICACION .

    IDENTIFICADOR   reduce using rule 46 (operador_aritmentico -> MULTIPLICACION .)
    FLOAT           reduce using rule 46 (operador_aritmentico -> MULTIPLICACION .)
    DOUBLE          reduce using rule 46 (operador_aritmentico -> MULTIPLICACION .)
    INT             reduce using rule 46 (operador_aritmentico -> MULTIPLICACION .)


state 109

    (47) operador_aritmentico -> DIVISION .

    IDENTIFICADOR   reduce using rule 47 (operador_aritmentico -> DIVISION .)
    FLOAT           reduce using rule 47 (operador_aritmentico -> DIVISION .)
    DOUBLE          reduce using rule 47 (operador_aritmentico -> DIVISION .)
    INT             reduce using rule 47 (operador_aritmentico -> DIVISION .)


state 110

    (48) operador_aritmentico -> MODULO .

    IDENTIFICADOR   reduce using rule 48 (operador_aritmentico -> MODULO .)
    FLOAT           reduce using rule 48 (operador_aritmentico -> MODULO .)
    DOUBLE          reduce using rule 48 (operador_aritmentico -> MODULO .)
    INT             reduce using rule 48 (operador_aritmentico -> MODULO .)


state 111

    (49) operador_condicional -> IGUAL_IGUAL .

    IDENTIFICADOR   reduce using rule 49 (operador_condicional -> IGUAL_IGUAL .)
    FLOAT           reduce using rule 49 (operador_condicional -> IGUAL_IGUAL .)
    DOUBLE          reduce using rule 49 (operador_condicional -> IGUAL_IGUAL .)
    INT             reduce using rule 49 (operador_condicional -> IGUAL_IGUAL .)


state 112

    (50) operador_condicional -> NO_IGUAL .

    IDENTIFICADOR   reduce using rule 50 (operador_condicional -> NO_IGUAL .)
    FLOAT           reduce using rule 50 (operador_condicional -> NO_IGUAL .)
    DOUBLE          reduce using rule 50 (operador_condicional -> NO_IGUAL .)
    INT             reduce using rule 50 (operador_condicional -> NO_IGUAL .)


state 113

    (51) operador_condicional -> MENOR_QUE .

    IDENTIFICADOR   reduce using rule 51 (operador_condicional -> MENOR_QUE .)
    FLOAT           reduce using rule 51 (operador_condicional -> MENOR_QUE .)
    DOUBLE          reduce using rule 51 (operador_condicional -> MENOR_QUE .)
    INT             reduce using rule 51 (operador_condicional -> MENOR_QUE .)


state 114

    (52) operador_condicional -> MENOR_O_IGUAL_QUE .

    IDENTIFICADOR   reduce using rule 52 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 52 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 52 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    INT             reduce using rule 52 (operador_condicional -> MENOR_O_IGUAL_QUE .)


state 115

    (53) operador_condicional -> MAYOR_QUE .

    IDENTIFICADOR   reduce using rule 53 (operador_condicional -> MAYOR_QUE .)
    FLOAT           reduce using rule 53 (operador_condicional -> MAYOR_QUE .)
    DOUBLE          reduce using rule 53 (operador_condicional -> MAYOR_QUE .)
    INT             reduce using rule 53 (operador_condicional -> MAYOR_QUE .)


state 116

    (54) operador_condicional -> MAYOR_O_IGUAL_QUE .

    IDENTIFICADOR   reduce using rule 54 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 54 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 54 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    INT             reduce using rule 54 (operador_condicional -> MAYOR_O_IGUAL_QUE .)


state 117

    (108) operadoresCompuestosLogic -> AND_EQUAL .

    BOOL            reduce using rule 108 (operadoresCompuestosLogic -> AND_EQUAL .)
    IDENTIFICADOR   reduce using rule 108 (operadoresCompuestosLogic -> AND_EQUAL .)
    INT             reduce using rule 108 (operadoresCompuestosLogic -> AND_EQUAL .)
    FLOAT           reduce using rule 108 (operadoresCompuestosLogic -> AND_EQUAL .)
    DOUBLE          reduce using rule 108 (operadoresCompuestosLogic -> AND_EQUAL .)


state 118

    (109) operadoresCompuestosLogic -> OR_EQUAL .

    BOOL            reduce using rule 109 (operadoresCompuestosLogic -> OR_EQUAL .)
    IDENTIFICADOR   reduce using rule 109 (operadoresCompuestosLogic -> OR_EQUAL .)
    INT             reduce using rule 109 (operadoresCompuestosLogic -> OR_EQUAL .)
    FLOAT           reduce using rule 109 (operadoresCompuestosLogic -> OR_EQUAL .)
    DOUBLE          reduce using rule 109 (operadoresCompuestosLogic -> OR_EQUAL .)


state 119

    (110) operadoresCompuestosLogic -> EXC_OREQUAL .

    BOOL            reduce using rule 110 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    IDENTIFICADOR   reduce using rule 110 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    INT             reduce using rule 110 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    FLOAT           reduce using rule 110 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    DOUBLE          reduce using rule 110 (operadoresCompuestosLogic -> EXC_OREQUAL .)


state 120

    (103) operadoresCompuestosNumber -> AUMENTADO .

    IDENTIFICADOR   reduce using rule 103 (operadoresCompuestosNumber -> AUMENTADO .)
    FLOAT           reduce using rule 103 (operadoresCompuestosNumber -> AUMENTADO .)
    DOUBLE          reduce using rule 103 (operadoresCompuestosNumber -> AUMENTADO .)
    INT             reduce using rule 103 (operadoresCompuestosNumber -> AUMENTADO .)


state 121

    (104) operadoresCompuestosNumber -> DECREMENTADO .

    IDENTIFICADOR   reduce using rule 104 (operadoresCompuestosNumber -> DECREMENTADO .)
    FLOAT           reduce using rule 104 (operadoresCompuestosNumber -> DECREMENTADO .)
    DOUBLE          reduce using rule 104 (operadoresCompuestosNumber -> DECREMENTADO .)
    INT             reduce using rule 104 (operadoresCompuestosNumber -> DECREMENTADO .)


state 122

    (105) operadoresCompuestosNumber -> MULTIPLICADO_POR .

    IDENTIFICADOR   reduce using rule 105 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    FLOAT           reduce using rule 105 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    DOUBLE          reduce using rule 105 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    INT             reduce using rule 105 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)


state 123

    (106) operadoresCompuestosNumber -> DIVIDIDO_POR .

    IDENTIFICADOR   reduce using rule 106 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    FLOAT           reduce using rule 106 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    DOUBLE          reduce using rule 106 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    INT             reduce using rule 106 (operadoresCompuestosNumber -> DIVIDIDO_POR .)


state 124

    (107) operadoresCompuestosNumber -> MODULO_DE .

    IDENTIFICADOR   reduce using rule 107 (operadoresCompuestosNumber -> MODULO_DE .)
    FLOAT           reduce using rule 107 (operadoresCompuestosNumber -> MODULO_DE .)
    DOUBLE          reduce using rule 107 (operadoresCompuestosNumber -> MODULO_DE .)
    INT             reduce using rule 107 (operadoresCompuestosNumber -> MODULO_DE .)


state 125

    (111) operadoresCompuestosShift -> LEFTSHIFT_EQUAL .

    IDENTIFICADOR   reduce using rule 111 (operadoresCompuestosShift -> LEFTSHIFT_EQUAL .)
    INT             reduce using rule 111 (operadoresCompuestosShift -> LEFTSHIFT_EQUAL .)


state 126

    (112) operadoresCompuestosShift -> RIGHTSHIFT_EQUAL .

    IDENTIFICADOR   reduce using rule 112 (operadoresCompuestosShift -> RIGHTSHIFT_EQUAL .)
    INT             reduce using rule 112 (operadoresCompuestosShift -> RIGHTSHIFT_EQUAL .)


state 127

    (127) declaracionAsignacion -> declaracionEstructuraD IGUAL . NULL

    NULL            shift and go to state 196


state 128

    (121) declaracionAsignacion -> declaracionClase IGUAL . NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> declaracionClase IGUAL . NULL
    (123) declaracionAsignacion -> declaracionClase IGUAL . IDENTIFICADOR

    NEW             shift and go to state 197
    NULL            shift and go to state 199
    IDENTIFICADOR   shift and go to state 198


state 129

    (124) declaracionAsignacion -> declaracionNull IGUAL . valor
    (125) declaracionAsignacion -> declaracionNull IGUAL . expresion
    (126) declaracionAsignacion -> declaracionNull IGUAL . NULL
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (196) expresion -> . expresion_operacion_aritmetica
    (197) expresion -> . expresion_condicional
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (198) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (200) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (202) expresion_condicional -> . numero operador_condicional numero
    (203) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (205) expresion_condicional -> . numero operador_condicional IDENTIFICADOR

    NULL            shift and go to state 202
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    IDENTIFICADOR   shift and go to state 185
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    valor                          shift and go to state 200
    expresion                      shift and go to state 201
    numero                         shift and go to state 51
    expresion_operacion_aritmetica shift and go to state 27
    expresion_condicional          shift and go to state 28

state 130

    (226) lambda_exp -> lambdaArg LAMBDA . lambdaCuerpo
    (235) lambdaCuerpo -> . expresion
    (236) lambdaCuerpo -> . salida_uno
    (237) lambdaCuerpo -> . salida_dos
    (196) expresion -> . expresion_operacion_aritmetica
    (197) expresion -> . expresion_condicional
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (198) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (200) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (202) expresion_condicional -> . numero operador_condicional numero
    (203) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (205) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    CONSOLE_WRITELINE shift and go to state 60
    IDENTIFICADOR   shift and go to state 207
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    lambdaCuerpo                   shift and go to state 203
    expresion                      shift and go to state 204
    salida_uno                     shift and go to state 205
    salida_dos                     shift and go to state 206
    expresion_operacion_aritmetica shift and go to state 27
    expresion_condicional          shift and go to state 28
    numero                         shift and go to state 208

state 131

    (79) asignacionIndex -> index IGUAL . index
    (80) asignacionIndex -> index IGUAL . valor
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 211
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    index                          shift and go to state 209
    valor                          shift and go to state 210
    numero                         shift and go to state 156

state 132

    (227) lambdaArg -> PAR_IZQ PAR_DER .

    LAMBDA          reduce using rule 227 (lambdaArg -> PAR_IZQ PAR_DER .)


state 133

    (228) lambdaArg -> PAR_IZQ lambdaParametrosUno . PAR_DER

    PAR_DER         shift and go to state 212


state 134

    (229) lambdaArg -> PAR_IZQ lambdaParametrosDos . PAR_DER

    PAR_DER         shift and go to state 213


state 135

    (231) lambdaParametrosUno -> valor_tipo . IDENTIFICADOR
    (232) lambdaParametrosUno -> valor_tipo . IDENTIFICADOR COMA lambdaParametrosUno

    IDENTIFICADOR   shift and go to state 214


state 136

    (233) lambdaParametrosDos -> IDENTIFICADOR .
    (234) lambdaParametrosDos -> IDENTIFICADOR . COMA lambdaParametrosDos

    PAR_DER         reduce using rule 233 (lambdaParametrosDos -> IDENTIFICADOR .)
    COMA            shift and go to state 215


state 137

    (128) declaracionAsignacion -> REF valor_tipo . asignacionRef
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index

    IDENTIFICADOR   shift and go to state 217

    asignacionRef                  shift and go to state 216

state 138

    (129) declaracionAsignacion -> REF IDENTIFICADOR . asignacionRef
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index

    IDENTIFICADOR   shift and go to state 217

    asignacionRef                  shift and go to state 218

state 139

    (130) declaracionAsignacion -> REF declaracionEstructuraD . asignacionRef
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index

    IDENTIFICADOR   shift and go to state 217

    asignacionRef                  shift and go to state 219

state 140

    (134) declaracionList -> LIST . tipoLista IDENTIFICADOR
    (189) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 147

    tipoLista                      shift and go to state 220

state 141

    (136) declaracionPila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    MENOR_QUE       shift and go to state 221


state 142

    (198) expresion_operacion_aritmetica -> numero operador_aritmentico . numero
    (199) expresion_operacion_aritmetica -> numero operador_aritmentico . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 223
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    numero                         shift and go to state 222

state 143

    (202) expresion_condicional -> numero operador_condicional . numero
    (205) expresion_condicional -> numero operador_condicional . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 225
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    numero                         shift and go to state 224

state 144

    (155) switch_case -> SWITCH PAR_IZQ . valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    IDENTIFICADOR   shift and go to state 157
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    valor                          shift and go to state 226
    numero                         shift and go to state 156

state 145

    (168) for -> FOR PAR_IZQ . forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (177) forInicializador -> . tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador
    (178) forInicializador -> . IDENTIFICADOR IGUAL valorForInicializador
    (179) tipoDatoForInicializador -> . FLOAT_TYPE
    (180) tipoDatoForInicializador -> . DOUBLE_TYPE
    (181) tipoDatoForInicializador -> . INT_TYPE

    IDENTIFICADOR   shift and go to state 229
    FLOAT_TYPE      shift and go to state 230
    DOUBLE_TYPE     shift and go to state 231
    INT_TYPE        shift and go to state 232

    forInicializador               shift and go to state 227
    tipoDatoForInicializador       shift and go to state 228

state 146

    (188) lista -> LIST tipoLista . IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (134) declaracionList -> LIST tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 233


state 147

    (189) tipoLista -> MENOR_QUE . valor_tipo_inicializador MAYOR_QUE
    (28) valor_tipo_inicializador -> . FLOAT_TYPE
    (29) valor_tipo_inicializador -> . DOUBLE_TYPE
    (30) valor_tipo_inicializador -> . STRING_TYPE
    (31) valor_tipo_inicializador -> . INT_TYPE
    (32) valor_tipo_inicializador -> . BOOL_TYPE
    (33) valor_tipo_inicializador -> . CHAR_TYPE
    (34) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 235
    DOUBLE_TYPE     shift and go to state 236
    STRING_TYPE     shift and go to state 237
    INT_TYPE        shift and go to state 238
    BOOL_TYPE       shift and go to state 239
    CHAR_TYPE       shift and go to state 240
    IDENTIFICADOR   shift and go to state 241

    valor_tipo_inicializador       shift and go to state 234

state 148

    (190) pila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (136) declaracionPila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (28) valor_tipo_inicializador -> . FLOAT_TYPE
    (29) valor_tipo_inicializador -> . DOUBLE_TYPE
    (30) valor_tipo_inicializador -> . STRING_TYPE
    (31) valor_tipo_inicializador -> . INT_TYPE
    (32) valor_tipo_inicializador -> . BOOL_TYPE
    (33) valor_tipo_inicializador -> . CHAR_TYPE
    (34) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 235
    DOUBLE_TYPE     shift and go to state 236
    STRING_TYPE     shift and go to state 237
    INT_TYPE        shift and go to state 238
    BOOL_TYPE       shift and go to state 239
    CHAR_TYPE       shift and go to state 240
    IDENTIFICADOR   shift and go to state 241

    valor_tipo_inicializador       shift and go to state 242

state 149

    (209) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . STRING PAR_DER
    (210) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . operacion_string PAR_DER
    (211) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . IDENTIFICADOR PAR_DER
    (212) salida_dos -> CONSOLE_WRITELINE PAR_IZQ . C_CADENA_INTERPOLADA STRING PAR_DER
    (55) operacion_string -> . STRING SUMA STRING
    (56) operacion_string -> . STRING SUMA IDENTIFICADOR
    (57) operacion_string -> . IDENTIFICADOR SUMA STRING
    (58) operacion_string -> . IDENTIFICADOR SUMA IDENTIFICADOR

    STRING          shift and go to state 243
    IDENTIFICADOR   shift and go to state 245
    C_CADENA_INTERPOLADA shift and go to state 246

    operacion_string               shift and go to state 244

state 150

    (213) salida_tres -> CONSOLE_READLINE PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 247


state 151

    (216) funcion_tipo_uno -> modificador_acceso VOID . IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (217) funcion_tipo_tres -> modificador_acceso VOID . IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    IDENTIFICADOR   shift and go to state 248


state 152

    (143) while_normal -> WHILE PAR_IZQ . expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (202) expresion_condicional -> . numero operador_condicional numero
    (203) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (205) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 250
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    expresion_condicional          shift and go to state 249
    numero                         shift and go to state 181

state 153

    (144) while_do -> DO LLAVE_IZQ . body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (145) body_while -> . asignacion END_OF_LINE
    (146) body_while -> . declaracion END_OF_LINE
    (147) body_while -> . salida_entrada END_OF_LINE
    (148) body_while -> . BREAK END_OF_LINE
    (149) body_while -> . CONTINUE END_OF_LINE
    (150) body_while -> . asignacion END_OF_LINE body_while
    (151) body_while -> . declaracion END_OF_LINE body_while
    (152) body_while -> . salida_entrada END_OF_LINE body_while
    (153) body_while -> . BREAK END_OF_LINE body_while
    (154) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    BREAK           shift and go to state 255
    CONTINUE        shift and go to state 256
    IDENTIFICADOR   shift and go to state 257
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    body_while                     shift and go to state 251
    asignacion                     shift and go to state 252
    declaracion                    shift and go to state 253
    salida_entrada                 shift and go to state 254
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 154

    (135) declaracionQueue -> QUEUE tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 258


state 155

    (137) comparacion -> valor operador_realacional valor .

    $end            reduce using rule 137 (comparacion -> valor operador_realacional valor .)
    LLAVE_DER       reduce using rule 137 (comparacion -> valor operador_realacional valor .)
    END_OF_LINE     reduce using rule 137 (comparacion -> valor operador_realacional valor .)


state 156

    (13) valor -> numero .

    $end            reduce using rule 13 (valor -> numero .)
    LLAVE_DER       reduce using rule 13 (valor -> numero .)
    END_OF_LINE     reduce using rule 13 (valor -> numero .)
    PAR_DER         reduce using rule 13 (valor -> numero .)
    DOS_PUNTOS      reduce using rule 13 (valor -> numero .)
    IGUAL_IGUAL     reduce using rule 13 (valor -> numero .)
    NO_IGUAL        reduce using rule 13 (valor -> numero .)
    MENOR_QUE       reduce using rule 13 (valor -> numero .)
    MENOR_O_IGUAL_QUE reduce using rule 13 (valor -> numero .)
    MAYOR_QUE       reduce using rule 13 (valor -> numero .)
    MAYOR_O_IGUAL_QUE reduce using rule 13 (valor -> numero .)


state 157

    (16) valor -> IDENTIFICADOR .

    $end            reduce using rule 16 (valor -> IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 16 (valor -> IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 16 (valor -> IDENTIFICADOR .)
    PAR_DER         reduce using rule 16 (valor -> IDENTIFICADOR .)
    DOS_PUNTOS      reduce using rule 16 (valor -> IDENTIFICADOR .)


state 158

    (67) asignacionSimple -> IDENTIFICADOR IGUAL . valor
    (68) asignacionSimple -> IDENTIFICADOR IGUAL . expresion
    (69) asignacionSimple -> IDENTIFICADOR IGUAL . salida_tres
    (70) asignacionSimple -> IDENTIFICADOR IGUAL . index
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (196) expresion -> . expresion_operacion_aritmetica
    (197) expresion -> . expresion_condicional
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (198) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (200) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (202) expresion_condicional -> . numero operador_condicional numero
    (203) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (205) expresion_condicional -> . numero operador_condicional IDENTIFICADOR

    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    IDENTIFICADOR   shift and go to state 160
    CONSOLE_READLINE shift and go to state 61
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    valor                          shift and go to state 161
    expresion                      shift and go to state 162
    salida_tres                    shift and go to state 163
    index                          shift and go to state 164
    numero                         shift and go to state 51
    expresion_operacion_aritmetica shift and go to state 27
    expresion_condicional          shift and go to state 28

state 159

    (118) declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .

    IGUAL           reduce using rule 118 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 118 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)
    COMA            reduce using rule 118 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)
    PAR_DER         reduce using rule 118 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)


state 160

    (16) valor -> IDENTIFICADOR .
    (81) index -> IDENTIFICADOR . COR_IZQ INT COR_DER
    (82) index -> IDENTIFICADOR . COR_IZQ IDENTIFICADOR COR_DER
    (200) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (203) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    END_OF_LINE     reduce using rule 16 (valor -> IDENTIFICADOR .)
    COMA            reduce using rule 16 (valor -> IDENTIFICADOR .)
    PAR_DER         reduce using rule 16 (valor -> IDENTIFICADOR .)
    COR_IZQ         shift and go to state 105
    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    IGUAL_IGUAL     shift and go to state 111
    NO_IGUAL        shift and go to state 112
    MENOR_QUE       shift and go to state 113
    MENOR_O_IGUAL_QUE shift and go to state 114
    MAYOR_QUE       shift and go to state 115
    MAYOR_O_IGUAL_QUE shift and go to state 116

    operador_aritmentico           shift and go to state 98
    operador_condicional           shift and go to state 99

state 161

    (67) asignacionSimple -> IDENTIFICADOR IGUAL valor .

    END_OF_LINE     reduce using rule 67 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)
    COMA            reduce using rule 67 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)
    PAR_DER         reduce using rule 67 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)


state 162

    (68) asignacionSimple -> IDENTIFICADOR IGUAL expresion .

    END_OF_LINE     reduce using rule 68 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)
    COMA            reduce using rule 68 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)
    PAR_DER         reduce using rule 68 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)


state 163

    (69) asignacionSimple -> IDENTIFICADOR IGUAL salida_tres .

    END_OF_LINE     reduce using rule 69 (asignacionSimple -> IDENTIFICADOR IGUAL salida_tres .)
    COMA            reduce using rule 69 (asignacionSimple -> IDENTIFICADOR IGUAL salida_tres .)
    PAR_DER         reduce using rule 69 (asignacionSimple -> IDENTIFICADOR IGUAL salida_tres .)


state 164

    (70) asignacionSimple -> IDENTIFICADOR IGUAL index .

    END_OF_LINE     reduce using rule 70 (asignacionSimple -> IDENTIFICADOR IGUAL index .)
    COMA            reduce using rule 70 (asignacionSimple -> IDENTIFICADOR IGUAL index .)
    PAR_DER         reduce using rule 70 (asignacionSimple -> IDENTIFICADOR IGUAL index .)


state 165

    (72) asignacionClase -> IDENTIFICADOR IGUAL NEW . IDENTIFICADOR PAR_IZQ PAR_DER
    (76) asignacionPila -> NEW . STACK tipoLista PAR_IZQ PAR_DER
    (77) asignacionQueue -> NEW . QUEUE tipoLista PAR_IZQ PAR_DER
    (78) asignacionList -> NEW . LIST tipoLista PAR_IZQ PAR_DER

    IDENTIFICADOR   shift and go to state 259
    STACK           shift and go to state 260
    QUEUE           shift and go to state 261
    LIST            shift and go to state 262


state 166

    (73) asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionPila .

    END_OF_LINE     reduce using rule 73 (asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionPila .)


state 167

    (74) asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionQueue .

    END_OF_LINE     reduce using rule 74 (asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionQueue .)


state 168

    (75) asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionList .

    END_OF_LINE     reduce using rule 75 (asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionList .)


state 169

    (71) asignacionNull -> IDENTIFICADOR IGUAL NULL .

    END_OF_LINE     reduce using rule 71 (asignacionNull -> IDENTIFICADOR IGUAL NULL .)


state 170

    (83) asignacionRef -> IDENTIFICADOR IGUAL REF . IDENTIFICADOR
    (84) asignacionRef -> IDENTIFICADOR IGUAL REF . index
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER

    IDENTIFICADOR   shift and go to state 263

    index                          shift and go to state 264

state 171

    (201) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .

    END_OF_LINE     reduce using rule 201 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    COMA            reduce using rule 201 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    PAR_DER         reduce using rule 201 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    $end            reduce using rule 201 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 201 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)


state 172

    (200) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .

    END_OF_LINE     reduce using rule 200 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    COMA            reduce using rule 200 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    PAR_DER         reduce using rule 200 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    $end            reduce using rule 200 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    LLAVE_DER       reduce using rule 200 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)


state 173

    (203) expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .

    END_OF_LINE     reduce using rule 203 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    COMA            reduce using rule 203 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    PAR_DER         reduce using rule 203 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    $end            reduce using rule 203 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 203 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)


state 174

    (204) expresion_condicional -> IDENTIFICADOR operador_condicional numero .

    END_OF_LINE     reduce using rule 204 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    COMA            reduce using rule 204 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    PAR_DER         reduce using rule 204 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    $end            reduce using rule 204 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    LLAVE_DER       reduce using rule 204 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)


state 175

    (193) stack_push -> IDENTIFICADOR PUNTO PUSH . PAR_IZQ valor PAR_DER
    (194) stack_push -> IDENTIFICADOR PUNTO PUSH . PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER

    PAR_IZQ         shift and go to state 265


state 176

    (195) stack_pop -> IDENTIFICADOR PUNTO POP . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 266


state 177

    (91) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR .
    (203) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    END_OF_LINE     reduce using rule 91 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR .)
    IGUAL_IGUAL     shift and go to state 111
    NO_IGUAL        shift and go to state 112
    MENOR_QUE       shift and go to state 113
    MENOR_O_IGUAL_QUE shift and go to state 114
    MAYOR_QUE       shift and go to state 115
    MAYOR_O_IGUAL_QUE shift and go to state 116

    operador_condicional           shift and go to state 99

state 178

    (89) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL .

    END_OF_LINE     reduce using rule 89 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL .)


state 179

    (90) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional .

    END_OF_LINE     reduce using rule 90 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional .)


state 180

    (92) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic INT .
    (19) numero -> INT .

    END_OF_LINE     reduce using rule 92 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic INT .)
    IGUAL_IGUAL     reduce using rule 19 (numero -> INT .)
    NO_IGUAL        reduce using rule 19 (numero -> INT .)
    MENOR_QUE       reduce using rule 19 (numero -> INT .)
    MENOR_O_IGUAL_QUE reduce using rule 19 (numero -> INT .)
    MAYOR_QUE       reduce using rule 19 (numero -> INT .)
    MAYOR_O_IGUAL_QUE reduce using rule 19 (numero -> INT .)


state 181

    (202) expresion_condicional -> numero . operador_condicional numero
    (205) expresion_condicional -> numero . operador_condicional IDENTIFICADOR
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 111
    NO_IGUAL        shift and go to state 112
    MENOR_QUE       shift and go to state 113
    MENOR_O_IGUAL_QUE shift and go to state 114
    MAYOR_QUE       shift and go to state 115
    MAYOR_O_IGUAL_QUE shift and go to state 116

    operador_condicional           shift and go to state 143

state 182

    (95) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR .
    (200) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO

    END_OF_LINE     reduce using rule 95 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR .)
    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110

    operador_aritmentico           shift and go to state 98

state 183

    (93) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero .
    (198) expresion_operacion_aritmetica -> numero . operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> numero . operador_aritmentico IDENTIFICADOR
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO

    END_OF_LINE     reduce using rule 93 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero .)
    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110

    operador_aritmentico           shift and go to state 142

state 184

    (94) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica .

    END_OF_LINE     reduce using rule 94 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica .)


state 185

    (16) valor -> IDENTIFICADOR .
    (200) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (203) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    END_OF_LINE     reduce using rule 16 (valor -> IDENTIFICADOR .)
    COMA            reduce using rule 16 (valor -> IDENTIFICADOR .)
    PAR_DER         reduce using rule 16 (valor -> IDENTIFICADOR .)
    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    IGUAL_IGUAL     shift and go to state 111
    NO_IGUAL        shift and go to state 112
    MENOR_QUE       shift and go to state 113
    MENOR_O_IGUAL_QUE shift and go to state 114
    MAYOR_QUE       shift and go to state 115
    MAYOR_O_IGUAL_QUE shift and go to state 116

    operador_aritmentico           shift and go to state 98
    operador_condicional           shift and go to state 99

state 186

    (96) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL valor .

    END_OF_LINE     reduce using rule 96 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL valor .)


state 187

    (97) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL expresion .

    END_OF_LINE     reduce using rule 97 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL expresion .)


state 188

    (98) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionPila .

    END_OF_LINE     reduce using rule 98 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionPila .)


state 189

    (99) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionQueue .

    END_OF_LINE     reduce using rule 99 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionQueue .)


state 190

    (100) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionList .

    END_OF_LINE     reduce using rule 100 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionList .)


state 191

    (76) asignacionPila -> NEW . STACK tipoLista PAR_IZQ PAR_DER
    (77) asignacionQueue -> NEW . QUEUE tipoLista PAR_IZQ PAR_DER
    (78) asignacionList -> NEW . LIST tipoLista PAR_IZQ PAR_DER

    STACK           shift and go to state 260
    QUEUE           shift and go to state 261
    LIST            shift and go to state 262


state 192

    (101) asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR .

    END_OF_LINE     reduce using rule 101 (asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR .)


state 193

    (102) asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift INT .

    END_OF_LINE     reduce using rule 102 (asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift INT .)


state 194

    (82) index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR . COR_DER

    COR_DER         shift and go to state 267


state 195

    (81) index -> IDENTIFICADOR COR_IZQ INT . COR_DER

    COR_DER         shift and go to state 268


state 196

    (127) declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .

    END_OF_LINE     reduce using rule 127 (declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .)
    COMA            reduce using rule 127 (declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .)
    PAR_DER         reduce using rule 127 (declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .)


state 197

    (121) declaracionAsignacion -> declaracionClase IGUAL NEW . IDENTIFICADOR PAR_IZQ PAR_DER

    IDENTIFICADOR   shift and go to state 269


state 198

    (123) declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .

    END_OF_LINE     reduce using rule 123 (declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .)
    COMA            reduce using rule 123 (declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .)
    PAR_DER         reduce using rule 123 (declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .)


state 199

    (122) declaracionAsignacion -> declaracionClase IGUAL NULL .

    END_OF_LINE     reduce using rule 122 (declaracionAsignacion -> declaracionClase IGUAL NULL .)
    COMA            reduce using rule 122 (declaracionAsignacion -> declaracionClase IGUAL NULL .)
    PAR_DER         reduce using rule 122 (declaracionAsignacion -> declaracionClase IGUAL NULL .)


state 200

    (124) declaracionAsignacion -> declaracionNull IGUAL valor .

    END_OF_LINE     reduce using rule 124 (declaracionAsignacion -> declaracionNull IGUAL valor .)
    COMA            reduce using rule 124 (declaracionAsignacion -> declaracionNull IGUAL valor .)
    PAR_DER         reduce using rule 124 (declaracionAsignacion -> declaracionNull IGUAL valor .)


state 201

    (125) declaracionAsignacion -> declaracionNull IGUAL expresion .

    END_OF_LINE     reduce using rule 125 (declaracionAsignacion -> declaracionNull IGUAL expresion .)
    COMA            reduce using rule 125 (declaracionAsignacion -> declaracionNull IGUAL expresion .)
    PAR_DER         reduce using rule 125 (declaracionAsignacion -> declaracionNull IGUAL expresion .)


state 202

    (126) declaracionAsignacion -> declaracionNull IGUAL NULL .

    END_OF_LINE     reduce using rule 126 (declaracionAsignacion -> declaracionNull IGUAL NULL .)
    COMA            reduce using rule 126 (declaracionAsignacion -> declaracionNull IGUAL NULL .)
    PAR_DER         reduce using rule 126 (declaracionAsignacion -> declaracionNull IGUAL NULL .)


state 203

    (226) lambda_exp -> lambdaArg LAMBDA lambdaCuerpo .

    $end            reduce using rule 226 (lambda_exp -> lambdaArg LAMBDA lambdaCuerpo .)
    LLAVE_DER       reduce using rule 226 (lambda_exp -> lambdaArg LAMBDA lambdaCuerpo .)


state 204

    (235) lambdaCuerpo -> expresion .

    $end            reduce using rule 235 (lambdaCuerpo -> expresion .)
    LLAVE_DER       reduce using rule 235 (lambdaCuerpo -> expresion .)


state 205

    (236) lambdaCuerpo -> salida_uno .

    $end            reduce using rule 236 (lambdaCuerpo -> salida_uno .)
    LLAVE_DER       reduce using rule 236 (lambdaCuerpo -> salida_uno .)


state 206

    (237) lambdaCuerpo -> salida_dos .

    $end            reduce using rule 237 (lambdaCuerpo -> salida_dos .)
    LLAVE_DER       reduce using rule 237 (lambdaCuerpo -> salida_dos .)


state 207

    (200) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (203) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    IGUAL_IGUAL     shift and go to state 111
    NO_IGUAL        shift and go to state 112
    MENOR_QUE       shift and go to state 113
    MENOR_O_IGUAL_QUE shift and go to state 114
    MAYOR_QUE       shift and go to state 115
    MAYOR_O_IGUAL_QUE shift and go to state 116

    operador_aritmentico           shift and go to state 98
    operador_condicional           shift and go to state 99

state 208

    (198) expresion_operacion_aritmetica -> numero . operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> numero . operador_aritmentico IDENTIFICADOR
    (202) expresion_condicional -> numero . operador_condicional numero
    (205) expresion_condicional -> numero . operador_condicional IDENTIFICADOR
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    IGUAL_IGUAL     shift and go to state 111
    NO_IGUAL        shift and go to state 112
    MENOR_QUE       shift and go to state 113
    MENOR_O_IGUAL_QUE shift and go to state 114
    MAYOR_QUE       shift and go to state 115
    MAYOR_O_IGUAL_QUE shift and go to state 116

    operador_aritmentico           shift and go to state 142
    operador_condicional           shift and go to state 143

state 209

    (79) asignacionIndex -> index IGUAL index .

    END_OF_LINE     reduce using rule 79 (asignacionIndex -> index IGUAL index .)


state 210

    (80) asignacionIndex -> index IGUAL valor .

    END_OF_LINE     reduce using rule 80 (asignacionIndex -> index IGUAL valor .)


state 211

    (81) index -> IDENTIFICADOR . COR_IZQ INT COR_DER
    (82) index -> IDENTIFICADOR . COR_IZQ IDENTIFICADOR COR_DER
    (16) valor -> IDENTIFICADOR .

    COR_IZQ         shift and go to state 105
    END_OF_LINE     reduce using rule 16 (valor -> IDENTIFICADOR .)


state 212

    (228) lambdaArg -> PAR_IZQ lambdaParametrosUno PAR_DER .

    LAMBDA          reduce using rule 228 (lambdaArg -> PAR_IZQ lambdaParametrosUno PAR_DER .)


state 213

    (229) lambdaArg -> PAR_IZQ lambdaParametrosDos PAR_DER .

    LAMBDA          reduce using rule 229 (lambdaArg -> PAR_IZQ lambdaParametrosDos PAR_DER .)


state 214

    (231) lambdaParametrosUno -> valor_tipo IDENTIFICADOR .
    (232) lambdaParametrosUno -> valor_tipo IDENTIFICADOR . COMA lambdaParametrosUno

    PAR_DER         reduce using rule 231 (lambdaParametrosUno -> valor_tipo IDENTIFICADOR .)
    COMA            shift and go to state 270


state 215

    (234) lambdaParametrosDos -> IDENTIFICADOR COMA . lambdaParametrosDos
    (233) lambdaParametrosDos -> . IDENTIFICADOR
    (234) lambdaParametrosDos -> . IDENTIFICADOR COMA lambdaParametrosDos

    IDENTIFICADOR   shift and go to state 136

    lambdaParametrosDos            shift and go to state 271

state 216

    (128) declaracionAsignacion -> REF valor_tipo asignacionRef .

    END_OF_LINE     reduce using rule 128 (declaracionAsignacion -> REF valor_tipo asignacionRef .)
    COMA            reduce using rule 128 (declaracionAsignacion -> REF valor_tipo asignacionRef .)
    PAR_DER         reduce using rule 128 (declaracionAsignacion -> REF valor_tipo asignacionRef .)


state 217

    (83) asignacionRef -> IDENTIFICADOR . IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> IDENTIFICADOR . IGUAL REF index

    IGUAL           shift and go to state 272


state 218

    (129) declaracionAsignacion -> REF IDENTIFICADOR asignacionRef .

    END_OF_LINE     reduce using rule 129 (declaracionAsignacion -> REF IDENTIFICADOR asignacionRef .)
    COMA            reduce using rule 129 (declaracionAsignacion -> REF IDENTIFICADOR asignacionRef .)
    PAR_DER         reduce using rule 129 (declaracionAsignacion -> REF IDENTIFICADOR asignacionRef .)


state 219

    (130) declaracionAsignacion -> REF declaracionEstructuraD asignacionRef .

    END_OF_LINE     reduce using rule 130 (declaracionAsignacion -> REF declaracionEstructuraD asignacionRef .)
    COMA            reduce using rule 130 (declaracionAsignacion -> REF declaracionEstructuraD asignacionRef .)
    PAR_DER         reduce using rule 130 (declaracionAsignacion -> REF declaracionEstructuraD asignacionRef .)


state 220

    (134) declaracionList -> LIST tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 273


state 221

    (136) declaracionPila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (28) valor_tipo_inicializador -> . FLOAT_TYPE
    (29) valor_tipo_inicializador -> . DOUBLE_TYPE
    (30) valor_tipo_inicializador -> . STRING_TYPE
    (31) valor_tipo_inicializador -> . INT_TYPE
    (32) valor_tipo_inicializador -> . BOOL_TYPE
    (33) valor_tipo_inicializador -> . CHAR_TYPE
    (34) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 235
    DOUBLE_TYPE     shift and go to state 236
    STRING_TYPE     shift and go to state 237
    INT_TYPE        shift and go to state 238
    BOOL_TYPE       shift and go to state 239
    CHAR_TYPE       shift and go to state 240
    IDENTIFICADOR   shift and go to state 241

    valor_tipo_inicializador       shift and go to state 274

state 222

    (198) expresion_operacion_aritmetica -> numero operador_aritmentico numero .

    END_OF_LINE     reduce using rule 198 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    COMA            reduce using rule 198 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    PAR_DER         reduce using rule 198 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    $end            reduce using rule 198 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    LLAVE_DER       reduce using rule 198 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)


state 223

    (199) expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .

    END_OF_LINE     reduce using rule 199 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    COMA            reduce using rule 199 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    PAR_DER         reduce using rule 199 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    $end            reduce using rule 199 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 199 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)


state 224

    (202) expresion_condicional -> numero operador_condicional numero .

    END_OF_LINE     reduce using rule 202 (expresion_condicional -> numero operador_condicional numero .)
    COMA            reduce using rule 202 (expresion_condicional -> numero operador_condicional numero .)
    PAR_DER         reduce using rule 202 (expresion_condicional -> numero operador_condicional numero .)
    $end            reduce using rule 202 (expresion_condicional -> numero operador_condicional numero .)
    LLAVE_DER       reduce using rule 202 (expresion_condicional -> numero operador_condicional numero .)


state 225

    (205) expresion_condicional -> numero operador_condicional IDENTIFICADOR .

    END_OF_LINE     reduce using rule 205 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    COMA            reduce using rule 205 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    PAR_DER         reduce using rule 205 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    $end            reduce using rule 205 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 205 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)


state 226

    (155) switch_case -> SWITCH PAR_IZQ valor . PAR_DER LLAVE_IZQ casos LLAVE_DER

    PAR_DER         shift and go to state 275


state 227

    (168) for -> FOR PAR_IZQ forInicializador . END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    END_OF_LINE     shift and go to state 276


state 228

    (177) forInicializador -> tipoDatoForInicializador . IDENTIFICADOR IGUAL valorForInicializador

    IDENTIFICADOR   shift and go to state 277


state 229

    (178) forInicializador -> IDENTIFICADOR . IGUAL valorForInicializador

    IGUAL           shift and go to state 278


state 230

    (179) tipoDatoForInicializador -> FLOAT_TYPE .

    IDENTIFICADOR   reduce using rule 179 (tipoDatoForInicializador -> FLOAT_TYPE .)


state 231

    (180) tipoDatoForInicializador -> DOUBLE_TYPE .

    IDENTIFICADOR   reduce using rule 180 (tipoDatoForInicializador -> DOUBLE_TYPE .)


state 232

    (181) tipoDatoForInicializador -> INT_TYPE .

    IDENTIFICADOR   reduce using rule 181 (tipoDatoForInicializador -> INT_TYPE .)


state 233

    (188) lista -> LIST tipoLista IDENTIFICADOR . IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (134) declaracionList -> LIST tipoLista IDENTIFICADOR .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 279
    END_OF_LINE     reduce using rule 134 (declaracionList -> LIST tipoLista IDENTIFICADOR .)

  ! IGUAL           [ reduce using rule 134 (declaracionList -> LIST tipoLista IDENTIFICADOR .) ]


state 234

    (189) tipoLista -> MENOR_QUE valor_tipo_inicializador . MAYOR_QUE

    MAYOR_QUE       shift and go to state 280


state 235

    (28) valor_tipo_inicializador -> FLOAT_TYPE .

    MAYOR_QUE       reduce using rule 28 (valor_tipo_inicializador -> FLOAT_TYPE .)


state 236

    (29) valor_tipo_inicializador -> DOUBLE_TYPE .

    MAYOR_QUE       reduce using rule 29 (valor_tipo_inicializador -> DOUBLE_TYPE .)


state 237

    (30) valor_tipo_inicializador -> STRING_TYPE .

    MAYOR_QUE       reduce using rule 30 (valor_tipo_inicializador -> STRING_TYPE .)


state 238

    (31) valor_tipo_inicializador -> INT_TYPE .

    MAYOR_QUE       reduce using rule 31 (valor_tipo_inicializador -> INT_TYPE .)


state 239

    (32) valor_tipo_inicializador -> BOOL_TYPE .

    MAYOR_QUE       reduce using rule 32 (valor_tipo_inicializador -> BOOL_TYPE .)


state 240

    (33) valor_tipo_inicializador -> CHAR_TYPE .

    MAYOR_QUE       reduce using rule 33 (valor_tipo_inicializador -> CHAR_TYPE .)


state 241

    (34) valor_tipo_inicializador -> IDENTIFICADOR .

    MAYOR_QUE       reduce using rule 34 (valor_tipo_inicializador -> IDENTIFICADOR .)


state 242

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (136) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR

    MAYOR_QUE       shift and go to state 281


state 243

    (209) salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING . PAR_DER
    (55) operacion_string -> STRING . SUMA STRING
    (56) operacion_string -> STRING . SUMA IDENTIFICADOR

    PAR_DER         shift and go to state 282
    SUMA            shift and go to state 283


state 244

    (210) salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string . PAR_DER

    PAR_DER         shift and go to state 284


state 245

    (211) salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR . PAR_DER
    (57) operacion_string -> IDENTIFICADOR . SUMA STRING
    (58) operacion_string -> IDENTIFICADOR . SUMA IDENTIFICADOR

    PAR_DER         shift and go to state 285
    SUMA            shift and go to state 286


state 246

    (212) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA . STRING PAR_DER

    STRING          shift and go to state 287


state 247

    (213) salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 213 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)
    COMA            reduce using rule 213 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)
    PAR_DER         reduce using rule 213 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)


state 248

    (216) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR . PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (217) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR . PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    PAR_IZQ         shift and go to state 288


state 249

    (143) while_normal -> WHILE PAR_IZQ expresion_condicional . PAR_DER LLAVE_IZQ body_while LLAVE_DER

    PAR_DER         shift and go to state 289


state 250

    (203) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 111
    NO_IGUAL        shift and go to state 112
    MENOR_QUE       shift and go to state 113
    MENOR_O_IGUAL_QUE shift and go to state 114
    MAYOR_QUE       shift and go to state 115
    MAYOR_O_IGUAL_QUE shift and go to state 116

    operador_condicional           shift and go to state 99

state 251

    (144) while_do -> DO LLAVE_IZQ body_while . LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    LLAVE_DER       shift and go to state 290


state 252

    (145) body_while -> asignacion . END_OF_LINE
    (150) body_while -> asignacion . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 291


state 253

    (146) body_while -> declaracion . END_OF_LINE
    (151) body_while -> declaracion . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 292


state 254

    (147) body_while -> salida_entrada . END_OF_LINE
    (152) body_while -> salida_entrada . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 293


state 255

    (148) body_while -> BREAK . END_OF_LINE
    (153) body_while -> BREAK . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 294


state 256

    (149) body_while -> CONTINUE . END_OF_LINE
    (154) body_while -> CONTINUE . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 295


state 257

    (67) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (68) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (69) asignacionSimple -> IDENTIFICADOR . IGUAL salida_tres
    (70) asignacionSimple -> IDENTIFICADOR . IGUAL index
    (72) asignacionClase -> IDENTIFICADOR . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionPila
    (74) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionQueue
    (75) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionList
    (71) asignacionNull -> IDENTIFICADOR . IGUAL NULL
    (83) asignacionRef -> IDENTIFICADOR . IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> IDENTIFICADOR . IGUAL REF index
    (119) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift INT
    (81) index -> IDENTIFICADOR . COR_IZQ INT COR_DER
    (82) index -> IDENTIFICADOR . COR_IZQ IDENTIFICADOR COR_DER
    (108) operadoresCompuestosLogic -> . AND_EQUAL
    (109) operadoresCompuestosLogic -> . OR_EQUAL
    (110) operadoresCompuestosLogic -> . EXC_OREQUAL
    (103) operadoresCompuestosNumber -> . AUMENTADO
    (104) operadoresCompuestosNumber -> . DECREMENTADO
    (105) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (106) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (107) operadoresCompuestosNumber -> . MODULO_DE
    (111) operadoresCompuestosShift -> . LEFTSHIFT_EQUAL
    (112) operadoresCompuestosShift -> . RIGHTSHIFT_EQUAL

    IGUAL           shift and go to state 97
    IDENTIFICADOR   shift and go to state 96
    NULL_EQUAL      shift and go to state 103
    COR_IZQ         shift and go to state 105
    AND_EQUAL       shift and go to state 117
    OR_EQUAL        shift and go to state 118
    EXC_OREQUAL     shift and go to state 119
    AUMENTADO       shift and go to state 120
    DECREMENTADO    shift and go to state 121
    MULTIPLICADO_POR shift and go to state 122
    DIVIDIDO_POR    shift and go to state 123
    MODULO_DE       shift and go to state 124
    LEFTSHIFT_EQUAL shift and go to state 125
    RIGHTSHIFT_EQUAL shift and go to state 126

    operadoresCompuestosLogic      shift and go to state 101
    operadoresCompuestosNumber     shift and go to state 102
    operadoresCompuestosShift      shift and go to state 104

state 258

    (135) declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .

    IGUAL           reduce using rule 135 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 135 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 135 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    COMA            reduce using rule 135 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    PAR_DER         reduce using rule 135 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)


state 259

    (72) asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 296


state 260

    (76) asignacionPila -> NEW STACK . tipoLista PAR_IZQ PAR_DER
    (189) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 147

    tipoLista                      shift and go to state 297

state 261

    (77) asignacionQueue -> NEW QUEUE . tipoLista PAR_IZQ PAR_DER
    (189) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 147

    tipoLista                      shift and go to state 298

state 262

    (78) asignacionList -> NEW LIST . tipoLista PAR_IZQ PAR_DER
    (189) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 147

    tipoLista                      shift and go to state 299

state 263

    (83) asignacionRef -> IDENTIFICADOR IGUAL REF IDENTIFICADOR .
    (81) index -> IDENTIFICADOR . COR_IZQ INT COR_DER
    (82) index -> IDENTIFICADOR . COR_IZQ IDENTIFICADOR COR_DER

    END_OF_LINE     reduce using rule 83 (asignacionRef -> IDENTIFICADOR IGUAL REF IDENTIFICADOR .)
    COMA            reduce using rule 83 (asignacionRef -> IDENTIFICADOR IGUAL REF IDENTIFICADOR .)
    PAR_DER         reduce using rule 83 (asignacionRef -> IDENTIFICADOR IGUAL REF IDENTIFICADOR .)
    COR_IZQ         shift and go to state 105


state 264

    (84) asignacionRef -> IDENTIFICADOR IGUAL REF index .

    END_OF_LINE     reduce using rule 84 (asignacionRef -> IDENTIFICADOR IGUAL REF index .)
    COMA            reduce using rule 84 (asignacionRef -> IDENTIFICADOR IGUAL REF index .)
    PAR_DER         reduce using rule 84 (asignacionRef -> IDENTIFICADOR IGUAL REF index .)


state 265

    (193) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ . valor PAR_DER
    (194) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ . NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    NEW             shift and go to state 301
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    IDENTIFICADOR   shift and go to state 157
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    valor                          shift and go to state 300
    numero                         shift and go to state 156

state 266

    (195) stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 302


state 267

    (82) index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER .

    IGUAL           reduce using rule 82 (index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER .)
    END_OF_LINE     reduce using rule 82 (index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER .)
    COMA            reduce using rule 82 (index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER .)
    PAR_DER         reduce using rule 82 (index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER .)


state 268

    (81) index -> IDENTIFICADOR COR_IZQ INT COR_DER .

    IGUAL           reduce using rule 81 (index -> IDENTIFICADOR COR_IZQ INT COR_DER .)
    END_OF_LINE     reduce using rule 81 (index -> IDENTIFICADOR COR_IZQ INT COR_DER .)
    COMA            reduce using rule 81 (index -> IDENTIFICADOR COR_IZQ INT COR_DER .)
    PAR_DER         reduce using rule 81 (index -> IDENTIFICADOR COR_IZQ INT COR_DER .)


state 269

    (121) declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 303


state 270

    (232) lambdaParametrosUno -> valor_tipo IDENTIFICADOR COMA . lambdaParametrosUno
    (231) lambdaParametrosUno -> . valor_tipo IDENTIFICADOR
    (232) lambdaParametrosUno -> . valor_tipo IDENTIFICADOR COMA lambdaParametrosUno
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE

    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68

    valor_tipo                     shift and go to state 135
    lambdaParametrosUno            shift and go to state 304

state 271

    (234) lambdaParametrosDos -> IDENTIFICADOR COMA lambdaParametrosDos .

    PAR_DER         reduce using rule 234 (lambdaParametrosDos -> IDENTIFICADOR COMA lambdaParametrosDos .)


state 272

    (83) asignacionRef -> IDENTIFICADOR IGUAL . REF IDENTIFICADOR
    (84) asignacionRef -> IDENTIFICADOR IGUAL . REF index

    REF             shift and go to state 170


state 273

    (134) declaracionList -> LIST tipoLista IDENTIFICADOR .

    IDENTIFICADOR   reduce using rule 134 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    IGUAL           reduce using rule 134 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 134 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    COMA            reduce using rule 134 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    PAR_DER         reduce using rule 134 (declaracionList -> LIST tipoLista IDENTIFICADOR .)


state 274

    (136) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR

    MAYOR_QUE       shift and go to state 305


state 275

    (155) switch_case -> SWITCH PAR_IZQ valor PAR_DER . LLAVE_IZQ casos LLAVE_DER

    LLAVE_IZQ       shift and go to state 306


state 276

    (168) for -> FOR PAR_IZQ forInicializador END_OF_LINE . forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (172) forCondicion -> . IDENTIFICADOR operador_condicional valorForCondicion

    IDENTIFICADOR   shift and go to state 308

    forCondicion                   shift and go to state 307

state 277

    (177) forInicializador -> tipoDatoForInicializador IDENTIFICADOR . IGUAL valorForInicializador

    IGUAL           shift and go to state 309


state 278

    (178) forInicializador -> IDENTIFICADOR IGUAL . valorForInicializador
    (182) valorForInicializador -> . FLOAT
    (183) valorForInicializador -> . DOUBLE
    (184) valorForInicializador -> . INT
    (185) valorForInicializador -> . IDENTIFICADOR

    FLOAT           shift and go to state 312
    DOUBLE          shift and go to state 313
    INT             shift and go to state 314
    IDENTIFICADOR   shift and go to state 310

    valorForInicializador          shift and go to state 311

state 279

    (188) lista -> LIST tipoLista IDENTIFICADOR IGUAL . NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE

    NEW             shift and go to state 315


state 280

    (189) tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .

    IDENTIFICADOR   reduce using rule 189 (tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .)
    PAR_IZQ         reduce using rule 189 (tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .)


state 281

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (136) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 316


state 282

    (209) salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .

    END_OF_LINE     reduce using rule 209 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)
    $end            reduce using rule 209 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)
    LLAVE_DER       reduce using rule 209 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)


state 283

    (55) operacion_string -> STRING SUMA . STRING
    (56) operacion_string -> STRING SUMA . IDENTIFICADOR

    STRING          shift and go to state 317
    IDENTIFICADOR   shift and go to state 318


state 284

    (210) salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .

    END_OF_LINE     reduce using rule 210 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)
    $end            reduce using rule 210 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)
    LLAVE_DER       reduce using rule 210 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)


state 285

    (211) salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .

    END_OF_LINE     reduce using rule 211 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)
    $end            reduce using rule 211 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)
    LLAVE_DER       reduce using rule 211 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)


state 286

    (57) operacion_string -> IDENTIFICADOR SUMA . STRING
    (58) operacion_string -> IDENTIFICADOR SUMA . IDENTIFICADOR

    STRING          shift and go to state 320
    IDENTIFICADOR   shift and go to state 319


state 287

    (212) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING . PAR_DER

    PAR_DER         shift and go to state 321


state 288

    (216) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ . PAR_DER LLAVE_IZQ body LLAVE_DER
    (217) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ . parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (218) parametrosF -> . declaracion
    (219) parametrosF -> . declaracion COMA parametrosF
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    PAR_DER         shift and go to state 323
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    IDENTIFICADOR   shift and go to state 322
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    parametrosF                    shift and go to state 324
    declaracion                    shift and go to state 325
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 289

    (143) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER . LLAVE_IZQ body_while LLAVE_DER

    LLAVE_IZQ       shift and go to state 326


state 290

    (144) while_do -> DO LLAVE_IZQ body_while LLAVE_DER . WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    WHILE           shift and go to state 327


state 291

    (145) body_while -> asignacion END_OF_LINE .
    (150) body_while -> asignacion END_OF_LINE . body_while
    (145) body_while -> . asignacion END_OF_LINE
    (146) body_while -> . declaracion END_OF_LINE
    (147) body_while -> . salida_entrada END_OF_LINE
    (148) body_while -> . BREAK END_OF_LINE
    (149) body_while -> . CONTINUE END_OF_LINE
    (150) body_while -> . asignacion END_OF_LINE body_while
    (151) body_while -> . declaracion END_OF_LINE body_while
    (152) body_while -> . salida_entrada END_OF_LINE body_while
    (153) body_while -> . BREAK END_OF_LINE body_while
    (154) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 145 (body_while -> asignacion END_OF_LINE .)
    BREAK           shift and go to state 255
    CONTINUE        shift and go to state 256
    IDENTIFICADOR   shift and go to state 257
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    asignacion                     shift and go to state 252
    body_while                     shift and go to state 328
    declaracion                    shift and go to state 253
    salida_entrada                 shift and go to state 254
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 292

    (146) body_while -> declaracion END_OF_LINE .
    (151) body_while -> declaracion END_OF_LINE . body_while
    (145) body_while -> . asignacion END_OF_LINE
    (146) body_while -> . declaracion END_OF_LINE
    (147) body_while -> . salida_entrada END_OF_LINE
    (148) body_while -> . BREAK END_OF_LINE
    (149) body_while -> . CONTINUE END_OF_LINE
    (150) body_while -> . asignacion END_OF_LINE body_while
    (151) body_while -> . declaracion END_OF_LINE body_while
    (152) body_while -> . salida_entrada END_OF_LINE body_while
    (153) body_while -> . BREAK END_OF_LINE body_while
    (154) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 146 (body_while -> declaracion END_OF_LINE .)
    BREAK           shift and go to state 255
    CONTINUE        shift and go to state 256
    IDENTIFICADOR   shift and go to state 257
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    declaracion                    shift and go to state 253
    body_while                     shift and go to state 329
    asignacion                     shift and go to state 252
    salida_entrada                 shift and go to state 254
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 293

    (147) body_while -> salida_entrada END_OF_LINE .
    (152) body_while -> salida_entrada END_OF_LINE . body_while
    (145) body_while -> . asignacion END_OF_LINE
    (146) body_while -> . declaracion END_OF_LINE
    (147) body_while -> . salida_entrada END_OF_LINE
    (148) body_while -> . BREAK END_OF_LINE
    (149) body_while -> . CONTINUE END_OF_LINE
    (150) body_while -> . asignacion END_OF_LINE body_while
    (151) body_while -> . declaracion END_OF_LINE body_while
    (152) body_while -> . salida_entrada END_OF_LINE body_while
    (153) body_while -> . BREAK END_OF_LINE body_while
    (154) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 147 (body_while -> salida_entrada END_OF_LINE .)
    BREAK           shift and go to state 255
    CONTINUE        shift and go to state 256
    IDENTIFICADOR   shift and go to state 257
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    salida_entrada                 shift and go to state 254
    body_while                     shift and go to state 330
    asignacion                     shift and go to state 252
    declaracion                    shift and go to state 253
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 294

    (148) body_while -> BREAK END_OF_LINE .
    (153) body_while -> BREAK END_OF_LINE . body_while
    (145) body_while -> . asignacion END_OF_LINE
    (146) body_while -> . declaracion END_OF_LINE
    (147) body_while -> . salida_entrada END_OF_LINE
    (148) body_while -> . BREAK END_OF_LINE
    (149) body_while -> . CONTINUE END_OF_LINE
    (150) body_while -> . asignacion END_OF_LINE body_while
    (151) body_while -> . declaracion END_OF_LINE body_while
    (152) body_while -> . salida_entrada END_OF_LINE body_while
    (153) body_while -> . BREAK END_OF_LINE body_while
    (154) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 148 (body_while -> BREAK END_OF_LINE .)
    BREAK           shift and go to state 255
    CONTINUE        shift and go to state 256
    IDENTIFICADOR   shift and go to state 257
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    body_while                     shift and go to state 331
    asignacion                     shift and go to state 252
    declaracion                    shift and go to state 253
    salida_entrada                 shift and go to state 254
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 295

    (149) body_while -> CONTINUE END_OF_LINE .
    (154) body_while -> CONTINUE END_OF_LINE . body_while
    (145) body_while -> . asignacion END_OF_LINE
    (146) body_while -> . declaracion END_OF_LINE
    (147) body_while -> . salida_entrada END_OF_LINE
    (148) body_while -> . BREAK END_OF_LINE
    (149) body_while -> . CONTINUE END_OF_LINE
    (150) body_while -> . asignacion END_OF_LINE body_while
    (151) body_while -> . declaracion END_OF_LINE body_while
    (152) body_while -> . salida_entrada END_OF_LINE body_while
    (153) body_while -> . BREAK END_OF_LINE body_while
    (154) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 149 (body_while -> CONTINUE END_OF_LINE .)
    BREAK           shift and go to state 255
    CONTINUE        shift and go to state 256
    IDENTIFICADOR   shift and go to state 257
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    body_while                     shift and go to state 332
    asignacion                     shift and go to state 252
    declaracion                    shift and go to state 253
    salida_entrada                 shift and go to state 254
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 296

    (72) asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 333


state 297

    (76) asignacionPila -> NEW STACK tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 334


state 298

    (77) asignacionQueue -> NEW QUEUE tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 335


state 299

    (78) asignacionList -> NEW LIST tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 336


state 300

    (193) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor . PAR_DER

    PAR_DER         shift and go to state 337


state 301

    (194) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW . IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER

    IDENTIFICADOR   shift and go to state 338


state 302

    (195) stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 195 (stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER .)


state 303

    (121) declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 339


state 304

    (232) lambdaParametrosUno -> valor_tipo IDENTIFICADOR COMA lambdaParametrosUno .

    PAR_DER         reduce using rule 232 (lambdaParametrosUno -> valor_tipo IDENTIFICADOR COMA lambdaParametrosUno .)


state 305

    (136) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 340


state 306

    (155) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ . casos LLAVE_DER
    (156) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (157) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (158) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (159) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    CASE            shift and go to state 342

    casos                          shift and go to state 341

state 307

    (168) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion . END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    END_OF_LINE     shift and go to state 343


state 308

    (172) forCondicion -> IDENTIFICADOR . operador_condicional valorForCondicion
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 111
    NO_IGUAL        shift and go to state 112
    MENOR_QUE       shift and go to state 113
    MENOR_O_IGUAL_QUE shift and go to state 114
    MAYOR_QUE       shift and go to state 115
    MAYOR_O_IGUAL_QUE shift and go to state 116

    operador_condicional           shift and go to state 344

state 309

    (177) forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL . valorForInicializador
    (182) valorForInicializador -> . FLOAT
    (183) valorForInicializador -> . DOUBLE
    (184) valorForInicializador -> . INT
    (185) valorForInicializador -> . IDENTIFICADOR

    FLOAT           shift and go to state 312
    DOUBLE          shift and go to state 313
    INT             shift and go to state 314
    IDENTIFICADOR   shift and go to state 310

    valorForInicializador          shift and go to state 345

state 310

    (185) valorForInicializador -> IDENTIFICADOR .

    END_OF_LINE     reduce using rule 185 (valorForInicializador -> IDENTIFICADOR .)


state 311

    (178) forInicializador -> IDENTIFICADOR IGUAL valorForInicializador .

    END_OF_LINE     reduce using rule 178 (forInicializador -> IDENTIFICADOR IGUAL valorForInicializador .)


state 312

    (182) valorForInicializador -> FLOAT .

    END_OF_LINE     reduce using rule 182 (valorForInicializador -> FLOAT .)


state 313

    (183) valorForInicializador -> DOUBLE .

    END_OF_LINE     reduce using rule 183 (valorForInicializador -> DOUBLE .)


state 314

    (184) valorForInicializador -> INT .

    END_OF_LINE     reduce using rule 184 (valorForInicializador -> INT .)


state 315

    (188) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW . LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE

    LIST            shift and go to state 346


state 316

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR . IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (136) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 347
    END_OF_LINE     reduce using rule 136 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)

  ! IGUAL           [ reduce using rule 136 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .) ]


state 317

    (55) operacion_string -> STRING SUMA STRING .

    PAR_DER         reduce using rule 55 (operacion_string -> STRING SUMA STRING .)


state 318

    (56) operacion_string -> STRING SUMA IDENTIFICADOR .

    PAR_DER         reduce using rule 56 (operacion_string -> STRING SUMA IDENTIFICADOR .)


state 319

    (58) operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR .

    PAR_DER         reduce using rule 58 (operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR .)


state 320

    (57) operacion_string -> IDENTIFICADOR SUMA STRING .

    PAR_DER         reduce using rule 57 (operacion_string -> IDENTIFICADOR SUMA STRING .)


state 321

    (212) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .

    END_OF_LINE     reduce using rule 212 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)
    $end            reduce using rule 212 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)
    LLAVE_DER       reduce using rule 212 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)


state 322

    (119) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 96


state 323

    (216) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER . LLAVE_IZQ body LLAVE_DER

    LLAVE_IZQ       shift and go to state 348


state 324

    (217) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF . PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    PAR_DER         shift and go to state 349


state 325

    (218) parametrosF -> declaracion .
    (219) parametrosF -> declaracion . COMA parametrosF

    PAR_DER         reduce using rule 218 (parametrosF -> declaracion .)
    COMA            shift and go to state 350


state 326

    (143) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ . body_while LLAVE_DER
    (145) body_while -> . asignacion END_OF_LINE
    (146) body_while -> . declaracion END_OF_LINE
    (147) body_while -> . salida_entrada END_OF_LINE
    (148) body_while -> . BREAK END_OF_LINE
    (149) body_while -> . CONTINUE END_OF_LINE
    (150) body_while -> . asignacion END_OF_LINE body_while
    (151) body_while -> . declaracion END_OF_LINE body_while
    (152) body_while -> . salida_entrada END_OF_LINE body_while
    (153) body_while -> . BREAK END_OF_LINE body_while
    (154) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    BREAK           shift and go to state 255
    CONTINUE        shift and go to state 256
    IDENTIFICADOR   shift and go to state 257
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    body_while                     shift and go to state 351
    asignacion                     shift and go to state 252
    declaracion                    shift and go to state 253
    salida_entrada                 shift and go to state 254
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 327

    (144) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE . PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 352


state 328

    (150) body_while -> asignacion END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 150 (body_while -> asignacion END_OF_LINE body_while .)


state 329

    (151) body_while -> declaracion END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 151 (body_while -> declaracion END_OF_LINE body_while .)


state 330

    (152) body_while -> salida_entrada END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 152 (body_while -> salida_entrada END_OF_LINE body_while .)


state 331

    (153) body_while -> BREAK END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 153 (body_while -> BREAK END_OF_LINE body_while .)


state 332

    (154) body_while -> CONTINUE END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 154 (body_while -> CONTINUE END_OF_LINE body_while .)


state 333

    (72) asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 72 (asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)


state 334

    (76) asignacionPila -> NEW STACK tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 353


state 335

    (77) asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 354


state 336

    (78) asignacionList -> NEW LIST tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 355


state 337

    (193) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER .

    END_OF_LINE     reduce using rule 193 (stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER .)


state 338

    (194) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR . PAR_IZQ PAR_DER PAR_DER

    PAR_IZQ         shift and go to state 356


state 339

    (121) declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 121 (declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)
    COMA            reduce using rule 121 (declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)
    PAR_DER         reduce using rule 121 (declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)


state 340

    (136) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .

    IDENTIFICADOR   reduce using rule 136 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    IGUAL           reduce using rule 136 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 136 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    COMA            reduce using rule 136 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    PAR_DER         reduce using rule 136 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)


state 341

    (155) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos . LLAVE_DER

    LLAVE_DER       shift and go to state 357


state 342

    (156) casos -> CASE . valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (157) casos -> CASE . valor DOS_PUNTOS BREAK END_OF_LINE
    (158) casos -> CASE . valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (159) casos -> CASE . valor DOS_PUNTOS BREAK END_OF_LINE casos
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    IDENTIFICADOR   shift and go to state 157
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    valor                          shift and go to state 358
    numero                         shift and go to state 156

state 343

    (168) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE . forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (169) forIterador -> . IDENTIFICADOR operadorForIteracion

    IDENTIFICADOR   shift and go to state 360

    forIterador                    shift and go to state 359

state 344

    (172) forCondicion -> IDENTIFICADOR operador_condicional . valorForCondicion
    (173) valorForCondicion -> . FLOAT
    (174) valorForCondicion -> . DOUBLE
    (175) valorForCondicion -> . INT
    (176) valorForCondicion -> . IDENTIFICADOR

    FLOAT           shift and go to state 363
    DOUBLE          shift and go to state 364
    INT             shift and go to state 365
    IDENTIFICADOR   shift and go to state 361

    valorForCondicion              shift and go to state 362

state 345

    (177) forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador .

    END_OF_LINE     reduce using rule 177 (forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador .)


state 346

    (188) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST . tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (189) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 147

    tipoLista                      shift and go to state 366

state 347

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL . NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    NEW             shift and go to state 367


state 348

    (216) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ . body LLAVE_DER
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (11) body -> . lambda_exp
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (137) comparacion -> . valor operador_realacional valor
    (138) estructura_control -> . while
    (139) estructura_control -> . switch_case
    (140) estructura_control -> . for
    (186) estructura_datos -> . lista
    (187) estructura_datos -> . pila
    (196) expresion -> . expresion_operacion_aritmetica
    (197) expresion -> . expresion_condicional
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (214) funcion -> . funcion_tipo_uno
    (215) funcion -> . funcion_tipo_tres
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (59) empty -> . END_OF_LINE
    (191) funciones_estructura_datos -> . stack_push
    (192) funciones_estructura_datos -> . stack_pop
    (226) lambda_exp -> . lambdaArg LAMBDA lambdaCuerpo
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (141) while -> . while_normal
    (142) while -> . while_do
    (155) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (168) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (188) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (190) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (198) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (200) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (202) expresion_condicional -> . numero operador_condicional numero
    (203) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (205) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (216) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (217) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (193) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (194) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (195) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (227) lambdaArg -> . PAR_IZQ PAR_DER
    (228) lambdaArg -> . PAR_IZQ lambdaParametrosUno PAR_DER
    (229) lambdaArg -> . PAR_IZQ lambdaParametrosDos PAR_DER
    (230) lambdaArg -> . IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (143) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (144) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (35) modificador_acceso -> . PRIVATE
    (36) modificador_acceso -> . PROTECTED
    (37) modificador_acceso -> . PUBLIC
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 35
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    SWITCH          shift and go to state 56
    FOR             shift and go to state 57
    LIST            shift and go to state 58
    STACK           shift and go to state 59
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    PAR_IZQ         shift and go to state 48
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72
    WHILE           shift and go to state 75
    DO              shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    PUBLIC          shift and go to state 79
    QUEUE           shift and go to state 80

    modificador_acceso             shift and go to state 62
    body                           shift and go to state 368
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    lambda_exp                     shift and go to state 13
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor                          shift and go to state 21
    while                          shift and go to state 22
    switch_case                    shift and go to state 23
    for                            shift and go to state 24
    lista                          shift and go to state 25
    pila                           shift and go to state 26
    expresion_operacion_aritmetica shift and go to state 27
    expresion_condicional          shift and go to state 28
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    funcion_tipo_uno               shift and go to state 32
    funcion_tipo_tres              shift and go to state 33
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    stack_push                     shift and go to state 40
    stack_pop                      shift and go to state 41
    lambdaArg                      shift and go to state 42
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    numero                         shift and go to state 51
    while_normal                   shift and go to state 54
    while_do                       shift and go to state 55
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 349

    (217) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER . LLAVE_IZQ bodyF LLAVE_DER

    LLAVE_IZQ       shift and go to state 369


state 350

    (219) parametrosF -> declaracion COMA . parametrosF
    (218) parametrosF -> . declaracion
    (219) parametrosF -> . declaracion COMA parametrosF
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    IDENTIFICADOR   shift and go to state 322
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    declaracion                    shift and go to state 325
    parametrosF                    shift and go to state 370
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 351

    (143) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while . LLAVE_DER

    LLAVE_DER       shift and go to state 371


state 352

    (144) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ . expresion_condicional PAR_DER END_OF_LINE
    (202) expresion_condicional -> . numero operador_condicional numero
    (203) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (205) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 250
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    expresion_condicional          shift and go to state 372
    numero                         shift and go to state 181

state 353

    (76) asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 76 (asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER .)


state 354

    (77) asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 77 (asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER .)


state 355

    (78) asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 78 (asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER .)


state 356

    (194) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ . PAR_DER PAR_DER

    PAR_DER         shift and go to state 373


state 357

    (155) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .

    $end            reduce using rule 155 (switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .)
    LLAVE_DER       reduce using rule 155 (switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .)


state 358

    (156) casos -> CASE valor . DOS_PUNTOS body_case BREAK END_OF_LINE
    (157) casos -> CASE valor . DOS_PUNTOS BREAK END_OF_LINE
    (158) casos -> CASE valor . DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (159) casos -> CASE valor . DOS_PUNTOS BREAK END_OF_LINE casos

    DOS_PUNTOS      shift and go to state 374


state 359

    (168) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador . PAR_DER LLAVE_IZQ body LLAVE_DER

    PAR_DER         shift and go to state 375


state 360

    (169) forIterador -> IDENTIFICADOR . operadorForIteracion
    (170) operadorForIteracion -> . INCREMENTO
    (171) operadorForIteracion -> . DECREMENTO

    INCREMENTO      shift and go to state 377
    DECREMENTO      shift and go to state 378

    operadorForIteracion           shift and go to state 376

state 361

    (176) valorForCondicion -> IDENTIFICADOR .

    END_OF_LINE     reduce using rule 176 (valorForCondicion -> IDENTIFICADOR .)


state 362

    (172) forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion .

    END_OF_LINE     reduce using rule 172 (forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion .)


state 363

    (173) valorForCondicion -> FLOAT .

    END_OF_LINE     reduce using rule 173 (valorForCondicion -> FLOAT .)


state 364

    (174) valorForCondicion -> DOUBLE .

    END_OF_LINE     reduce using rule 174 (valorForCondicion -> DOUBLE .)


state 365

    (175) valorForCondicion -> INT .

    END_OF_LINE     reduce using rule 175 (valorForCondicion -> INT .)


state 366

    (188) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista . PAR_IZQ PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 379


state 367

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    STACK           shift and go to state 380


state 368

    (216) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body . LLAVE_DER

    LLAVE_DER       shift and go to state 381


state 369

    (217) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ . bodyF LLAVE_DER
    (220) bodyF -> . asignacion END_OF_LINE
    (221) bodyF -> . declaracion END_OF_LINE
    (222) bodyF -> . salida_entrada END_OF_LINE
    (223) bodyF -> . asignacion END_OF_LINE bodyF
    (224) bodyF -> . declaracion END_OF_LINE bodyF
    (225) bodyF -> . salida_entrada END_OF_LINE bodyF
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 257
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    bodyF                          shift and go to state 382
    asignacion                     shift and go to state 383
    declaracion                    shift and go to state 384
    salida_entrada                 shift and go to state 385
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 370

    (219) parametrosF -> declaracion COMA parametrosF .

    PAR_DER         reduce using rule 219 (parametrosF -> declaracion COMA parametrosF .)


state 371

    (143) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .

    $end            reduce using rule 143 (while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .)
    LLAVE_DER       reduce using rule 143 (while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .)


state 372

    (144) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 386


state 373

    (194) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER . PAR_DER

    PAR_DER         shift and go to state 387


state 374

    (156) casos -> CASE valor DOS_PUNTOS . body_case BREAK END_OF_LINE
    (157) casos -> CASE valor DOS_PUNTOS . BREAK END_OF_LINE
    (158) casos -> CASE valor DOS_PUNTOS . body_case BREAK END_OF_LINE casos
    (159) casos -> CASE valor DOS_PUNTOS . BREAK END_OF_LINE casos
    (160) body_case -> . asignacion END_OF_LINE
    (161) body_case -> . declaracion END_OF_LINE
    (162) body_case -> . comparacion END_OF_LINE
    (163) body_case -> . salida_entrada END_OF_LINE
    (164) body_case -> . asignacion END_OF_LINE body_case
    (165) body_case -> . declaracion END_OF_LINE body_case
    (166) body_case -> . salida_entrada END_OF_LINE body_case
    (167) body_case -> . comparacion END_OF_LINE body_case
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (137) comparacion -> . valor operador_realacional valor
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BREAK           shift and go to state 389
    IDENTIFICADOR   shift and go to state 394
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    valor                          shift and go to state 21
    body_case                      shift and go to state 388
    asignacion                     shift and go to state 390
    declaracion                    shift and go to state 391
    comparacion                    shift and go to state 392
    salida_entrada                 shift and go to state 393
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71
    numero                         shift and go to state 156

state 375

    (168) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER . LLAVE_IZQ body LLAVE_DER

    LLAVE_IZQ       shift and go to state 395


state 376

    (169) forIterador -> IDENTIFICADOR operadorForIteracion .

    PAR_DER         reduce using rule 169 (forIterador -> IDENTIFICADOR operadorForIteracion .)


state 377

    (170) operadorForIteracion -> INCREMENTO .

    PAR_DER         reduce using rule 170 (operadorForIteracion -> INCREMENTO .)


state 378

    (171) operadorForIteracion -> DECREMENTO .

    PAR_DER         reduce using rule 171 (operadorForIteracion -> DECREMENTO .)


state 379

    (188) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 396


state 380

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    MENOR_QUE       shift and go to state 397


state 381

    (216) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .

    $end            reduce using rule 216 (funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .)
    LLAVE_DER       reduce using rule 216 (funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .)


state 382

    (217) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF . LLAVE_DER

    LLAVE_DER       shift and go to state 398


state 383

    (220) bodyF -> asignacion . END_OF_LINE
    (223) bodyF -> asignacion . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 399


state 384

    (221) bodyF -> declaracion . END_OF_LINE
    (224) bodyF -> declaracion . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 400


state 385

    (222) bodyF -> salida_entrada . END_OF_LINE
    (225) bodyF -> salida_entrada . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 401


state 386

    (144) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 402


state 387

    (194) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER .

    END_OF_LINE     reduce using rule 194 (stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER .)


state 388

    (156) casos -> CASE valor DOS_PUNTOS body_case . BREAK END_OF_LINE
    (158) casos -> CASE valor DOS_PUNTOS body_case . BREAK END_OF_LINE casos

    BREAK           shift and go to state 403


state 389

    (157) casos -> CASE valor DOS_PUNTOS BREAK . END_OF_LINE
    (159) casos -> CASE valor DOS_PUNTOS BREAK . END_OF_LINE casos

    END_OF_LINE     shift and go to state 404


state 390

    (160) body_case -> asignacion . END_OF_LINE
    (164) body_case -> asignacion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 405


state 391

    (161) body_case -> declaracion . END_OF_LINE
    (165) body_case -> declaracion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 406


state 392

    (162) body_case -> comparacion . END_OF_LINE
    (167) body_case -> comparacion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 407


state 393

    (163) body_case -> salida_entrada . END_OF_LINE
    (166) body_case -> salida_entrada . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 408


state 394

    (67) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (68) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (69) asignacionSimple -> IDENTIFICADOR . IGUAL salida_tres
    (70) asignacionSimple -> IDENTIFICADOR . IGUAL index
    (72) asignacionClase -> IDENTIFICADOR . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionPila
    (74) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionQueue
    (75) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionList
    (71) asignacionNull -> IDENTIFICADOR . IGUAL NULL
    (83) asignacionRef -> IDENTIFICADOR . IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> IDENTIFICADOR . IGUAL REF index
    (119) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR
    (16) valor -> IDENTIFICADOR .
    (89) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift INT
    (81) index -> IDENTIFICADOR . COR_IZQ INT COR_DER
    (82) index -> IDENTIFICADOR . COR_IZQ IDENTIFICADOR COR_DER
    (108) operadoresCompuestosLogic -> . AND_EQUAL
    (109) operadoresCompuestosLogic -> . OR_EQUAL
    (110) operadoresCompuestosLogic -> . EXC_OREQUAL
    (103) operadoresCompuestosNumber -> . AUMENTADO
    (104) operadoresCompuestosNumber -> . DECREMENTADO
    (105) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (106) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (107) operadoresCompuestosNumber -> . MODULO_DE
    (111) operadoresCompuestosShift -> . LEFTSHIFT_EQUAL
    (112) operadoresCompuestosShift -> . RIGHTSHIFT_EQUAL

    IGUAL           shift and go to state 97
    IDENTIFICADOR   shift and go to state 96
    IGUAL_IGUAL     reduce using rule 16 (valor -> IDENTIFICADOR .)
    NO_IGUAL        reduce using rule 16 (valor -> IDENTIFICADOR .)
    MENOR_QUE       reduce using rule 16 (valor -> IDENTIFICADOR .)
    MENOR_O_IGUAL_QUE reduce using rule 16 (valor -> IDENTIFICADOR .)
    MAYOR_QUE       reduce using rule 16 (valor -> IDENTIFICADOR .)
    MAYOR_O_IGUAL_QUE reduce using rule 16 (valor -> IDENTIFICADOR .)
    NULL_EQUAL      shift and go to state 103
    COR_IZQ         shift and go to state 105
    AND_EQUAL       shift and go to state 117
    OR_EQUAL        shift and go to state 118
    EXC_OREQUAL     shift and go to state 119
    AUMENTADO       shift and go to state 120
    DECREMENTADO    shift and go to state 121
    MULTIPLICADO_POR shift and go to state 122
    DIVIDIDO_POR    shift and go to state 123
    MODULO_DE       shift and go to state 124
    LEFTSHIFT_EQUAL shift and go to state 125
    RIGHTSHIFT_EQUAL shift and go to state 126

    operadoresCompuestosLogic      shift and go to state 101
    operadoresCompuestosNumber     shift and go to state 102
    operadoresCompuestosShift      shift and go to state 104

state 395

    (168) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ . body LLAVE_DER
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (11) body -> . lambda_exp
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (137) comparacion -> . valor operador_realacional valor
    (138) estructura_control -> . while
    (139) estructura_control -> . switch_case
    (140) estructura_control -> . for
    (186) estructura_datos -> . lista
    (187) estructura_datos -> . pila
    (196) expresion -> . expresion_operacion_aritmetica
    (197) expresion -> . expresion_condicional
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (214) funcion -> . funcion_tipo_uno
    (215) funcion -> . funcion_tipo_tres
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (59) empty -> . END_OF_LINE
    (191) funciones_estructura_datos -> . stack_push
    (192) funciones_estructura_datos -> . stack_pop
    (226) lambda_exp -> . lambdaArg LAMBDA lambdaCuerpo
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (141) while -> . while_normal
    (142) while -> . while_do
    (155) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (168) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (188) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (190) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (198) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (199) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (200) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (201) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (202) expresion_condicional -> . numero operador_condicional numero
    (203) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (204) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (205) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (216) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (217) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (193) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (194) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (195) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (227) lambdaArg -> . PAR_IZQ PAR_DER
    (228) lambdaArg -> . PAR_IZQ lambdaParametrosUno PAR_DER
    (229) lambdaArg -> . PAR_IZQ lambdaParametrosDos PAR_DER
    (230) lambdaArg -> . IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (143) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (144) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (35) modificador_acceso -> . PRIVATE
    (36) modificador_acceso -> . PROTECTED
    (37) modificador_acceso -> . PUBLIC
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 35
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    SWITCH          shift and go to state 56
    FOR             shift and go to state 57
    LIST            shift and go to state 58
    STACK           shift and go to state 59
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    PAR_IZQ         shift and go to state 48
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72
    WHILE           shift and go to state 75
    DO              shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    PUBLIC          shift and go to state 79
    QUEUE           shift and go to state 80

    body                           shift and go to state 409
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    lambda_exp                     shift and go to state 13
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor                          shift and go to state 21
    while                          shift and go to state 22
    switch_case                    shift and go to state 23
    for                            shift and go to state 24
    lista                          shift and go to state 25
    pila                           shift and go to state 26
    expresion_operacion_aritmetica shift and go to state 27
    expresion_condicional          shift and go to state 28
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    funcion_tipo_uno               shift and go to state 32
    funcion_tipo_tres              shift and go to state 33
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    stack_push                     shift and go to state 40
    stack_pop                      shift and go to state 41
    lambdaArg                      shift and go to state 42
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    numero                         shift and go to state 51
    while_normal                   shift and go to state 54
    while_do                       shift and go to state 55
    modificador_acceso             shift and go to state 62
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 396

    (188) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 410


state 397

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (28) valor_tipo_inicializador -> . FLOAT_TYPE
    (29) valor_tipo_inicializador -> . DOUBLE_TYPE
    (30) valor_tipo_inicializador -> . STRING_TYPE
    (31) valor_tipo_inicializador -> . INT_TYPE
    (32) valor_tipo_inicializador -> . BOOL_TYPE
    (33) valor_tipo_inicializador -> . CHAR_TYPE
    (34) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 235
    DOUBLE_TYPE     shift and go to state 236
    STRING_TYPE     shift and go to state 237
    INT_TYPE        shift and go to state 238
    BOOL_TYPE       shift and go to state 239
    CHAR_TYPE       shift and go to state 240
    IDENTIFICADOR   shift and go to state 241

    valor_tipo_inicializador       shift and go to state 411

state 398

    (217) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .

    $end            reduce using rule 217 (funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .)
    LLAVE_DER       reduce using rule 217 (funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .)


state 399

    (220) bodyF -> asignacion END_OF_LINE .
    (223) bodyF -> asignacion END_OF_LINE . bodyF
    (220) bodyF -> . asignacion END_OF_LINE
    (221) bodyF -> . declaracion END_OF_LINE
    (222) bodyF -> . salida_entrada END_OF_LINE
    (223) bodyF -> . asignacion END_OF_LINE bodyF
    (224) bodyF -> . declaracion END_OF_LINE bodyF
    (225) bodyF -> . salida_entrada END_OF_LINE bodyF
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 220 (bodyF -> asignacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 257
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    asignacion                     shift and go to state 383
    bodyF                          shift and go to state 412
    declaracion                    shift and go to state 384
    salida_entrada                 shift and go to state 385
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 400

    (221) bodyF -> declaracion END_OF_LINE .
    (224) bodyF -> declaracion END_OF_LINE . bodyF
    (220) bodyF -> . asignacion END_OF_LINE
    (221) bodyF -> . declaracion END_OF_LINE
    (222) bodyF -> . salida_entrada END_OF_LINE
    (223) bodyF -> . asignacion END_OF_LINE bodyF
    (224) bodyF -> . declaracion END_OF_LINE bodyF
    (225) bodyF -> . salida_entrada END_OF_LINE bodyF
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 221 (bodyF -> declaracion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 257
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    declaracion                    shift and go to state 384
    bodyF                          shift and go to state 413
    asignacion                     shift and go to state 383
    salida_entrada                 shift and go to state 385
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 401

    (222) bodyF -> salida_entrada END_OF_LINE .
    (225) bodyF -> salida_entrada END_OF_LINE . bodyF
    (220) bodyF -> . asignacion END_OF_LINE
    (221) bodyF -> . declaracion END_OF_LINE
    (222) bodyF -> . salida_entrada END_OF_LINE
    (223) bodyF -> . asignacion END_OF_LINE bodyF
    (224) bodyF -> . declaracion END_OF_LINE bodyF
    (225) bodyF -> . salida_entrada END_OF_LINE bodyF
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 222 (bodyF -> salida_entrada END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 257
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141

    salida_entrada                 shift and go to state 385
    bodyF                          shift and go to state 414
    asignacion                     shift and go to state 383
    declaracion                    shift and go to state 384
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71

state 402

    (144) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .

    $end            reduce using rule 144 (while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 144 (while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .)


state 403

    (156) casos -> CASE valor DOS_PUNTOS body_case BREAK . END_OF_LINE
    (158) casos -> CASE valor DOS_PUNTOS body_case BREAK . END_OF_LINE casos

    END_OF_LINE     shift and go to state 415


state 404

    (157) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE .
    (159) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE . casos
    (156) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (157) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (158) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (159) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    LLAVE_DER       reduce using rule 157 (casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE .)
    CASE            shift and go to state 342

    casos                          shift and go to state 416

state 405

    (160) body_case -> asignacion END_OF_LINE .
    (164) body_case -> asignacion END_OF_LINE . body_case
    (160) body_case -> . asignacion END_OF_LINE
    (161) body_case -> . declaracion END_OF_LINE
    (162) body_case -> . comparacion END_OF_LINE
    (163) body_case -> . salida_entrada END_OF_LINE
    (164) body_case -> . asignacion END_OF_LINE body_case
    (165) body_case -> . declaracion END_OF_LINE body_case
    (166) body_case -> . salida_entrada END_OF_LINE body_case
    (167) body_case -> . comparacion END_OF_LINE body_case
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (137) comparacion -> . valor operador_realacional valor
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BREAK           reduce using rule 160 (body_case -> asignacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 394
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    asignacion                     shift and go to state 390
    body_case                      shift and go to state 417
    declaracion                    shift and go to state 391
    comparacion                    shift and go to state 392
    salida_entrada                 shift and go to state 393
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    valor                          shift and go to state 21
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71
    numero                         shift and go to state 156

state 406

    (161) body_case -> declaracion END_OF_LINE .
    (165) body_case -> declaracion END_OF_LINE . body_case
    (160) body_case -> . asignacion END_OF_LINE
    (161) body_case -> . declaracion END_OF_LINE
    (162) body_case -> . comparacion END_OF_LINE
    (163) body_case -> . salida_entrada END_OF_LINE
    (164) body_case -> . asignacion END_OF_LINE body_case
    (165) body_case -> . declaracion END_OF_LINE body_case
    (166) body_case -> . salida_entrada END_OF_LINE body_case
    (167) body_case -> . comparacion END_OF_LINE body_case
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (137) comparacion -> . valor operador_realacional valor
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BREAK           reduce using rule 161 (body_case -> declaracion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 394
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    declaracion                    shift and go to state 391
    body_case                      shift and go to state 418
    asignacion                     shift and go to state 390
    comparacion                    shift and go to state 392
    salida_entrada                 shift and go to state 393
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    valor                          shift and go to state 21
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71
    numero                         shift and go to state 156

state 407

    (162) body_case -> comparacion END_OF_LINE .
    (167) body_case -> comparacion END_OF_LINE . body_case
    (160) body_case -> . asignacion END_OF_LINE
    (161) body_case -> . declaracion END_OF_LINE
    (162) body_case -> . comparacion END_OF_LINE
    (163) body_case -> . salida_entrada END_OF_LINE
    (164) body_case -> . asignacion END_OF_LINE body_case
    (165) body_case -> . declaracion END_OF_LINE body_case
    (166) body_case -> . salida_entrada END_OF_LINE body_case
    (167) body_case -> . comparacion END_OF_LINE body_case
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (137) comparacion -> . valor operador_realacional valor
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BREAK           reduce using rule 162 (body_case -> comparacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 394
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    comparacion                    shift and go to state 392
    body_case                      shift and go to state 419
    asignacion                     shift and go to state 390
    declaracion                    shift and go to state 391
    salida_entrada                 shift and go to state 393
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    valor                          shift and go to state 21
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71
    numero                         shift and go to state 156

state 408

    (163) body_case -> salida_entrada END_OF_LINE .
    (166) body_case -> salida_entrada END_OF_LINE . body_case
    (160) body_case -> . asignacion END_OF_LINE
    (161) body_case -> . declaracion END_OF_LINE
    (162) body_case -> . comparacion END_OF_LINE
    (163) body_case -> . salida_entrada END_OF_LINE
    (164) body_case -> . asignacion END_OF_LINE body_case
    (165) body_case -> . declaracion END_OF_LINE body_case
    (166) body_case -> . salida_entrada END_OF_LINE body_case
    (167) body_case -> . comparacion END_OF_LINE body_case
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (66) asignacion -> . asignacionRef
    (113) declaracion -> . valor_tipo IDENTIFICADOR
    (114) declaracion -> . declaracionEstructuraD
    (115) declaracion -> . declaracionAsignacion
    (116) declaracion -> . declaracionClase
    (117) declaracion -> . declaracionNull
    (137) comparacion -> . valor operador_realacional valor
    (206) salida_entrada -> . salida_uno
    (207) salida_entrada -> . salida_dos
    (208) salida_entrada -> . salida_tres
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (70) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (85) asignacionCompuesta -> . asignacionCompuesta_Logic
    (86) asignacionCompuesta -> . asignacionCompuesta_Number
    (87) asignacionCompuesta -> . asignacionCompuesta_Null
    (88) asignacionCompuesta -> . asignacionCompuesta_Shift
    (72) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (75) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (71) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (79) asignacionIndex -> . index IGUAL index
    (80) asignacionIndex -> . index IGUAL valor
    (83) asignacionRef -> . IDENTIFICADOR IGUAL REF IDENTIFICADOR
    (84) asignacionRef -> . IDENTIFICADOR IGUAL REF index
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (131) declaracionEstructuraD -> . declaracionList
    (132) declaracionEstructuraD -> . declaracionQueue
    (133) declaracionEstructuraD -> . declaracionPila
    (120) declaracionAsignacion -> . valor_tipo asignacionSimple
    (121) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (122) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (123) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (124) declaracionAsignacion -> . declaracionNull IGUAL valor
    (125) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (126) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (127) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (128) declaracionAsignacion -> . REF valor_tipo asignacionRef
    (129) declaracionAsignacion -> . REF IDENTIFICADOR asignacionRef
    (130) declaracionAsignacion -> . REF declaracionEstructuraD asignacionRef
    (119) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (118) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (209) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (210) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (211) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (212) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (213) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (90) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (91) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (92) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (93) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (94) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (95) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (98) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (99) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (100) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (101) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (102) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (81) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (82) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (134) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (135) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (136) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BREAK           reduce using rule 163 (body_case -> salida_entrada END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 394
    CHAR_TYPE       shift and go to state 63
    FLOAT_TYPE      shift and go to state 64
    DOUBLE_TYPE     shift and go to state 65
    INT_TYPE        shift and go to state 66
    BOOL_TYPE       shift and go to state 67
    STRING_TYPE     shift and go to state 68
    REF             shift and go to state 49
    CHAR            shift and go to state 50
    BOOL            shift and go to state 52
    STRING          shift and go to state 53
    CONSOLE_WRITELINE shift and go to state 60
    CONSOLE_READLINE shift and go to state 61
    LIST            shift and go to state 140
    QUEUE           shift and go to state 80
    STACK           shift and go to state 141
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 74
    INT             shift and go to state 72

    salida_entrada                 shift and go to state 393
    body_case                      shift and go to state 420
    asignacion                     shift and go to state 390
    declaracion                    shift and go to state 391
    comparacion                    shift and go to state 392
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    asignacionRef                  shift and go to state 20
    valor_tipo                     shift and go to state 34
    declaracionEstructuraD         shift and go to state 36
    declaracionAsignacion          shift and go to state 37
    declaracionClase               shift and go to state 38
    declaracionNull                shift and go to state 39
    valor                          shift and go to state 21
    salida_uno                     shift and go to state 29
    salida_dos                     shift and go to state 30
    salida_tres                    shift and go to state 31
    index                          shift and go to state 43
    asignacionCompuesta_Logic      shift and go to state 44
    asignacionCompuesta_Number     shift and go to state 45
    asignacionCompuesta_Null       shift and go to state 46
    asignacionCompuesta_Shift      shift and go to state 47
    declaracionList                shift and go to state 69
    declaracionQueue               shift and go to state 70
    declaracionPila                shift and go to state 71
    numero                         shift and go to state 156

state 409

    (168) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body . LLAVE_DER

    LLAVE_DER       shift and go to state 421


state 410

    (188) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .

    $end            reduce using rule 188 (lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 188 (lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .)


state 411

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    MAYOR_QUE       shift and go to state 422


state 412

    (223) bodyF -> asignacion END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 223 (bodyF -> asignacion END_OF_LINE bodyF .)


state 413

    (224) bodyF -> declaracion END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 224 (bodyF -> declaracion END_OF_LINE bodyF .)


state 414

    (225) bodyF -> salida_entrada END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 225 (bodyF -> salida_entrada END_OF_LINE bodyF .)


state 415

    (156) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE .
    (158) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE . casos
    (156) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (157) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (158) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (159) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    LLAVE_DER       reduce using rule 156 (casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE .)
    CASE            shift and go to state 342

    casos                          shift and go to state 423

state 416

    (159) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos .

    LLAVE_DER       reduce using rule 159 (casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos .)


state 417

    (164) body_case -> asignacion END_OF_LINE body_case .

    BREAK           reduce using rule 164 (body_case -> asignacion END_OF_LINE body_case .)


state 418

    (165) body_case -> declaracion END_OF_LINE body_case .

    BREAK           reduce using rule 165 (body_case -> declaracion END_OF_LINE body_case .)


state 419

    (167) body_case -> comparacion END_OF_LINE body_case .

    BREAK           reduce using rule 167 (body_case -> comparacion END_OF_LINE body_case .)


state 420

    (166) body_case -> salida_entrada END_OF_LINE body_case .

    BREAK           reduce using rule 166 (body_case -> salida_entrada END_OF_LINE body_case .)


state 421

    (168) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .

    $end            reduce using rule 168 (for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .)
    LLAVE_DER       reduce using rule 168 (for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .)


state 422

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . PAR_IZQ PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 424


state 423

    (158) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos .

    LLAVE_DER       reduce using rule 158 (casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos .)


state 424

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 425


state 425

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 426


state 426

    (190) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .

    $end            reduce using rule 190 (pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 190 (pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 35 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 35 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 35 resolved as shift
WARNING: shift/reduce conflict for MENOR_O_IGUAL_QUE in state 35 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 35 resolved as shift
WARNING: shift/reduce conflict for MAYOR_O_IGUAL_QUE in state 35 resolved as shift
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 51 resolved as shift
WARNING: shift/reduce conflict for MENOR_O_IGUAL_QUE in state 51 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 51 resolved as shift
WARNING: shift/reduce conflict for MAYOR_O_IGUAL_QUE in state 51 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 233 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 316 resolved as shift
