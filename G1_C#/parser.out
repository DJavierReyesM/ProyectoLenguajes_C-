Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    AND
    BYTE
    CLASS
    COMILLA_DOBLE
    COMILLA_SIMPLE
    CONST
    C_IDENT_TEXTUAL
    DEFAULT
    ELSE
    FINALLY
    GLOBAL
    IN
    IR
    LET
    NEGACION
    NOR
    NULL_VAL
    OBJECT
    ON
    OR
    ORDERBY
    RETURN
    SHIFT_MAYOR
    SHIFT_MENOR
    SIMPLE_AND
    SIMPLE_OR
    STRUCT
    THIS
    TO_UPPER
    TYPEOF
    VAR
    WHEN
    WHERE

Grammar

Rule 0     S' -> body
Rule 1     body -> asignacion END_OF_LINE
Rule 2     body -> comparacion
Rule 3     body -> estructura_control
Rule 4     body -> estructura_datos
Rule 5     body -> expresion END_OF_LINE
Rule 6     body -> salida_entrada END_OF_LINE
Rule 7     body -> funcion
Rule 8     body -> declaracion END_OF_LINE
Rule 9     body -> empty
Rule 10    body -> funciones_estructura_datos END_OF_LINE
Rule 11    body -> lambda_exp
Rule 12    valor -> CHAR
Rule 13    valor -> numero
Rule 14    valor -> BOOL
Rule 15    valor -> STRING
Rule 16    valor -> IDENTIFICADOR
Rule 17    numero -> FLOAT
Rule 18    numero -> DOUBLE
Rule 19    numero -> INT
Rule 20    ftipo -> valor_tipo
Rule 21    ftipo -> VOID
Rule 22    valor_tipo -> CHAR_TYPE
Rule 23    valor_tipo -> FLOAT_TYPE
Rule 24    valor_tipo -> DOUBLE_TYPE
Rule 25    valor_tipo -> INT_TYPE
Rule 26    valor_tipo -> BOOL_TYPE
Rule 27    valor_tipo -> STRING_TYPE
Rule 28    valor_tipo_inicializador -> FLOAT_TYPE
Rule 29    valor_tipo_inicializador -> DOUBLE_TYPE
Rule 30    valor_tipo_inicializador -> STRING_TYPE
Rule 31    valor_tipo_inicializador -> INT_TYPE
Rule 32    valor_tipo_inicializador -> BOOL_TYPE
Rule 33    valor_tipo_inicializador -> CHAR_TYPE
Rule 34    valor_tipo_inicializador -> IDENTIFICADOR
Rule 35    modificador_acceso -> PRIVATE
Rule 36    modificador_acceso -> PROTECTED
Rule 37    modificador_acceso -> PUBLIC
Rule 38    operador_realacional -> IGUAL_IGUAL
Rule 39    operador_realacional -> NO_IGUAL
Rule 40    operador_realacional -> MENOR_QUE
Rule 41    operador_realacional -> MENOR_O_IGUAL_QUE
Rule 42    operador_realacional -> MAYOR_QUE
Rule 43    operador_realacional -> MAYOR_O_IGUAL_QUE
Rule 44    operador_aritmentico -> SUMA
Rule 45    operador_aritmentico -> RESTA
Rule 46    operador_aritmentico -> MULTIPLICACION
Rule 47    operador_aritmentico -> DIVISION
Rule 48    operador_aritmentico -> MODULO
Rule 49    operador_condicional -> IGUAL_IGUAL
Rule 50    operador_condicional -> NO_IGUAL
Rule 51    operador_condicional -> MENOR_QUE
Rule 52    operador_condicional -> MENOR_O_IGUAL_QUE
Rule 53    operador_condicional -> MAYOR_QUE
Rule 54    operador_condicional -> MAYOR_O_IGUAL_QUE
Rule 55    operacion_string -> STRING SUMA STRING
Rule 56    operacion_string -> STRING SUMA IDENTIFICADOR
Rule 57    operacion_string -> IDENTIFICADOR SUMA STRING
Rule 58    operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR
Rule 59    empty -> END_OF_LINE
Rule 60    asignacion -> asignacionSimple
Rule 61    asignacion -> asignacionCompuesta
Rule 62    asignacion -> asignacionClase
Rule 63    asignacion -> asignacionEstructuraD
Rule 64    asignacion -> asignacionNull
Rule 65    asignacion -> asignacionIndex
Rule 66    asignacionSimple -> IDENTIFICADOR IGUAL valor
Rule 67    asignacionSimple -> IDENTIFICADOR IGUAL expresion
Rule 68    asignacionSimple -> IDENTIFICADOR IGUAL salida_tres
Rule 69    asignacionSimple -> IDENTIFICADOR IGUAL index
Rule 70    asignacionNull -> IDENTIFICADOR IGUAL NULL
Rule 71    asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
Rule 72    asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionPila
Rule 73    asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionQueue
Rule 74    asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionList
Rule 75    asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER
Rule 76    asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER
Rule 77    asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER
Rule 78    asignacionIndex -> index IGUAL index
Rule 79    asignacionIndex -> index IGUAL valor
Rule 80    index -> IDENTIFICADOR COR_IZQ INT COR_DER
Rule 81    index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
Rule 82    asignacionCompuesta -> asignacionCompuesta_Logic
Rule 83    asignacionCompuesta -> asignacionCompuesta_Number
Rule 84    asignacionCompuesta -> asignacionCompuesta_Null
Rule 85    asignacionCompuesta -> asignacionCompuesta_Shift
Rule 86    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL
Rule 87    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
Rule 88    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
Rule 89    asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic INT
Rule 90    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero
Rule 91    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
Rule 92    asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
Rule 93    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL valor
Rule 94    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL expresion
Rule 95    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionPila
Rule 96    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionQueue
Rule 97    asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionList
Rule 98    asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
Rule 99    asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift INT
Rule 100   operadoresCompuestosNumber -> AUMENTADO
Rule 101   operadoresCompuestosNumber -> DECREMENTADO
Rule 102   operadoresCompuestosNumber -> MULTIPLICADO_POR
Rule 103   operadoresCompuestosNumber -> DIVIDIDO_POR
Rule 104   operadoresCompuestosNumber -> MODULO_DE
Rule 105   operadoresCompuestosLogic -> AND_EQUAL
Rule 106   operadoresCompuestosLogic -> OR_EQUAL
Rule 107   operadoresCompuestosLogic -> EXC_OREQUAL
Rule 108   operadoresCompuestosShift -> LEFTSHIFT_EQUAL
Rule 109   operadoresCompuestosShift -> RIGHTSHIFT_EQUAL
Rule 110   declaracion -> valor_tipo IDENTIFICADOR
Rule 111   declaracion -> declaracionEstructuraD
Rule 112   declaracion -> declaracionAsignacion
Rule 113   declaracion -> declaracionClase
Rule 114   declaracion -> declaracionNull
Rule 115   declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR
Rule 116   declaracionClase -> IDENTIFICADOR IDENTIFICADOR
Rule 117   declaracionAsignacion -> valor_tipo asignacionSimple
Rule 118   declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
Rule 119   declaracionAsignacion -> declaracionClase IGUAL NULL
Rule 120   declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR
Rule 121   declaracionAsignacion -> declaracionNull IGUAL valor
Rule 122   declaracionAsignacion -> declaracionNull IGUAL expresion
Rule 123   declaracionAsignacion -> declaracionNull IGUAL NULL
Rule 124   declaracionAsignacion -> declaracionEstructuraD IGUAL NULL
Rule 125   declaracionEstructuraD -> declaracionList
Rule 126   declaracionEstructuraD -> declaracionQueue
Rule 127   declaracionEstructuraD -> declaracionPila
Rule 128   declaracionList -> LIST tipoLista IDENTIFICADOR
Rule 129   declaracionQueue -> QUEUE tipoLista IDENTIFICADOR
Rule 130   declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
Rule 131   comparacion -> valor operador_realacional valor
Rule 132   estructura_control -> while
Rule 133   estructura_control -> switch_case
Rule 134   estructura_control -> for
Rule 135   while -> while_normal
Rule 136   while -> while_do
Rule 137   while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
Rule 138   while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
Rule 139   body_while -> asignacion END_OF_LINE
Rule 140   body_while -> declaracion END_OF_LINE
Rule 141   body_while -> salida_entrada END_OF_LINE
Rule 142   body_while -> BREAK END_OF_LINE
Rule 143   body_while -> CONTINUE END_OF_LINE
Rule 144   body_while -> asignacion END_OF_LINE body_while
Rule 145   body_while -> declaracion END_OF_LINE body_while
Rule 146   body_while -> salida_entrada END_OF_LINE body_while
Rule 147   body_while -> BREAK END_OF_LINE body_while
Rule 148   body_while -> CONTINUE END_OF_LINE body_while
Rule 149   switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
Rule 150   casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
Rule 151   casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE
Rule 152   casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
Rule 153   casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos
Rule 154   body_case -> asignacion END_OF_LINE
Rule 155   body_case -> declaracion END_OF_LINE
Rule 156   body_case -> comparacion END_OF_LINE
Rule 157   body_case -> salida_entrada END_OF_LINE
Rule 158   body_case -> asignacion END_OF_LINE body_case
Rule 159   body_case -> declaracion END_OF_LINE body_case
Rule 160   body_case -> salida_entrada END_OF_LINE body_case
Rule 161   body_case -> comparacion END_OF_LINE body_case
Rule 162   for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
Rule 163   forIterador -> IDENTIFICADOR operadorForIteracion
Rule 164   operadorForIteracion -> INCREMENTO
Rule 165   operadorForIteracion -> DECREMENTO
Rule 166   forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion
Rule 167   valorForCondicion -> FLOAT
Rule 168   valorForCondicion -> DOUBLE
Rule 169   valorForCondicion -> INT
Rule 170   valorForCondicion -> IDENTIFICADOR
Rule 171   forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador
Rule 172   forInicializador -> IDENTIFICADOR IGUAL valorForInicializador
Rule 173   tipoDatoForInicializador -> FLOAT_TYPE
Rule 174   tipoDatoForInicializador -> DOUBLE_TYPE
Rule 175   tipoDatoForInicializador -> INT_TYPE
Rule 176   valorForInicializador -> FLOAT
Rule 177   valorForInicializador -> DOUBLE
Rule 178   valorForInicializador -> INT
Rule 179   valorForInicializador -> IDENTIFICADOR
Rule 180   estructura_datos -> lista
Rule 181   estructura_datos -> pila
Rule 182   lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
Rule 183   tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE
Rule 184   pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
Rule 185   funciones_estructura_datos -> stack_push
Rule 186   funciones_estructura_datos -> stack_pop
Rule 187   stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
Rule 188   stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
Rule 189   stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
Rule 190   expresion -> expresion_operacion_aritmetica
Rule 191   expresion -> expresion_condicional
Rule 192   expresion_operacion_aritmetica -> numero operador_aritmentico numero
Rule 193   expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR
Rule 194   expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero
Rule 195   expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR
Rule 196   expresion_condicional -> numero operador_condicional numero
Rule 197   expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR
Rule 198   expresion_condicional -> IDENTIFICADOR operador_condicional numero
Rule 199   expresion_condicional -> numero operador_condicional IDENTIFICADOR
Rule 200   salida_entrada -> salida_uno
Rule 201   salida_entrada -> salida_dos
Rule 202   salida_entrada -> salida_tres
Rule 203   salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
Rule 204   salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
Rule 205   salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
Rule 206   salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
Rule 207   salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER
Rule 208   funcion -> funcion_tipo_uno
Rule 209   funcion -> funcion_tipo_tres
Rule 210   funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
Rule 211   funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
Rule 212   parametrosF -> declaracion
Rule 213   parametrosF -> declaracion COMA parametrosF
Rule 214   bodyF -> asignacion END_OF_LINE
Rule 215   bodyF -> declaracion END_OF_LINE
Rule 216   bodyF -> salida_entrada END_OF_LINE
Rule 217   bodyF -> asignacion END_OF_LINE bodyF
Rule 218   bodyF -> declaracion END_OF_LINE bodyF
Rule 219   bodyF -> salida_entrada END_OF_LINE bodyF
Rule 220   lambda_exp -> lambdaArg LAMBDA lambdaCuerpo
Rule 221   lambdaArg -> PAR_IZQ PAR_DER
Rule 222   lambdaArg -> PAR_IZQ lambdaParametrosUno PAR_DER
Rule 223   lambdaArg -> PAR_IZQ lambdaParametrosDos PAR_DER
Rule 224   lambdaArg -> IDENTIFICADOR
Rule 225   lambdaParametrosUno -> valor_tipo IDENTIFICADOR
Rule 226   lambdaParametrosUno -> valor_tipo IDENTIFICADOR COMA lambdaParametrosUno
Rule 227   lambdaParametrosDos -> IDENTIFICADOR
Rule 228   lambdaParametrosDos -> IDENTIFICADOR COMA lambdaParametrosDos
Rule 229   lambdaCuerpo -> expresion
Rule 230   lambdaCuerpo -> salida_uno
Rule 231   lambdaCuerpo -> salida_dos

Terminals, with rules where they appear

ADD                  : 
AND                  : 
AND_EQUAL            : 105
AUMENTADO            : 100
BOOL                 : 14 86
BOOL_TYPE            : 26 32
BREAK                : 142 147 150 151 152 153
BYTE                 : 
CASE                 : 150 151 152 153
CHAR                 : 12
CHAR_TYPE            : 22 33
CLASS                : 
COMA                 : 213 226 228
COMILLA_DOBLE        : 
COMILLA_SIMPLE       : 
CONSOLE_READLINE     : 207
CONSOLE_WRITELINE    : 203 204 205 206
CONST                : 
CONTINUE             : 143 148
COR_DER              : 80 81
COR_IZQ              : 80 81
C_CADENA_INTERPOLADA : 206
C_IDENT_TEXTUAL      : 
DECREMENTADO         : 101
DECREMENTO           : 165
DEFAULT              : 
DIVIDIDO_POR         : 103
DIVISION             : 47
DO                   : 138
DOS_PUNTOS           : 150 151 152 153
DOUBLE               : 18 168 177
DOUBLE_TYPE          : 24 29 174
ELSE                 : 
END_OF_LINE          : 1 5 6 8 10 59 138 139 140 141 142 143 144 145 146 147 148 150 151 152 153 154 155 156 157 158 159 160 161 162 162 182 184 214 215 216 217 218 219
EXC_OREQUAL          : 107
FINALLY              : 
FLOAT                : 17 167 176
FLOAT_TYPE           : 23 28 173
FOR                  : 162
GLOBAL               : 
IDENTIFICADOR        : 16 34 56 57 58 58 66 67 68 69 70 71 71 72 73 74 80 81 81 86 87 88 88 89 90 91 92 92 93 94 95 96 97 98 98 99 110 115 116 116 118 120 128 129 130 163 166 170 171 172 179 182 184 187 188 188 189 193 194 195 195 197 197 198 199 205 210 211 224 225 226 227 228
IGUAL                : 66 67 68 69 70 71 72 73 74 78 79 118 119 120 121 122 123 124 171 172 182 184
IGUAL_IGUAL          : 38 49
IN                   : 
INCREMENTO           : 164
INT                  : 19 80 89 99 169 178
INT_TYPE             : 25 31 175
IR                   : 
LAMBDA               : 220
LEFTSHIFT_EQUAL      : 108
LET                  : 
LIST                 : 77 128 182 182
LLAVE_DER            : 137 138 149 162 210 211
LLAVE_IZQ            : 137 138 149 162 210 211
MAYOR_O_IGUAL_QUE    : 43 54
MAYOR_QUE            : 42 53 130 183 184 184
MENOR_O_IGUAL_QUE    : 41 52
MENOR_QUE            : 40 51 130 183 184 184
MODULO               : 48
MODULO_DE            : 104
MULTIPLICACION       : 46
MULTIPLICADO_POR     : 102
NEGACION             : 
NEW                  : 71 75 76 77 118 182 184 188
NOR                  : 
NO_IGUAL             : 39 50
NULL                 : 70 119 123 124
NULL_EQUAL           : 93 94 95 96 97
NULL_VAL             : 
OBJECT               : 
ON                   : 
OP_TERNARIO          : 115
OR                   : 
ORDERBY              : 
OR_EQUAL             : 106
PAR_DER              : 71 75 76 77 118 137 138 149 162 182 184 187 188 188 189 203 204 205 206 207 210 211 221 222 223
PAR_IZQ              : 71 75 76 77 118 137 138 149 162 182 184 187 188 188 189 203 204 205 206 207 210 211 221 222 223
POP                  : 189
PRIVATE              : 35
PROTECTED            : 36
PUBLIC               : 37
PUNTO                : 187 188 189
PUSH                 : 187 188
QUEUE                : 76 129
RESTA                : 45
RETURN               : 
RIGHTSHIFT_EQUAL     : 109
SHIFT_MAYOR          : 
SHIFT_MENOR          : 
SIMPLE_AND           : 
SIMPLE_OR            : 
STACK                : 75 130 184 184
STRING               : 15 55 55 56 57 203 206
STRING_TYPE          : 27 30
STRUCT               : 
SUMA                 : 44 55 56 57 58
SWITCH               : 149
THIS                 : 
TO_UPPER             : 
TYPEOF               : 
VAR                  : 
VOID                 : 21 210 211
WHEN                 : 
WHERE                : 
WHILE                : 137 138
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 139 144 154 158 214 217
asignacionClase      : 62
asignacionCompuesta  : 61
asignacionCompuesta_Logic : 82
asignacionCompuesta_Null : 84
asignacionCompuesta_Number : 83
asignacionCompuesta_Shift : 85
asignacionEstructuraD : 63
asignacionIndex      : 65
asignacionList       : 74 97
asignacionNull       : 64
asignacionPila       : 72 95
asignacionQueue      : 73 96
asignacionSimple     : 60 117
body                 : 162 210 0
bodyF                : 211 217 218 219
body_case            : 150 152 158 159 160 161
body_while           : 137 138 144 145 146 147 148
casos                : 149 152 153
comparacion          : 2 156 161
declaracion          : 8 140 145 155 159 212 213 215 218
declaracionAsignacion : 112
declaracionClase     : 113 118 119 120
declaracionEstructuraD : 111 124
declaracionList      : 125
declaracionNull      : 114 121 122 123
declaracionPila      : 127
declaracionQueue     : 126
empty                : 9
estructura_control   : 3
estructura_datos     : 4
expresion            : 5 67 94 122 229
expresion_condicional : 87 137 138 191
expresion_operacion_aritmetica : 91 190
for                  : 134
forCondicion         : 162
forInicializador     : 162
forIterador          : 162
ftipo                : 
funcion              : 7
funcion_tipo_tres    : 209
funcion_tipo_uno     : 208
funciones_estructura_datos : 10
index                : 69 78 78 79
lambdaArg            : 220
lambdaCuerpo         : 220
lambdaParametrosDos  : 223 228
lambdaParametrosUno  : 222 226
lambda_exp           : 11
lista                : 180
modificador_acceso   : 210 211
numero               : 13 90 192 192 193 194 196 196 198 199
operacion_string     : 204
operadorForIteracion : 163
operador_aritmentico : 192 193 194 195
operador_condicional : 166 196 197 198 199
operador_realacional : 131
operadoresCompuestosLogic : 86 87 88 89
operadoresCompuestosNumber : 90 91 92
operadoresCompuestosShift : 98 99
parametrosF          : 211 213
pila                 : 181
salida_dos           : 201 231
salida_entrada       : 6 141 146 157 160 216 219
salida_tres          : 68 202
salida_uno           : 200 230
stack_pop            : 186
stack_push           : 185
switch_case          : 133
tipoDatoForInicializador : 171
tipoLista            : 75 76 77 128 129 182 182
valor                : 66 79 93 121 131 131 149 150 151 152 153 187
valorForCondicion    : 166
valorForInicializador : 171 172
valor_tipo           : 20 110 115 117 225 226
valor_tipo_inicializador : 130 183 184 184
while                : 132
while_do             : 136
while_normal         : 135

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (11) body -> . lambda_exp
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (131) comparacion -> . valor operador_realacional valor
    (132) estructura_control -> . while
    (133) estructura_control -> . switch_case
    (134) estructura_control -> . for
    (180) estructura_datos -> . lista
    (181) estructura_datos -> . pila
    (190) expresion -> . expresion_operacion_aritmetica
    (191) expresion -> . expresion_condicional
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (208) funcion -> . funcion_tipo_uno
    (209) funcion -> . funcion_tipo_tres
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (59) empty -> . END_OF_LINE
    (185) funciones_estructura_datos -> . stack_push
    (186) funciones_estructura_datos -> . stack_pop
    (220) lambda_exp -> . lambdaArg LAMBDA lambdaCuerpo
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (135) while -> . while_normal
    (136) while -> . while_do
    (149) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (162) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (182) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (184) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (192) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (194) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (196) expresion_condicional -> . numero operador_condicional numero
    (197) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (199) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (210) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (211) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (187) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (188) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (189) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (221) lambdaArg -> . PAR_IZQ PAR_DER
    (222) lambdaArg -> . PAR_IZQ lambdaParametrosUno PAR_DER
    (223) lambdaArg -> . PAR_IZQ lambdaParametrosDos PAR_DER
    (224) lambdaArg -> . IDENTIFICADOR
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (137) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (138) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (35) modificador_acceso -> . PRIVATE
    (36) modificador_acceso -> . PROTECTED
    (37) modificador_acceso -> . PUBLIC
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 34
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    SWITCH          shift and go to state 54
    FOR             shift and go to state 55
    LIST            shift and go to state 56
    STACK           shift and go to state 57
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    PAR_IZQ         shift and go to state 47
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70
    WHILE           shift and go to state 73
    DO              shift and go to state 74
    PRIVATE         shift and go to state 75
    PROTECTED       shift and go to state 76
    PUBLIC          shift and go to state 77
    QUEUE           shift and go to state 78

    body                           shift and go to state 1
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    lambda_exp                     shift and go to state 13
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor                          shift and go to state 20
    while                          shift and go to state 21
    switch_case                    shift and go to state 22
    for                            shift and go to state 23
    lista                          shift and go to state 24
    pila                           shift and go to state 25
    expresion_operacion_aritmetica shift and go to state 26
    expresion_condicional          shift and go to state 27
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    funcion_tipo_uno               shift and go to state 31
    funcion_tipo_tres              shift and go to state 32
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    stack_push                     shift and go to state 39
    stack_pop                      shift and go to state 40
    lambdaArg                      shift and go to state 41
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    numero                         shift and go to state 49
    while_normal                   shift and go to state 52
    while_do                       shift and go to state 53
    modificador_acceso             shift and go to state 60
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 1

    (0) S' -> body .



state 2

    (1) body -> asignacion . END_OF_LINE

    END_OF_LINE     shift and go to state 79


state 3

    (59) empty -> END_OF_LINE .

    $end            reduce using rule 59 (empty -> END_OF_LINE .)
    LLAVE_DER       reduce using rule 59 (empty -> END_OF_LINE .)


state 4

    (2) body -> comparacion .

    $end            reduce using rule 2 (body -> comparacion .)
    LLAVE_DER       reduce using rule 2 (body -> comparacion .)


state 5

    (3) body -> estructura_control .

    $end            reduce using rule 3 (body -> estructura_control .)
    LLAVE_DER       reduce using rule 3 (body -> estructura_control .)


state 6

    (4) body -> estructura_datos .

    $end            reduce using rule 4 (body -> estructura_datos .)
    LLAVE_DER       reduce using rule 4 (body -> estructura_datos .)


state 7

    (5) body -> expresion . END_OF_LINE

    END_OF_LINE     shift and go to state 80


state 8

    (6) body -> salida_entrada . END_OF_LINE

    END_OF_LINE     shift and go to state 81


state 9

    (7) body -> funcion .

    $end            reduce using rule 7 (body -> funcion .)
    LLAVE_DER       reduce using rule 7 (body -> funcion .)


state 10

    (8) body -> declaracion . END_OF_LINE

    END_OF_LINE     shift and go to state 82


state 11

    (9) body -> empty .

    $end            reduce using rule 9 (body -> empty .)
    LLAVE_DER       reduce using rule 9 (body -> empty .)


state 12

    (10) body -> funciones_estructura_datos . END_OF_LINE

    END_OF_LINE     shift and go to state 83


state 13

    (11) body -> lambda_exp .

    $end            reduce using rule 11 (body -> lambda_exp .)
    LLAVE_DER       reduce using rule 11 (body -> lambda_exp .)


state 14

    (60) asignacion -> asignacionSimple .

    END_OF_LINE     reduce using rule 60 (asignacion -> asignacionSimple .)


state 15

    (61) asignacion -> asignacionCompuesta .

    END_OF_LINE     reduce using rule 61 (asignacion -> asignacionCompuesta .)


state 16

    (62) asignacion -> asignacionClase .

    END_OF_LINE     reduce using rule 62 (asignacion -> asignacionClase .)


state 17

    (63) asignacion -> asignacionEstructuraD .

    END_OF_LINE     reduce using rule 63 (asignacion -> asignacionEstructuraD .)


state 18

    (64) asignacion -> asignacionNull .

    END_OF_LINE     reduce using rule 64 (asignacion -> asignacionNull .)


state 19

    (65) asignacion -> asignacionIndex .

    END_OF_LINE     reduce using rule 65 (asignacion -> asignacionIndex .)


state 20

    (131) comparacion -> valor . operador_realacional valor
    (38) operador_realacional -> . IGUAL_IGUAL
    (39) operador_realacional -> . NO_IGUAL
    (40) operador_realacional -> . MENOR_QUE
    (41) operador_realacional -> . MENOR_O_IGUAL_QUE
    (42) operador_realacional -> . MAYOR_QUE
    (43) operador_realacional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 85
    NO_IGUAL        shift and go to state 86
    MENOR_QUE       shift and go to state 87
    MENOR_O_IGUAL_QUE shift and go to state 88
    MAYOR_QUE       shift and go to state 89
    MAYOR_O_IGUAL_QUE shift and go to state 90

    operador_realacional           shift and go to state 84

state 21

    (132) estructura_control -> while .

    $end            reduce using rule 132 (estructura_control -> while .)
    LLAVE_DER       reduce using rule 132 (estructura_control -> while .)


state 22

    (133) estructura_control -> switch_case .

    $end            reduce using rule 133 (estructura_control -> switch_case .)
    LLAVE_DER       reduce using rule 133 (estructura_control -> switch_case .)


state 23

    (134) estructura_control -> for .

    $end            reduce using rule 134 (estructura_control -> for .)
    LLAVE_DER       reduce using rule 134 (estructura_control -> for .)


state 24

    (180) estructura_datos -> lista .

    $end            reduce using rule 180 (estructura_datos -> lista .)
    LLAVE_DER       reduce using rule 180 (estructura_datos -> lista .)


state 25

    (181) estructura_datos -> pila .

    $end            reduce using rule 181 (estructura_datos -> pila .)
    LLAVE_DER       reduce using rule 181 (estructura_datos -> pila .)


state 26

    (190) expresion -> expresion_operacion_aritmetica .

    END_OF_LINE     reduce using rule 190 (expresion -> expresion_operacion_aritmetica .)
    COMA            reduce using rule 190 (expresion -> expresion_operacion_aritmetica .)
    PAR_DER         reduce using rule 190 (expresion -> expresion_operacion_aritmetica .)
    $end            reduce using rule 190 (expresion -> expresion_operacion_aritmetica .)
    LLAVE_DER       reduce using rule 190 (expresion -> expresion_operacion_aritmetica .)


state 27

    (191) expresion -> expresion_condicional .

    END_OF_LINE     reduce using rule 191 (expresion -> expresion_condicional .)
    COMA            reduce using rule 191 (expresion -> expresion_condicional .)
    PAR_DER         reduce using rule 191 (expresion -> expresion_condicional .)
    $end            reduce using rule 191 (expresion -> expresion_condicional .)
    LLAVE_DER       reduce using rule 191 (expresion -> expresion_condicional .)


state 28

    (200) salida_entrada -> salida_uno .

    END_OF_LINE     reduce using rule 200 (salida_entrada -> salida_uno .)


state 29

    (201) salida_entrada -> salida_dos .

    END_OF_LINE     reduce using rule 201 (salida_entrada -> salida_dos .)


state 30

    (202) salida_entrada -> salida_tres .

    END_OF_LINE     reduce using rule 202 (salida_entrada -> salida_tres .)


state 31

    (208) funcion -> funcion_tipo_uno .

    $end            reduce using rule 208 (funcion -> funcion_tipo_uno .)
    LLAVE_DER       reduce using rule 208 (funcion -> funcion_tipo_uno .)


state 32

    (209) funcion -> funcion_tipo_tres .

    $end            reduce using rule 209 (funcion -> funcion_tipo_tres .)
    LLAVE_DER       reduce using rule 209 (funcion -> funcion_tipo_tres .)


state 33

    (110) declaracion -> valor_tipo . IDENTIFICADOR
    (117) declaracionAsignacion -> valor_tipo . asignacionSimple
    (115) declaracionNull -> valor_tipo . OP_TERNARIO IDENTIFICADOR
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index

    IDENTIFICADOR   shift and go to state 91
    OP_TERNARIO     shift and go to state 93

    asignacionSimple               shift and go to state 92

state 34

    (66) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (67) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (68) asignacionSimple -> IDENTIFICADOR . IGUAL salida_tres
    (69) asignacionSimple -> IDENTIFICADOR . IGUAL index
    (71) asignacionClase -> IDENTIFICADOR . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionPila
    (73) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionQueue
    (74) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionList
    (70) asignacionNull -> IDENTIFICADOR . IGUAL NULL
    (16) valor -> IDENTIFICADOR .
    (194) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (197) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (116) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR
    (187) stack_push -> IDENTIFICADOR . PUNTO PUSH PAR_IZQ valor PAR_DER
    (188) stack_push -> IDENTIFICADOR . PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (189) stack_pop -> IDENTIFICADOR . PUNTO POP PAR_IZQ PAR_DER
    (224) lambdaArg -> IDENTIFICADOR .
    (86) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift INT
    (80) index -> IDENTIFICADOR . COR_IZQ INT COR_DER
    (81) index -> IDENTIFICADOR . COR_IZQ IDENTIFICADOR COR_DER
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE
    (105) operadoresCompuestosLogic -> . AND_EQUAL
    (106) operadoresCompuestosLogic -> . OR_EQUAL
    (107) operadoresCompuestosLogic -> . EXC_OREQUAL
    (100) operadoresCompuestosNumber -> . AUMENTADO
    (101) operadoresCompuestosNumber -> . DECREMENTADO
    (102) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (103) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (104) operadoresCompuestosNumber -> . MODULO_DE
    (108) operadoresCompuestosShift -> . LEFTSHIFT_EQUAL
    (109) operadoresCompuestosShift -> . RIGHTSHIFT_EQUAL

  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_O_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_O_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 95
    IDENTIFICADOR   shift and go to state 94
    PUNTO           shift and go to state 98
    LAMBDA          reduce using rule 224 (lambdaArg -> IDENTIFICADOR .)
    NULL_EQUAL      shift and go to state 101
    COR_IZQ         shift and go to state 103
    SUMA            shift and go to state 104
    RESTA           shift and go to state 105
    MULTIPLICACION  shift and go to state 106
    DIVISION        shift and go to state 107
    MODULO          shift and go to state 108
    IGUAL_IGUAL     shift and go to state 109
    NO_IGUAL        shift and go to state 110
    MENOR_QUE       shift and go to state 111
    MENOR_O_IGUAL_QUE shift and go to state 112
    MAYOR_QUE       shift and go to state 113
    MAYOR_O_IGUAL_QUE shift and go to state 114
    AND_EQUAL       shift and go to state 115
    OR_EQUAL        shift and go to state 116
    EXC_OREQUAL     shift and go to state 117
    AUMENTADO       shift and go to state 118
    DECREMENTADO    shift and go to state 119
    MULTIPLICADO_POR shift and go to state 120
    DIVIDIDO_POR    shift and go to state 121
    MODULO_DE       shift and go to state 122
    LEFTSHIFT_EQUAL shift and go to state 123
    RIGHTSHIFT_EQUAL shift and go to state 124

  ! IGUAL_IGUAL     [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]
  ! NO_IGUAL        [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]
  ! MENOR_QUE       [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]
  ! MENOR_O_IGUAL_QUE [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]
  ! MAYOR_QUE       [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]
  ! MAYOR_O_IGUAL_QUE [ reduce using rule 16 (valor -> IDENTIFICADOR .) ]

    operador_aritmentico           shift and go to state 96
    operador_condicional           shift and go to state 97
    operadoresCompuestosLogic      shift and go to state 99
    operadoresCompuestosNumber     shift and go to state 100
    operadoresCompuestosShift      shift and go to state 102

state 35

    (111) declaracion -> declaracionEstructuraD .
    (124) declaracionAsignacion -> declaracionEstructuraD . IGUAL NULL

    END_OF_LINE     reduce using rule 111 (declaracion -> declaracionEstructuraD .)
    COMA            reduce using rule 111 (declaracion -> declaracionEstructuraD .)
    PAR_DER         reduce using rule 111 (declaracion -> declaracionEstructuraD .)
    IGUAL           shift and go to state 125


state 36

    (112) declaracion -> declaracionAsignacion .

    END_OF_LINE     reduce using rule 112 (declaracion -> declaracionAsignacion .)
    COMA            reduce using rule 112 (declaracion -> declaracionAsignacion .)
    PAR_DER         reduce using rule 112 (declaracion -> declaracionAsignacion .)


state 37

    (113) declaracion -> declaracionClase .
    (118) declaracionAsignacion -> declaracionClase . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> declaracionClase . IGUAL NULL
    (120) declaracionAsignacion -> declaracionClase . IGUAL IDENTIFICADOR

    END_OF_LINE     reduce using rule 113 (declaracion -> declaracionClase .)
    COMA            reduce using rule 113 (declaracion -> declaracionClase .)
    PAR_DER         reduce using rule 113 (declaracion -> declaracionClase .)
    IGUAL           shift and go to state 126


state 38

    (114) declaracion -> declaracionNull .
    (121) declaracionAsignacion -> declaracionNull . IGUAL valor
    (122) declaracionAsignacion -> declaracionNull . IGUAL expresion
    (123) declaracionAsignacion -> declaracionNull . IGUAL NULL

    END_OF_LINE     reduce using rule 114 (declaracion -> declaracionNull .)
    COMA            reduce using rule 114 (declaracion -> declaracionNull .)
    PAR_DER         reduce using rule 114 (declaracion -> declaracionNull .)
    IGUAL           shift and go to state 127


state 39

    (185) funciones_estructura_datos -> stack_push .

    END_OF_LINE     reduce using rule 185 (funciones_estructura_datos -> stack_push .)


state 40

    (186) funciones_estructura_datos -> stack_pop .

    END_OF_LINE     reduce using rule 186 (funciones_estructura_datos -> stack_pop .)


state 41

    (220) lambda_exp -> lambdaArg . LAMBDA lambdaCuerpo

    LAMBDA          shift and go to state 128


state 42

    (78) asignacionIndex -> index . IGUAL index
    (79) asignacionIndex -> index . IGUAL valor

    IGUAL           shift and go to state 129


state 43

    (82) asignacionCompuesta -> asignacionCompuesta_Logic .

    END_OF_LINE     reduce using rule 82 (asignacionCompuesta -> asignacionCompuesta_Logic .)


state 44

    (83) asignacionCompuesta -> asignacionCompuesta_Number .

    END_OF_LINE     reduce using rule 83 (asignacionCompuesta -> asignacionCompuesta_Number .)


state 45

    (84) asignacionCompuesta -> asignacionCompuesta_Null .

    END_OF_LINE     reduce using rule 84 (asignacionCompuesta -> asignacionCompuesta_Null .)


state 46

    (85) asignacionCompuesta -> asignacionCompuesta_Shift .

    END_OF_LINE     reduce using rule 85 (asignacionCompuesta -> asignacionCompuesta_Shift .)


state 47

    (221) lambdaArg -> PAR_IZQ . PAR_DER
    (222) lambdaArg -> PAR_IZQ . lambdaParametrosUno PAR_DER
    (223) lambdaArg -> PAR_IZQ . lambdaParametrosDos PAR_DER
    (225) lambdaParametrosUno -> . valor_tipo IDENTIFICADOR
    (226) lambdaParametrosUno -> . valor_tipo IDENTIFICADOR COMA lambdaParametrosUno
    (227) lambdaParametrosDos -> . IDENTIFICADOR
    (228) lambdaParametrosDos -> . IDENTIFICADOR COMA lambdaParametrosDos
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE

    PAR_DER         shift and go to state 130
    IDENTIFICADOR   shift and go to state 134
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66

    lambdaParametrosUno            shift and go to state 131
    lambdaParametrosDos            shift and go to state 132
    valor_tipo                     shift and go to state 133

state 48

    (12) valor -> CHAR .

    IGUAL_IGUAL     reduce using rule 12 (valor -> CHAR .)
    NO_IGUAL        reduce using rule 12 (valor -> CHAR .)
    MENOR_QUE       reduce using rule 12 (valor -> CHAR .)
    MENOR_O_IGUAL_QUE reduce using rule 12 (valor -> CHAR .)
    MAYOR_QUE       reduce using rule 12 (valor -> CHAR .)
    MAYOR_O_IGUAL_QUE reduce using rule 12 (valor -> CHAR .)
    $end            reduce using rule 12 (valor -> CHAR .)
    LLAVE_DER       reduce using rule 12 (valor -> CHAR .)
    END_OF_LINE     reduce using rule 12 (valor -> CHAR .)
    COMA            reduce using rule 12 (valor -> CHAR .)
    PAR_DER         reduce using rule 12 (valor -> CHAR .)
    DOS_PUNTOS      reduce using rule 12 (valor -> CHAR .)


state 49

    (13) valor -> numero .
    (192) expresion_operacion_aritmetica -> numero . operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> numero . operador_aritmentico IDENTIFICADOR
    (196) expresion_condicional -> numero . operador_condicional numero
    (199) expresion_condicional -> numero . operador_condicional IDENTIFICADOR
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_O_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_O_IGUAL_QUE resolved as shift
    END_OF_LINE     reduce using rule 13 (valor -> numero .)
    COMA            reduce using rule 13 (valor -> numero .)
    PAR_DER         reduce using rule 13 (valor -> numero .)
    SUMA            shift and go to state 104
    RESTA           shift and go to state 105
    MULTIPLICACION  shift and go to state 106
    DIVISION        shift and go to state 107
    MODULO          shift and go to state 108
    IGUAL_IGUAL     shift and go to state 109
    NO_IGUAL        shift and go to state 110
    MENOR_QUE       shift and go to state 111
    MENOR_O_IGUAL_QUE shift and go to state 112
    MAYOR_QUE       shift and go to state 113
    MAYOR_O_IGUAL_QUE shift and go to state 114

  ! IGUAL_IGUAL     [ reduce using rule 13 (valor -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 13 (valor -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 13 (valor -> numero .) ]
  ! MENOR_O_IGUAL_QUE [ reduce using rule 13 (valor -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 13 (valor -> numero .) ]
  ! MAYOR_O_IGUAL_QUE [ reduce using rule 13 (valor -> numero .) ]

    operador_aritmentico           shift and go to state 135
    operador_condicional           shift and go to state 136

state 50

    (14) valor -> BOOL .

    IGUAL_IGUAL     reduce using rule 14 (valor -> BOOL .)
    NO_IGUAL        reduce using rule 14 (valor -> BOOL .)
    MENOR_QUE       reduce using rule 14 (valor -> BOOL .)
    MENOR_O_IGUAL_QUE reduce using rule 14 (valor -> BOOL .)
    MAYOR_QUE       reduce using rule 14 (valor -> BOOL .)
    MAYOR_O_IGUAL_QUE reduce using rule 14 (valor -> BOOL .)
    $end            reduce using rule 14 (valor -> BOOL .)
    LLAVE_DER       reduce using rule 14 (valor -> BOOL .)
    END_OF_LINE     reduce using rule 14 (valor -> BOOL .)
    COMA            reduce using rule 14 (valor -> BOOL .)
    PAR_DER         reduce using rule 14 (valor -> BOOL .)
    DOS_PUNTOS      reduce using rule 14 (valor -> BOOL .)


state 51

    (15) valor -> STRING .

    IGUAL_IGUAL     reduce using rule 15 (valor -> STRING .)
    NO_IGUAL        reduce using rule 15 (valor -> STRING .)
    MENOR_QUE       reduce using rule 15 (valor -> STRING .)
    MENOR_O_IGUAL_QUE reduce using rule 15 (valor -> STRING .)
    MAYOR_QUE       reduce using rule 15 (valor -> STRING .)
    MAYOR_O_IGUAL_QUE reduce using rule 15 (valor -> STRING .)
    $end            reduce using rule 15 (valor -> STRING .)
    LLAVE_DER       reduce using rule 15 (valor -> STRING .)
    END_OF_LINE     reduce using rule 15 (valor -> STRING .)
    COMA            reduce using rule 15 (valor -> STRING .)
    PAR_DER         reduce using rule 15 (valor -> STRING .)
    DOS_PUNTOS      reduce using rule 15 (valor -> STRING .)


state 52

    (135) while -> while_normal .

    $end            reduce using rule 135 (while -> while_normal .)
    LLAVE_DER       reduce using rule 135 (while -> while_normal .)


state 53

    (136) while -> while_do .

    $end            reduce using rule 136 (while -> while_do .)
    LLAVE_DER       reduce using rule 136 (while -> while_do .)


state 54

    (149) switch_case -> SWITCH . PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER

    PAR_IZQ         shift and go to state 137


state 55

    (162) for -> FOR . PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    PAR_IZQ         shift and go to state 138


state 56

    (182) lista -> LIST . tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (128) declaracionList -> LIST . tipoLista IDENTIFICADOR
    (183) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 140

    tipoLista                      shift and go to state 139

state 57

    (184) pila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (130) declaracionPila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    MENOR_QUE       shift and go to state 141


state 58

    (203) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ STRING PAR_DER
    (204) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> CONSOLE_WRITELINE . PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> CONSOLE_WRITELINE . PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER

    PAR_IZQ         shift and go to state 142


state 59

    (207) salida_tres -> CONSOLE_READLINE . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 143


state 60

    (210) funcion_tipo_uno -> modificador_acceso . VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (211) funcion_tipo_tres -> modificador_acceso . VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    VOID            shift and go to state 144


state 61

    (22) valor_tipo -> CHAR_TYPE .

    IDENTIFICADOR   reduce using rule 22 (valor_tipo -> CHAR_TYPE .)
    OP_TERNARIO     reduce using rule 22 (valor_tipo -> CHAR_TYPE .)


state 62

    (23) valor_tipo -> FLOAT_TYPE .

    IDENTIFICADOR   reduce using rule 23 (valor_tipo -> FLOAT_TYPE .)
    OP_TERNARIO     reduce using rule 23 (valor_tipo -> FLOAT_TYPE .)


state 63

    (24) valor_tipo -> DOUBLE_TYPE .

    IDENTIFICADOR   reduce using rule 24 (valor_tipo -> DOUBLE_TYPE .)
    OP_TERNARIO     reduce using rule 24 (valor_tipo -> DOUBLE_TYPE .)


state 64

    (25) valor_tipo -> INT_TYPE .

    IDENTIFICADOR   reduce using rule 25 (valor_tipo -> INT_TYPE .)
    OP_TERNARIO     reduce using rule 25 (valor_tipo -> INT_TYPE .)


state 65

    (26) valor_tipo -> BOOL_TYPE .

    IDENTIFICADOR   reduce using rule 26 (valor_tipo -> BOOL_TYPE .)
    OP_TERNARIO     reduce using rule 26 (valor_tipo -> BOOL_TYPE .)


state 66

    (27) valor_tipo -> STRING_TYPE .

    IDENTIFICADOR   reduce using rule 27 (valor_tipo -> STRING_TYPE .)
    OP_TERNARIO     reduce using rule 27 (valor_tipo -> STRING_TYPE .)


state 67

    (125) declaracionEstructuraD -> declaracionList .

    IGUAL           reduce using rule 125 (declaracionEstructuraD -> declaracionList .)
    END_OF_LINE     reduce using rule 125 (declaracionEstructuraD -> declaracionList .)
    COMA            reduce using rule 125 (declaracionEstructuraD -> declaracionList .)
    PAR_DER         reduce using rule 125 (declaracionEstructuraD -> declaracionList .)


state 68

    (126) declaracionEstructuraD -> declaracionQueue .

    IGUAL           reduce using rule 126 (declaracionEstructuraD -> declaracionQueue .)
    END_OF_LINE     reduce using rule 126 (declaracionEstructuraD -> declaracionQueue .)
    COMA            reduce using rule 126 (declaracionEstructuraD -> declaracionQueue .)
    PAR_DER         reduce using rule 126 (declaracionEstructuraD -> declaracionQueue .)


state 69

    (127) declaracionEstructuraD -> declaracionPila .

    IGUAL           reduce using rule 127 (declaracionEstructuraD -> declaracionPila .)
    END_OF_LINE     reduce using rule 127 (declaracionEstructuraD -> declaracionPila .)
    COMA            reduce using rule 127 (declaracionEstructuraD -> declaracionPila .)
    PAR_DER         reduce using rule 127 (declaracionEstructuraD -> declaracionPila .)


state 70

    (19) numero -> INT .

    SUMA            reduce using rule 19 (numero -> INT .)
    RESTA           reduce using rule 19 (numero -> INT .)
    MULTIPLICACION  reduce using rule 19 (numero -> INT .)
    DIVISION        reduce using rule 19 (numero -> INT .)
    MODULO          reduce using rule 19 (numero -> INT .)
    IGUAL_IGUAL     reduce using rule 19 (numero -> INT .)
    NO_IGUAL        reduce using rule 19 (numero -> INT .)
    MENOR_QUE       reduce using rule 19 (numero -> INT .)
    MENOR_O_IGUAL_QUE reduce using rule 19 (numero -> INT .)
    MAYOR_QUE       reduce using rule 19 (numero -> INT .)
    MAYOR_O_IGUAL_QUE reduce using rule 19 (numero -> INT .)
    $end            reduce using rule 19 (numero -> INT .)
    LLAVE_DER       reduce using rule 19 (numero -> INT .)
    END_OF_LINE     reduce using rule 19 (numero -> INT .)
    COMA            reduce using rule 19 (numero -> INT .)
    PAR_DER         reduce using rule 19 (numero -> INT .)
    DOS_PUNTOS      reduce using rule 19 (numero -> INT .)


state 71

    (17) numero -> FLOAT .

    SUMA            reduce using rule 17 (numero -> FLOAT .)
    RESTA           reduce using rule 17 (numero -> FLOAT .)
    MULTIPLICACION  reduce using rule 17 (numero -> FLOAT .)
    DIVISION        reduce using rule 17 (numero -> FLOAT .)
    MODULO          reduce using rule 17 (numero -> FLOAT .)
    IGUAL_IGUAL     reduce using rule 17 (numero -> FLOAT .)
    NO_IGUAL        reduce using rule 17 (numero -> FLOAT .)
    MENOR_QUE       reduce using rule 17 (numero -> FLOAT .)
    MENOR_O_IGUAL_QUE reduce using rule 17 (numero -> FLOAT .)
    MAYOR_QUE       reduce using rule 17 (numero -> FLOAT .)
    MAYOR_O_IGUAL_QUE reduce using rule 17 (numero -> FLOAT .)
    $end            reduce using rule 17 (numero -> FLOAT .)
    LLAVE_DER       reduce using rule 17 (numero -> FLOAT .)
    END_OF_LINE     reduce using rule 17 (numero -> FLOAT .)
    COMA            reduce using rule 17 (numero -> FLOAT .)
    PAR_DER         reduce using rule 17 (numero -> FLOAT .)
    DOS_PUNTOS      reduce using rule 17 (numero -> FLOAT .)


state 72

    (18) numero -> DOUBLE .

    SUMA            reduce using rule 18 (numero -> DOUBLE .)
    RESTA           reduce using rule 18 (numero -> DOUBLE .)
    MULTIPLICACION  reduce using rule 18 (numero -> DOUBLE .)
    DIVISION        reduce using rule 18 (numero -> DOUBLE .)
    MODULO          reduce using rule 18 (numero -> DOUBLE .)
    IGUAL_IGUAL     reduce using rule 18 (numero -> DOUBLE .)
    NO_IGUAL        reduce using rule 18 (numero -> DOUBLE .)
    MENOR_QUE       reduce using rule 18 (numero -> DOUBLE .)
    MENOR_O_IGUAL_QUE reduce using rule 18 (numero -> DOUBLE .)
    MAYOR_QUE       reduce using rule 18 (numero -> DOUBLE .)
    MAYOR_O_IGUAL_QUE reduce using rule 18 (numero -> DOUBLE .)
    $end            reduce using rule 18 (numero -> DOUBLE .)
    LLAVE_DER       reduce using rule 18 (numero -> DOUBLE .)
    END_OF_LINE     reduce using rule 18 (numero -> DOUBLE .)
    COMA            reduce using rule 18 (numero -> DOUBLE .)
    PAR_DER         reduce using rule 18 (numero -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 18 (numero -> DOUBLE .)


state 73

    (137) while_normal -> WHILE . PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER

    PAR_IZQ         shift and go to state 145


state 74

    (138) while_do -> DO . LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    LLAVE_IZQ       shift and go to state 146


state 75

    (35) modificador_acceso -> PRIVATE .

    VOID            reduce using rule 35 (modificador_acceso -> PRIVATE .)


state 76

    (36) modificador_acceso -> PROTECTED .

    VOID            reduce using rule 36 (modificador_acceso -> PROTECTED .)


state 77

    (37) modificador_acceso -> PUBLIC .

    VOID            reduce using rule 37 (modificador_acceso -> PUBLIC .)


state 78

    (129) declaracionQueue -> QUEUE . tipoLista IDENTIFICADOR
    (183) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 140

    tipoLista                      shift and go to state 147

state 79

    (1) body -> asignacion END_OF_LINE .

    $end            reduce using rule 1 (body -> asignacion END_OF_LINE .)
    LLAVE_DER       reduce using rule 1 (body -> asignacion END_OF_LINE .)


state 80

    (5) body -> expresion END_OF_LINE .

    $end            reduce using rule 5 (body -> expresion END_OF_LINE .)
    LLAVE_DER       reduce using rule 5 (body -> expresion END_OF_LINE .)


state 81

    (6) body -> salida_entrada END_OF_LINE .

    $end            reduce using rule 6 (body -> salida_entrada END_OF_LINE .)
    LLAVE_DER       reduce using rule 6 (body -> salida_entrada END_OF_LINE .)


state 82

    (8) body -> declaracion END_OF_LINE .

    $end            reduce using rule 8 (body -> declaracion END_OF_LINE .)
    LLAVE_DER       reduce using rule 8 (body -> declaracion END_OF_LINE .)


state 83

    (10) body -> funciones_estructura_datos END_OF_LINE .

    $end            reduce using rule 10 (body -> funciones_estructura_datos END_OF_LINE .)
    LLAVE_DER       reduce using rule 10 (body -> funciones_estructura_datos END_OF_LINE .)


state 84

    (131) comparacion -> valor operador_realacional . valor
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    IDENTIFICADOR   shift and go to state 150
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    valor                          shift and go to state 148
    numero                         shift and go to state 149

state 85

    (38) operador_realacional -> IGUAL_IGUAL .

    CHAR            reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    BOOL            reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    STRING          reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    IDENTIFICADOR   reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    FLOAT           reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    DOUBLE          reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)
    INT             reduce using rule 38 (operador_realacional -> IGUAL_IGUAL .)


state 86

    (39) operador_realacional -> NO_IGUAL .

    CHAR            reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    BOOL            reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    STRING          reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    IDENTIFICADOR   reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    FLOAT           reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    DOUBLE          reduce using rule 39 (operador_realacional -> NO_IGUAL .)
    INT             reduce using rule 39 (operador_realacional -> NO_IGUAL .)


state 87

    (40) operador_realacional -> MENOR_QUE .

    CHAR            reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    BOOL            reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    STRING          reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    IDENTIFICADOR   reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    FLOAT           reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    DOUBLE          reduce using rule 40 (operador_realacional -> MENOR_QUE .)
    INT             reduce using rule 40 (operador_realacional -> MENOR_QUE .)


state 88

    (41) operador_realacional -> MENOR_O_IGUAL_QUE .

    CHAR            reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    BOOL            reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    STRING          reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    IDENTIFICADOR   reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)
    INT             reduce using rule 41 (operador_realacional -> MENOR_O_IGUAL_QUE .)


state 89

    (42) operador_realacional -> MAYOR_QUE .

    CHAR            reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    BOOL            reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    STRING          reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    IDENTIFICADOR   reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    FLOAT           reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    DOUBLE          reduce using rule 42 (operador_realacional -> MAYOR_QUE .)
    INT             reduce using rule 42 (operador_realacional -> MAYOR_QUE .)


state 90

    (43) operador_realacional -> MAYOR_O_IGUAL_QUE .

    CHAR            reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    BOOL            reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    STRING          reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    IDENTIFICADOR   reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)
    INT             reduce using rule 43 (operador_realacional -> MAYOR_O_IGUAL_QUE .)


state 91

    (110) declaracion -> valor_tipo IDENTIFICADOR .
    (66) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (67) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (68) asignacionSimple -> IDENTIFICADOR . IGUAL salida_tres
    (69) asignacionSimple -> IDENTIFICADOR . IGUAL index

    END_OF_LINE     reduce using rule 110 (declaracion -> valor_tipo IDENTIFICADOR .)
    COMA            reduce using rule 110 (declaracion -> valor_tipo IDENTIFICADOR .)
    PAR_DER         reduce using rule 110 (declaracion -> valor_tipo IDENTIFICADOR .)
    IGUAL           shift and go to state 151


state 92

    (117) declaracionAsignacion -> valor_tipo asignacionSimple .

    END_OF_LINE     reduce using rule 117 (declaracionAsignacion -> valor_tipo asignacionSimple .)
    COMA            reduce using rule 117 (declaracionAsignacion -> valor_tipo asignacionSimple .)
    PAR_DER         reduce using rule 117 (declaracionAsignacion -> valor_tipo asignacionSimple .)


state 93

    (115) declaracionNull -> valor_tipo OP_TERNARIO . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 152


state 94

    (116) declaracionClase -> IDENTIFICADOR IDENTIFICADOR .

    IGUAL           reduce using rule 116 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 116 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)
    COMA            reduce using rule 116 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)
    PAR_DER         reduce using rule 116 (declaracionClase -> IDENTIFICADOR IDENTIFICADOR .)


state 95

    (66) asignacionSimple -> IDENTIFICADOR IGUAL . valor
    (67) asignacionSimple -> IDENTIFICADOR IGUAL . expresion
    (68) asignacionSimple -> IDENTIFICADOR IGUAL . salida_tres
    (69) asignacionSimple -> IDENTIFICADOR IGUAL . index
    (71) asignacionClase -> IDENTIFICADOR IGUAL . NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> IDENTIFICADOR IGUAL . asignacionPila
    (73) asignacionEstructuraD -> IDENTIFICADOR IGUAL . asignacionQueue
    (74) asignacionEstructuraD -> IDENTIFICADOR IGUAL . asignacionList
    (70) asignacionNull -> IDENTIFICADOR IGUAL . NULL
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (190) expresion -> . expresion_operacion_aritmetica
    (191) expresion -> . expresion_condicional
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (75) asignacionPila -> . NEW STACK tipoLista PAR_IZQ PAR_DER
    (76) asignacionQueue -> . NEW QUEUE tipoLista PAR_IZQ PAR_DER
    (77) asignacionList -> . NEW LIST tipoLista PAR_IZQ PAR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (192) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (194) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (196) expresion_condicional -> . numero operador_condicional numero
    (197) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (199) expresion_condicional -> . numero operador_condicional IDENTIFICADOR

    NEW             shift and go to state 158
    NULL            shift and go to state 162
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    IDENTIFICADOR   shift and go to state 153
    CONSOLE_READLINE shift and go to state 59
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    valor                          shift and go to state 154
    expresion                      shift and go to state 155
    salida_tres                    shift and go to state 156
    index                          shift and go to state 157
    asignacionPila                 shift and go to state 159
    asignacionQueue                shift and go to state 160
    asignacionList                 shift and go to state 161
    numero                         shift and go to state 49
    expresion_operacion_aritmetica shift and go to state 26
    expresion_condicional          shift and go to state 27

state 96

    (194) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico . numero
    (195) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 163
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    numero                         shift and go to state 164

state 97

    (197) expresion_condicional -> IDENTIFICADOR operador_condicional . IDENTIFICADOR
    (198) expresion_condicional -> IDENTIFICADOR operador_condicional . numero
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 165
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    numero                         shift and go to state 166

state 98

    (187) stack_push -> IDENTIFICADOR PUNTO . PUSH PAR_IZQ valor PAR_DER
    (188) stack_push -> IDENTIFICADOR PUNTO . PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (189) stack_pop -> IDENTIFICADOR PUNTO . POP PAR_IZQ PAR_DER

    PUSH            shift and go to state 167
    POP             shift and go to state 168


state 99

    (86) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . BOOL
    (87) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . expresion_condicional
    (88) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic . INT
    (196) expresion_condicional -> . numero operador_condicional numero
    (197) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (199) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BOOL            shift and go to state 170
    IDENTIFICADOR   shift and go to state 169
    INT             shift and go to state 172
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72

    expresion_condicional          shift and go to state 171
    numero                         shift and go to state 173

state 100

    (90) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . numero
    (91) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (192) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (194) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 174
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    numero                         shift and go to state 175
    expresion_operacion_aritmetica shift and go to state 176

state 101

    (93) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . valor
    (94) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . expresion
    (95) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . asignacionPila
    (96) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . asignacionQueue
    (97) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL . asignacionList
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (190) expresion -> . expresion_operacion_aritmetica
    (191) expresion -> . expresion_condicional
    (75) asignacionPila -> . NEW STACK tipoLista PAR_IZQ PAR_DER
    (76) asignacionQueue -> . NEW QUEUE tipoLista PAR_IZQ PAR_DER
    (77) asignacionList -> . NEW LIST tipoLista PAR_IZQ PAR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (192) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (194) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (196) expresion_condicional -> . numero operador_condicional numero
    (197) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (199) expresion_condicional -> . numero operador_condicional IDENTIFICADOR

    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    IDENTIFICADOR   shift and go to state 177
    NEW             shift and go to state 183
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    valor                          shift and go to state 178
    expresion                      shift and go to state 179
    asignacionPila                 shift and go to state 180
    asignacionQueue                shift and go to state 181
    asignacionList                 shift and go to state 182
    numero                         shift and go to state 49
    expresion_operacion_aritmetica shift and go to state 26
    expresion_condicional          shift and go to state 27

state 102

    (98) asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift . IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift . INT

    IDENTIFICADOR   shift and go to state 184
    INT             shift and go to state 185


state 103

    (80) index -> IDENTIFICADOR COR_IZQ . INT COR_DER
    (81) index -> IDENTIFICADOR COR_IZQ . IDENTIFICADOR COR_DER

    INT             shift and go to state 187
    IDENTIFICADOR   shift and go to state 186


state 104

    (44) operador_aritmentico -> SUMA .

    IDENTIFICADOR   reduce using rule 44 (operador_aritmentico -> SUMA .)
    FLOAT           reduce using rule 44 (operador_aritmentico -> SUMA .)
    DOUBLE          reduce using rule 44 (operador_aritmentico -> SUMA .)
    INT             reduce using rule 44 (operador_aritmentico -> SUMA .)


state 105

    (45) operador_aritmentico -> RESTA .

    IDENTIFICADOR   reduce using rule 45 (operador_aritmentico -> RESTA .)
    FLOAT           reduce using rule 45 (operador_aritmentico -> RESTA .)
    DOUBLE          reduce using rule 45 (operador_aritmentico -> RESTA .)
    INT             reduce using rule 45 (operador_aritmentico -> RESTA .)


state 106

    (46) operador_aritmentico -> MULTIPLICACION .

    IDENTIFICADOR   reduce using rule 46 (operador_aritmentico -> MULTIPLICACION .)
    FLOAT           reduce using rule 46 (operador_aritmentico -> MULTIPLICACION .)
    DOUBLE          reduce using rule 46 (operador_aritmentico -> MULTIPLICACION .)
    INT             reduce using rule 46 (operador_aritmentico -> MULTIPLICACION .)


state 107

    (47) operador_aritmentico -> DIVISION .

    IDENTIFICADOR   reduce using rule 47 (operador_aritmentico -> DIVISION .)
    FLOAT           reduce using rule 47 (operador_aritmentico -> DIVISION .)
    DOUBLE          reduce using rule 47 (operador_aritmentico -> DIVISION .)
    INT             reduce using rule 47 (operador_aritmentico -> DIVISION .)


state 108

    (48) operador_aritmentico -> MODULO .

    IDENTIFICADOR   reduce using rule 48 (operador_aritmentico -> MODULO .)
    FLOAT           reduce using rule 48 (operador_aritmentico -> MODULO .)
    DOUBLE          reduce using rule 48 (operador_aritmentico -> MODULO .)
    INT             reduce using rule 48 (operador_aritmentico -> MODULO .)


state 109

    (49) operador_condicional -> IGUAL_IGUAL .

    IDENTIFICADOR   reduce using rule 49 (operador_condicional -> IGUAL_IGUAL .)
    FLOAT           reduce using rule 49 (operador_condicional -> IGUAL_IGUAL .)
    DOUBLE          reduce using rule 49 (operador_condicional -> IGUAL_IGUAL .)
    INT             reduce using rule 49 (operador_condicional -> IGUAL_IGUAL .)


state 110

    (50) operador_condicional -> NO_IGUAL .

    IDENTIFICADOR   reduce using rule 50 (operador_condicional -> NO_IGUAL .)
    FLOAT           reduce using rule 50 (operador_condicional -> NO_IGUAL .)
    DOUBLE          reduce using rule 50 (operador_condicional -> NO_IGUAL .)
    INT             reduce using rule 50 (operador_condicional -> NO_IGUAL .)


state 111

    (51) operador_condicional -> MENOR_QUE .

    IDENTIFICADOR   reduce using rule 51 (operador_condicional -> MENOR_QUE .)
    FLOAT           reduce using rule 51 (operador_condicional -> MENOR_QUE .)
    DOUBLE          reduce using rule 51 (operador_condicional -> MENOR_QUE .)
    INT             reduce using rule 51 (operador_condicional -> MENOR_QUE .)


state 112

    (52) operador_condicional -> MENOR_O_IGUAL_QUE .

    IDENTIFICADOR   reduce using rule 52 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 52 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 52 (operador_condicional -> MENOR_O_IGUAL_QUE .)
    INT             reduce using rule 52 (operador_condicional -> MENOR_O_IGUAL_QUE .)


state 113

    (53) operador_condicional -> MAYOR_QUE .

    IDENTIFICADOR   reduce using rule 53 (operador_condicional -> MAYOR_QUE .)
    FLOAT           reduce using rule 53 (operador_condicional -> MAYOR_QUE .)
    DOUBLE          reduce using rule 53 (operador_condicional -> MAYOR_QUE .)
    INT             reduce using rule 53 (operador_condicional -> MAYOR_QUE .)


state 114

    (54) operador_condicional -> MAYOR_O_IGUAL_QUE .

    IDENTIFICADOR   reduce using rule 54 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    FLOAT           reduce using rule 54 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    DOUBLE          reduce using rule 54 (operador_condicional -> MAYOR_O_IGUAL_QUE .)
    INT             reduce using rule 54 (operador_condicional -> MAYOR_O_IGUAL_QUE .)


state 115

    (105) operadoresCompuestosLogic -> AND_EQUAL .

    BOOL            reduce using rule 105 (operadoresCompuestosLogic -> AND_EQUAL .)
    IDENTIFICADOR   reduce using rule 105 (operadoresCompuestosLogic -> AND_EQUAL .)
    INT             reduce using rule 105 (operadoresCompuestosLogic -> AND_EQUAL .)
    FLOAT           reduce using rule 105 (operadoresCompuestosLogic -> AND_EQUAL .)
    DOUBLE          reduce using rule 105 (operadoresCompuestosLogic -> AND_EQUAL .)


state 116

    (106) operadoresCompuestosLogic -> OR_EQUAL .

    BOOL            reduce using rule 106 (operadoresCompuestosLogic -> OR_EQUAL .)
    IDENTIFICADOR   reduce using rule 106 (operadoresCompuestosLogic -> OR_EQUAL .)
    INT             reduce using rule 106 (operadoresCompuestosLogic -> OR_EQUAL .)
    FLOAT           reduce using rule 106 (operadoresCompuestosLogic -> OR_EQUAL .)
    DOUBLE          reduce using rule 106 (operadoresCompuestosLogic -> OR_EQUAL .)


state 117

    (107) operadoresCompuestosLogic -> EXC_OREQUAL .

    BOOL            reduce using rule 107 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    IDENTIFICADOR   reduce using rule 107 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    INT             reduce using rule 107 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    FLOAT           reduce using rule 107 (operadoresCompuestosLogic -> EXC_OREQUAL .)
    DOUBLE          reduce using rule 107 (operadoresCompuestosLogic -> EXC_OREQUAL .)


state 118

    (100) operadoresCompuestosNumber -> AUMENTADO .

    IDENTIFICADOR   reduce using rule 100 (operadoresCompuestosNumber -> AUMENTADO .)
    FLOAT           reduce using rule 100 (operadoresCompuestosNumber -> AUMENTADO .)
    DOUBLE          reduce using rule 100 (operadoresCompuestosNumber -> AUMENTADO .)
    INT             reduce using rule 100 (operadoresCompuestosNumber -> AUMENTADO .)


state 119

    (101) operadoresCompuestosNumber -> DECREMENTADO .

    IDENTIFICADOR   reduce using rule 101 (operadoresCompuestosNumber -> DECREMENTADO .)
    FLOAT           reduce using rule 101 (operadoresCompuestosNumber -> DECREMENTADO .)
    DOUBLE          reduce using rule 101 (operadoresCompuestosNumber -> DECREMENTADO .)
    INT             reduce using rule 101 (operadoresCompuestosNumber -> DECREMENTADO .)


state 120

    (102) operadoresCompuestosNumber -> MULTIPLICADO_POR .

    IDENTIFICADOR   reduce using rule 102 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    FLOAT           reduce using rule 102 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    DOUBLE          reduce using rule 102 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)
    INT             reduce using rule 102 (operadoresCompuestosNumber -> MULTIPLICADO_POR .)


state 121

    (103) operadoresCompuestosNumber -> DIVIDIDO_POR .

    IDENTIFICADOR   reduce using rule 103 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    FLOAT           reduce using rule 103 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    DOUBLE          reduce using rule 103 (operadoresCompuestosNumber -> DIVIDIDO_POR .)
    INT             reduce using rule 103 (operadoresCompuestosNumber -> DIVIDIDO_POR .)


state 122

    (104) operadoresCompuestosNumber -> MODULO_DE .

    IDENTIFICADOR   reduce using rule 104 (operadoresCompuestosNumber -> MODULO_DE .)
    FLOAT           reduce using rule 104 (operadoresCompuestosNumber -> MODULO_DE .)
    DOUBLE          reduce using rule 104 (operadoresCompuestosNumber -> MODULO_DE .)
    INT             reduce using rule 104 (operadoresCompuestosNumber -> MODULO_DE .)


state 123

    (108) operadoresCompuestosShift -> LEFTSHIFT_EQUAL .

    IDENTIFICADOR   reduce using rule 108 (operadoresCompuestosShift -> LEFTSHIFT_EQUAL .)
    INT             reduce using rule 108 (operadoresCompuestosShift -> LEFTSHIFT_EQUAL .)


state 124

    (109) operadoresCompuestosShift -> RIGHTSHIFT_EQUAL .

    IDENTIFICADOR   reduce using rule 109 (operadoresCompuestosShift -> RIGHTSHIFT_EQUAL .)
    INT             reduce using rule 109 (operadoresCompuestosShift -> RIGHTSHIFT_EQUAL .)


state 125

    (124) declaracionAsignacion -> declaracionEstructuraD IGUAL . NULL

    NULL            shift and go to state 188


state 126

    (118) declaracionAsignacion -> declaracionClase IGUAL . NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> declaracionClase IGUAL . NULL
    (120) declaracionAsignacion -> declaracionClase IGUAL . IDENTIFICADOR

    NEW             shift and go to state 189
    NULL            shift and go to state 191
    IDENTIFICADOR   shift and go to state 190


state 127

    (121) declaracionAsignacion -> declaracionNull IGUAL . valor
    (122) declaracionAsignacion -> declaracionNull IGUAL . expresion
    (123) declaracionAsignacion -> declaracionNull IGUAL . NULL
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (190) expresion -> . expresion_operacion_aritmetica
    (191) expresion -> . expresion_condicional
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (192) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (194) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (196) expresion_condicional -> . numero operador_condicional numero
    (197) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (199) expresion_condicional -> . numero operador_condicional IDENTIFICADOR

    NULL            shift and go to state 194
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    IDENTIFICADOR   shift and go to state 177
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    valor                          shift and go to state 192
    expresion                      shift and go to state 193
    numero                         shift and go to state 49
    expresion_operacion_aritmetica shift and go to state 26
    expresion_condicional          shift and go to state 27

state 128

    (220) lambda_exp -> lambdaArg LAMBDA . lambdaCuerpo
    (229) lambdaCuerpo -> . expresion
    (230) lambdaCuerpo -> . salida_uno
    (231) lambdaCuerpo -> . salida_dos
    (190) expresion -> . expresion_operacion_aritmetica
    (191) expresion -> . expresion_condicional
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (192) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (194) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (196) expresion_condicional -> . numero operador_condicional numero
    (197) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (199) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    CONSOLE_WRITELINE shift and go to state 58
    IDENTIFICADOR   shift and go to state 199
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    lambdaCuerpo                   shift and go to state 195
    expresion                      shift and go to state 196
    salida_uno                     shift and go to state 197
    salida_dos                     shift and go to state 198
    expresion_operacion_aritmetica shift and go to state 26
    expresion_condicional          shift and go to state 27
    numero                         shift and go to state 200

state 129

    (78) asignacionIndex -> index IGUAL . index
    (79) asignacionIndex -> index IGUAL . valor
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 203
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    index                          shift and go to state 201
    valor                          shift and go to state 202
    numero                         shift and go to state 149

state 130

    (221) lambdaArg -> PAR_IZQ PAR_DER .

    LAMBDA          reduce using rule 221 (lambdaArg -> PAR_IZQ PAR_DER .)


state 131

    (222) lambdaArg -> PAR_IZQ lambdaParametrosUno . PAR_DER

    PAR_DER         shift and go to state 204


state 132

    (223) lambdaArg -> PAR_IZQ lambdaParametrosDos . PAR_DER

    PAR_DER         shift and go to state 205


state 133

    (225) lambdaParametrosUno -> valor_tipo . IDENTIFICADOR
    (226) lambdaParametrosUno -> valor_tipo . IDENTIFICADOR COMA lambdaParametrosUno

    IDENTIFICADOR   shift and go to state 206


state 134

    (227) lambdaParametrosDos -> IDENTIFICADOR .
    (228) lambdaParametrosDos -> IDENTIFICADOR . COMA lambdaParametrosDos

    PAR_DER         reduce using rule 227 (lambdaParametrosDos -> IDENTIFICADOR .)
    COMA            shift and go to state 207


state 135

    (192) expresion_operacion_aritmetica -> numero operador_aritmentico . numero
    (193) expresion_operacion_aritmetica -> numero operador_aritmentico . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 209
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    numero                         shift and go to state 208

state 136

    (196) expresion_condicional -> numero operador_condicional . numero
    (199) expresion_condicional -> numero operador_condicional . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 211
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    numero                         shift and go to state 210

state 137

    (149) switch_case -> SWITCH PAR_IZQ . valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    IDENTIFICADOR   shift and go to state 150
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    valor                          shift and go to state 212
    numero                         shift and go to state 149

state 138

    (162) for -> FOR PAR_IZQ . forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (171) forInicializador -> . tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador
    (172) forInicializador -> . IDENTIFICADOR IGUAL valorForInicializador
    (173) tipoDatoForInicializador -> . FLOAT_TYPE
    (174) tipoDatoForInicializador -> . DOUBLE_TYPE
    (175) tipoDatoForInicializador -> . INT_TYPE

    IDENTIFICADOR   shift and go to state 215
    FLOAT_TYPE      shift and go to state 216
    DOUBLE_TYPE     shift and go to state 217
    INT_TYPE        shift and go to state 218

    forInicializador               shift and go to state 213
    tipoDatoForInicializador       shift and go to state 214

state 139

    (182) lista -> LIST tipoLista . IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (128) declaracionList -> LIST tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 219


state 140

    (183) tipoLista -> MENOR_QUE . valor_tipo_inicializador MAYOR_QUE
    (28) valor_tipo_inicializador -> . FLOAT_TYPE
    (29) valor_tipo_inicializador -> . DOUBLE_TYPE
    (30) valor_tipo_inicializador -> . STRING_TYPE
    (31) valor_tipo_inicializador -> . INT_TYPE
    (32) valor_tipo_inicializador -> . BOOL_TYPE
    (33) valor_tipo_inicializador -> . CHAR_TYPE
    (34) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 221
    DOUBLE_TYPE     shift and go to state 222
    STRING_TYPE     shift and go to state 223
    INT_TYPE        shift and go to state 224
    BOOL_TYPE       shift and go to state 225
    CHAR_TYPE       shift and go to state 226
    IDENTIFICADOR   shift and go to state 227

    valor_tipo_inicializador       shift and go to state 220

state 141

    (184) pila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (130) declaracionPila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (28) valor_tipo_inicializador -> . FLOAT_TYPE
    (29) valor_tipo_inicializador -> . DOUBLE_TYPE
    (30) valor_tipo_inicializador -> . STRING_TYPE
    (31) valor_tipo_inicializador -> . INT_TYPE
    (32) valor_tipo_inicializador -> . BOOL_TYPE
    (33) valor_tipo_inicializador -> . CHAR_TYPE
    (34) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 221
    DOUBLE_TYPE     shift and go to state 222
    STRING_TYPE     shift and go to state 223
    INT_TYPE        shift and go to state 224
    BOOL_TYPE       shift and go to state 225
    CHAR_TYPE       shift and go to state 226
    IDENTIFICADOR   shift and go to state 227

    valor_tipo_inicializador       shift and go to state 228

state 142

    (203) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . STRING PAR_DER
    (204) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . operacion_string PAR_DER
    (205) salida_uno -> CONSOLE_WRITELINE PAR_IZQ . IDENTIFICADOR PAR_DER
    (206) salida_dos -> CONSOLE_WRITELINE PAR_IZQ . C_CADENA_INTERPOLADA STRING PAR_DER
    (55) operacion_string -> . STRING SUMA STRING
    (56) operacion_string -> . STRING SUMA IDENTIFICADOR
    (57) operacion_string -> . IDENTIFICADOR SUMA STRING
    (58) operacion_string -> . IDENTIFICADOR SUMA IDENTIFICADOR

    STRING          shift and go to state 229
    IDENTIFICADOR   shift and go to state 231
    C_CADENA_INTERPOLADA shift and go to state 232

    operacion_string               shift and go to state 230

state 143

    (207) salida_tres -> CONSOLE_READLINE PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 233


state 144

    (210) funcion_tipo_uno -> modificador_acceso VOID . IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (211) funcion_tipo_tres -> modificador_acceso VOID . IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    IDENTIFICADOR   shift and go to state 234


state 145

    (137) while_normal -> WHILE PAR_IZQ . expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (196) expresion_condicional -> . numero operador_condicional numero
    (197) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (199) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 236
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    expresion_condicional          shift and go to state 235
    numero                         shift and go to state 173

state 146

    (138) while_do -> DO LLAVE_IZQ . body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (139) body_while -> . asignacion END_OF_LINE
    (140) body_while -> . declaracion END_OF_LINE
    (141) body_while -> . salida_entrada END_OF_LINE
    (142) body_while -> . BREAK END_OF_LINE
    (143) body_while -> . CONTINUE END_OF_LINE
    (144) body_while -> . asignacion END_OF_LINE body_while
    (145) body_while -> . declaracion END_OF_LINE body_while
    (146) body_while -> . salida_entrada END_OF_LINE body_while
    (147) body_while -> . BREAK END_OF_LINE body_while
    (148) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    IDENTIFICADOR   shift and go to state 243
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    body_while                     shift and go to state 237
    asignacion                     shift and go to state 238
    declaracion                    shift and go to state 239
    salida_entrada                 shift and go to state 240
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 147

    (129) declaracionQueue -> QUEUE tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 246


state 148

    (131) comparacion -> valor operador_realacional valor .

    $end            reduce using rule 131 (comparacion -> valor operador_realacional valor .)
    LLAVE_DER       reduce using rule 131 (comparacion -> valor operador_realacional valor .)
    END_OF_LINE     reduce using rule 131 (comparacion -> valor operador_realacional valor .)


state 149

    (13) valor -> numero .

    $end            reduce using rule 13 (valor -> numero .)
    LLAVE_DER       reduce using rule 13 (valor -> numero .)
    END_OF_LINE     reduce using rule 13 (valor -> numero .)
    PAR_DER         reduce using rule 13 (valor -> numero .)
    DOS_PUNTOS      reduce using rule 13 (valor -> numero .)
    IGUAL_IGUAL     reduce using rule 13 (valor -> numero .)
    NO_IGUAL        reduce using rule 13 (valor -> numero .)
    MENOR_QUE       reduce using rule 13 (valor -> numero .)
    MENOR_O_IGUAL_QUE reduce using rule 13 (valor -> numero .)
    MAYOR_QUE       reduce using rule 13 (valor -> numero .)
    MAYOR_O_IGUAL_QUE reduce using rule 13 (valor -> numero .)


state 150

    (16) valor -> IDENTIFICADOR .

    $end            reduce using rule 16 (valor -> IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 16 (valor -> IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 16 (valor -> IDENTIFICADOR .)
    PAR_DER         reduce using rule 16 (valor -> IDENTIFICADOR .)
    DOS_PUNTOS      reduce using rule 16 (valor -> IDENTIFICADOR .)


state 151

    (66) asignacionSimple -> IDENTIFICADOR IGUAL . valor
    (67) asignacionSimple -> IDENTIFICADOR IGUAL . expresion
    (68) asignacionSimple -> IDENTIFICADOR IGUAL . salida_tres
    (69) asignacionSimple -> IDENTIFICADOR IGUAL . index
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (190) expresion -> . expresion_operacion_aritmetica
    (191) expresion -> . expresion_condicional
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (192) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (194) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (196) expresion_condicional -> . numero operador_condicional numero
    (197) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (199) expresion_condicional -> . numero operador_condicional IDENTIFICADOR

    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    IDENTIFICADOR   shift and go to state 153
    CONSOLE_READLINE shift and go to state 59
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    valor                          shift and go to state 154
    expresion                      shift and go to state 155
    salida_tres                    shift and go to state 156
    index                          shift and go to state 157
    numero                         shift and go to state 49
    expresion_operacion_aritmetica shift and go to state 26
    expresion_condicional          shift and go to state 27

state 152

    (115) declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .

    IGUAL           reduce using rule 115 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 115 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)
    COMA            reduce using rule 115 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)
    PAR_DER         reduce using rule 115 (declaracionNull -> valor_tipo OP_TERNARIO IDENTIFICADOR .)


state 153

    (16) valor -> IDENTIFICADOR .
    (80) index -> IDENTIFICADOR . COR_IZQ INT COR_DER
    (81) index -> IDENTIFICADOR . COR_IZQ IDENTIFICADOR COR_DER
    (194) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (197) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    END_OF_LINE     reduce using rule 16 (valor -> IDENTIFICADOR .)
    COMA            reduce using rule 16 (valor -> IDENTIFICADOR .)
    PAR_DER         reduce using rule 16 (valor -> IDENTIFICADOR .)
    COR_IZQ         shift and go to state 103
    SUMA            shift and go to state 104
    RESTA           shift and go to state 105
    MULTIPLICACION  shift and go to state 106
    DIVISION        shift and go to state 107
    MODULO          shift and go to state 108
    IGUAL_IGUAL     shift and go to state 109
    NO_IGUAL        shift and go to state 110
    MENOR_QUE       shift and go to state 111
    MENOR_O_IGUAL_QUE shift and go to state 112
    MAYOR_QUE       shift and go to state 113
    MAYOR_O_IGUAL_QUE shift and go to state 114

    operador_aritmentico           shift and go to state 96
    operador_condicional           shift and go to state 97

state 154

    (66) asignacionSimple -> IDENTIFICADOR IGUAL valor .

    END_OF_LINE     reduce using rule 66 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)
    COMA            reduce using rule 66 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)
    PAR_DER         reduce using rule 66 (asignacionSimple -> IDENTIFICADOR IGUAL valor .)


state 155

    (67) asignacionSimple -> IDENTIFICADOR IGUAL expresion .

    END_OF_LINE     reduce using rule 67 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)
    COMA            reduce using rule 67 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)
    PAR_DER         reduce using rule 67 (asignacionSimple -> IDENTIFICADOR IGUAL expresion .)


state 156

    (68) asignacionSimple -> IDENTIFICADOR IGUAL salida_tres .

    END_OF_LINE     reduce using rule 68 (asignacionSimple -> IDENTIFICADOR IGUAL salida_tres .)
    COMA            reduce using rule 68 (asignacionSimple -> IDENTIFICADOR IGUAL salida_tres .)
    PAR_DER         reduce using rule 68 (asignacionSimple -> IDENTIFICADOR IGUAL salida_tres .)


state 157

    (69) asignacionSimple -> IDENTIFICADOR IGUAL index .

    END_OF_LINE     reduce using rule 69 (asignacionSimple -> IDENTIFICADOR IGUAL index .)
    COMA            reduce using rule 69 (asignacionSimple -> IDENTIFICADOR IGUAL index .)
    PAR_DER         reduce using rule 69 (asignacionSimple -> IDENTIFICADOR IGUAL index .)


state 158

    (71) asignacionClase -> IDENTIFICADOR IGUAL NEW . IDENTIFICADOR PAR_IZQ PAR_DER
    (75) asignacionPila -> NEW . STACK tipoLista PAR_IZQ PAR_DER
    (76) asignacionQueue -> NEW . QUEUE tipoLista PAR_IZQ PAR_DER
    (77) asignacionList -> NEW . LIST tipoLista PAR_IZQ PAR_DER

    IDENTIFICADOR   shift and go to state 247
    STACK           shift and go to state 248
    QUEUE           shift and go to state 249
    LIST            shift and go to state 250


state 159

    (72) asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionPila .

    END_OF_LINE     reduce using rule 72 (asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionPila .)


state 160

    (73) asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionQueue .

    END_OF_LINE     reduce using rule 73 (asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionQueue .)


state 161

    (74) asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionList .

    END_OF_LINE     reduce using rule 74 (asignacionEstructuraD -> IDENTIFICADOR IGUAL asignacionList .)


state 162

    (70) asignacionNull -> IDENTIFICADOR IGUAL NULL .

    END_OF_LINE     reduce using rule 70 (asignacionNull -> IDENTIFICADOR IGUAL NULL .)


state 163

    (195) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .

    END_OF_LINE     reduce using rule 195 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    COMA            reduce using rule 195 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    PAR_DER         reduce using rule 195 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    $end            reduce using rule 195 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 195 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico IDENTIFICADOR .)


state 164

    (194) expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .

    END_OF_LINE     reduce using rule 194 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    COMA            reduce using rule 194 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    PAR_DER         reduce using rule 194 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    $end            reduce using rule 194 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)
    LLAVE_DER       reduce using rule 194 (expresion_operacion_aritmetica -> IDENTIFICADOR operador_aritmentico numero .)


state 165

    (197) expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .

    END_OF_LINE     reduce using rule 197 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    COMA            reduce using rule 197 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    PAR_DER         reduce using rule 197 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    $end            reduce using rule 197 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 197 (expresion_condicional -> IDENTIFICADOR operador_condicional IDENTIFICADOR .)


state 166

    (198) expresion_condicional -> IDENTIFICADOR operador_condicional numero .

    END_OF_LINE     reduce using rule 198 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    COMA            reduce using rule 198 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    PAR_DER         reduce using rule 198 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    $end            reduce using rule 198 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)
    LLAVE_DER       reduce using rule 198 (expresion_condicional -> IDENTIFICADOR operador_condicional numero .)


state 167

    (187) stack_push -> IDENTIFICADOR PUNTO PUSH . PAR_IZQ valor PAR_DER
    (188) stack_push -> IDENTIFICADOR PUNTO PUSH . PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER

    PAR_IZQ         shift and go to state 251


state 168

    (189) stack_pop -> IDENTIFICADOR PUNTO POP . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 252


state 169

    (88) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR .
    (197) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    END_OF_LINE     reduce using rule 88 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR .)
    IGUAL_IGUAL     shift and go to state 109
    NO_IGUAL        shift and go to state 110
    MENOR_QUE       shift and go to state 111
    MENOR_O_IGUAL_QUE shift and go to state 112
    MAYOR_QUE       shift and go to state 113
    MAYOR_O_IGUAL_QUE shift and go to state 114

    operador_condicional           shift and go to state 97

state 170

    (86) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL .

    END_OF_LINE     reduce using rule 86 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic BOOL .)


state 171

    (87) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional .

    END_OF_LINE     reduce using rule 87 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic expresion_condicional .)


state 172

    (89) asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic INT .
    (19) numero -> INT .

    END_OF_LINE     reduce using rule 89 (asignacionCompuesta_Logic -> IDENTIFICADOR operadoresCompuestosLogic INT .)
    IGUAL_IGUAL     reduce using rule 19 (numero -> INT .)
    NO_IGUAL        reduce using rule 19 (numero -> INT .)
    MENOR_QUE       reduce using rule 19 (numero -> INT .)
    MENOR_O_IGUAL_QUE reduce using rule 19 (numero -> INT .)
    MAYOR_QUE       reduce using rule 19 (numero -> INT .)
    MAYOR_O_IGUAL_QUE reduce using rule 19 (numero -> INT .)


state 173

    (196) expresion_condicional -> numero . operador_condicional numero
    (199) expresion_condicional -> numero . operador_condicional IDENTIFICADOR
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 109
    NO_IGUAL        shift and go to state 110
    MENOR_QUE       shift and go to state 111
    MENOR_O_IGUAL_QUE shift and go to state 112
    MAYOR_QUE       shift and go to state 113
    MAYOR_O_IGUAL_QUE shift and go to state 114

    operador_condicional           shift and go to state 136

state 174

    (92) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR .
    (194) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO

    END_OF_LINE     reduce using rule 92 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR .)
    SUMA            shift and go to state 104
    RESTA           shift and go to state 105
    MULTIPLICACION  shift and go to state 106
    DIVISION        shift and go to state 107
    MODULO          shift and go to state 108

    operador_aritmentico           shift and go to state 96

state 175

    (90) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero .
    (192) expresion_operacion_aritmetica -> numero . operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> numero . operador_aritmentico IDENTIFICADOR
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO

    END_OF_LINE     reduce using rule 90 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber numero .)
    SUMA            shift and go to state 104
    RESTA           shift and go to state 105
    MULTIPLICACION  shift and go to state 106
    DIVISION        shift and go to state 107
    MODULO          shift and go to state 108

    operador_aritmentico           shift and go to state 135

state 176

    (91) asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica .

    END_OF_LINE     reduce using rule 91 (asignacionCompuesta_Number -> IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica .)


state 177

    (16) valor -> IDENTIFICADOR .
    (194) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (197) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    END_OF_LINE     reduce using rule 16 (valor -> IDENTIFICADOR .)
    COMA            reduce using rule 16 (valor -> IDENTIFICADOR .)
    PAR_DER         reduce using rule 16 (valor -> IDENTIFICADOR .)
    SUMA            shift and go to state 104
    RESTA           shift and go to state 105
    MULTIPLICACION  shift and go to state 106
    DIVISION        shift and go to state 107
    MODULO          shift and go to state 108
    IGUAL_IGUAL     shift and go to state 109
    NO_IGUAL        shift and go to state 110
    MENOR_QUE       shift and go to state 111
    MENOR_O_IGUAL_QUE shift and go to state 112
    MAYOR_QUE       shift and go to state 113
    MAYOR_O_IGUAL_QUE shift and go to state 114

    operador_aritmentico           shift and go to state 96
    operador_condicional           shift and go to state 97

state 178

    (93) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL valor .

    END_OF_LINE     reduce using rule 93 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL valor .)


state 179

    (94) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL expresion .

    END_OF_LINE     reduce using rule 94 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL expresion .)


state 180

    (95) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionPila .

    END_OF_LINE     reduce using rule 95 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionPila .)


state 181

    (96) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionQueue .

    END_OF_LINE     reduce using rule 96 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionQueue .)


state 182

    (97) asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionList .

    END_OF_LINE     reduce using rule 97 (asignacionCompuesta_Null -> IDENTIFICADOR NULL_EQUAL asignacionList .)


state 183

    (75) asignacionPila -> NEW . STACK tipoLista PAR_IZQ PAR_DER
    (76) asignacionQueue -> NEW . QUEUE tipoLista PAR_IZQ PAR_DER
    (77) asignacionList -> NEW . LIST tipoLista PAR_IZQ PAR_DER

    STACK           shift and go to state 248
    QUEUE           shift and go to state 249
    LIST            shift and go to state 250


state 184

    (98) asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR .

    END_OF_LINE     reduce using rule 98 (asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR .)


state 185

    (99) asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift INT .

    END_OF_LINE     reduce using rule 99 (asignacionCompuesta_Shift -> IDENTIFICADOR operadoresCompuestosShift INT .)


state 186

    (81) index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR . COR_DER

    COR_DER         shift and go to state 253


state 187

    (80) index -> IDENTIFICADOR COR_IZQ INT . COR_DER

    COR_DER         shift and go to state 254


state 188

    (124) declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .

    END_OF_LINE     reduce using rule 124 (declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .)
    COMA            reduce using rule 124 (declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .)
    PAR_DER         reduce using rule 124 (declaracionAsignacion -> declaracionEstructuraD IGUAL NULL .)


state 189

    (118) declaracionAsignacion -> declaracionClase IGUAL NEW . IDENTIFICADOR PAR_IZQ PAR_DER

    IDENTIFICADOR   shift and go to state 255


state 190

    (120) declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .

    END_OF_LINE     reduce using rule 120 (declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .)
    COMA            reduce using rule 120 (declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .)
    PAR_DER         reduce using rule 120 (declaracionAsignacion -> declaracionClase IGUAL IDENTIFICADOR .)


state 191

    (119) declaracionAsignacion -> declaracionClase IGUAL NULL .

    END_OF_LINE     reduce using rule 119 (declaracionAsignacion -> declaracionClase IGUAL NULL .)
    COMA            reduce using rule 119 (declaracionAsignacion -> declaracionClase IGUAL NULL .)
    PAR_DER         reduce using rule 119 (declaracionAsignacion -> declaracionClase IGUAL NULL .)


state 192

    (121) declaracionAsignacion -> declaracionNull IGUAL valor .

    END_OF_LINE     reduce using rule 121 (declaracionAsignacion -> declaracionNull IGUAL valor .)
    COMA            reduce using rule 121 (declaracionAsignacion -> declaracionNull IGUAL valor .)
    PAR_DER         reduce using rule 121 (declaracionAsignacion -> declaracionNull IGUAL valor .)


state 193

    (122) declaracionAsignacion -> declaracionNull IGUAL expresion .

    END_OF_LINE     reduce using rule 122 (declaracionAsignacion -> declaracionNull IGUAL expresion .)
    COMA            reduce using rule 122 (declaracionAsignacion -> declaracionNull IGUAL expresion .)
    PAR_DER         reduce using rule 122 (declaracionAsignacion -> declaracionNull IGUAL expresion .)


state 194

    (123) declaracionAsignacion -> declaracionNull IGUAL NULL .

    END_OF_LINE     reduce using rule 123 (declaracionAsignacion -> declaracionNull IGUAL NULL .)
    COMA            reduce using rule 123 (declaracionAsignacion -> declaracionNull IGUAL NULL .)
    PAR_DER         reduce using rule 123 (declaracionAsignacion -> declaracionNull IGUAL NULL .)


state 195

    (220) lambda_exp -> lambdaArg LAMBDA lambdaCuerpo .

    $end            reduce using rule 220 (lambda_exp -> lambdaArg LAMBDA lambdaCuerpo .)
    LLAVE_DER       reduce using rule 220 (lambda_exp -> lambdaArg LAMBDA lambdaCuerpo .)


state 196

    (229) lambdaCuerpo -> expresion .

    $end            reduce using rule 229 (lambdaCuerpo -> expresion .)
    LLAVE_DER       reduce using rule 229 (lambdaCuerpo -> expresion .)


state 197

    (230) lambdaCuerpo -> salida_uno .

    $end            reduce using rule 230 (lambdaCuerpo -> salida_uno .)
    LLAVE_DER       reduce using rule 230 (lambdaCuerpo -> salida_uno .)


state 198

    (231) lambdaCuerpo -> salida_dos .

    $end            reduce using rule 231 (lambdaCuerpo -> salida_dos .)
    LLAVE_DER       reduce using rule 231 (lambdaCuerpo -> salida_dos .)


state 199

    (194) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> IDENTIFICADOR . operador_aritmentico IDENTIFICADOR
    (197) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    SUMA            shift and go to state 104
    RESTA           shift and go to state 105
    MULTIPLICACION  shift and go to state 106
    DIVISION        shift and go to state 107
    MODULO          shift and go to state 108
    IGUAL_IGUAL     shift and go to state 109
    NO_IGUAL        shift and go to state 110
    MENOR_QUE       shift and go to state 111
    MENOR_O_IGUAL_QUE shift and go to state 112
    MAYOR_QUE       shift and go to state 113
    MAYOR_O_IGUAL_QUE shift and go to state 114

    operador_aritmentico           shift and go to state 96
    operador_condicional           shift and go to state 97

state 200

    (192) expresion_operacion_aritmetica -> numero . operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> numero . operador_aritmentico IDENTIFICADOR
    (196) expresion_condicional -> numero . operador_condicional numero
    (199) expresion_condicional -> numero . operador_condicional IDENTIFICADOR
    (44) operador_aritmentico -> . SUMA
    (45) operador_aritmentico -> . RESTA
    (46) operador_aritmentico -> . MULTIPLICACION
    (47) operador_aritmentico -> . DIVISION
    (48) operador_aritmentico -> . MODULO
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    SUMA            shift and go to state 104
    RESTA           shift and go to state 105
    MULTIPLICACION  shift and go to state 106
    DIVISION        shift and go to state 107
    MODULO          shift and go to state 108
    IGUAL_IGUAL     shift and go to state 109
    NO_IGUAL        shift and go to state 110
    MENOR_QUE       shift and go to state 111
    MENOR_O_IGUAL_QUE shift and go to state 112
    MAYOR_QUE       shift and go to state 113
    MAYOR_O_IGUAL_QUE shift and go to state 114

    operador_aritmentico           shift and go to state 135
    operador_condicional           shift and go to state 136

state 201

    (78) asignacionIndex -> index IGUAL index .

    END_OF_LINE     reduce using rule 78 (asignacionIndex -> index IGUAL index .)


state 202

    (79) asignacionIndex -> index IGUAL valor .

    END_OF_LINE     reduce using rule 79 (asignacionIndex -> index IGUAL valor .)


state 203

    (80) index -> IDENTIFICADOR . COR_IZQ INT COR_DER
    (81) index -> IDENTIFICADOR . COR_IZQ IDENTIFICADOR COR_DER
    (16) valor -> IDENTIFICADOR .

    COR_IZQ         shift and go to state 103
    END_OF_LINE     reduce using rule 16 (valor -> IDENTIFICADOR .)


state 204

    (222) lambdaArg -> PAR_IZQ lambdaParametrosUno PAR_DER .

    LAMBDA          reduce using rule 222 (lambdaArg -> PAR_IZQ lambdaParametrosUno PAR_DER .)


state 205

    (223) lambdaArg -> PAR_IZQ lambdaParametrosDos PAR_DER .

    LAMBDA          reduce using rule 223 (lambdaArg -> PAR_IZQ lambdaParametrosDos PAR_DER .)


state 206

    (225) lambdaParametrosUno -> valor_tipo IDENTIFICADOR .
    (226) lambdaParametrosUno -> valor_tipo IDENTIFICADOR . COMA lambdaParametrosUno

    PAR_DER         reduce using rule 225 (lambdaParametrosUno -> valor_tipo IDENTIFICADOR .)
    COMA            shift and go to state 256


state 207

    (228) lambdaParametrosDos -> IDENTIFICADOR COMA . lambdaParametrosDos
    (227) lambdaParametrosDos -> . IDENTIFICADOR
    (228) lambdaParametrosDos -> . IDENTIFICADOR COMA lambdaParametrosDos

    IDENTIFICADOR   shift and go to state 134

    lambdaParametrosDos            shift and go to state 257

state 208

    (192) expresion_operacion_aritmetica -> numero operador_aritmentico numero .

    END_OF_LINE     reduce using rule 192 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    COMA            reduce using rule 192 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    PAR_DER         reduce using rule 192 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    $end            reduce using rule 192 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)
    LLAVE_DER       reduce using rule 192 (expresion_operacion_aritmetica -> numero operador_aritmentico numero .)


state 209

    (193) expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .

    END_OF_LINE     reduce using rule 193 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    COMA            reduce using rule 193 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    PAR_DER         reduce using rule 193 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    $end            reduce using rule 193 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 193 (expresion_operacion_aritmetica -> numero operador_aritmentico IDENTIFICADOR .)


state 210

    (196) expresion_condicional -> numero operador_condicional numero .

    END_OF_LINE     reduce using rule 196 (expresion_condicional -> numero operador_condicional numero .)
    COMA            reduce using rule 196 (expresion_condicional -> numero operador_condicional numero .)
    PAR_DER         reduce using rule 196 (expresion_condicional -> numero operador_condicional numero .)
    $end            reduce using rule 196 (expresion_condicional -> numero operador_condicional numero .)
    LLAVE_DER       reduce using rule 196 (expresion_condicional -> numero operador_condicional numero .)


state 211

    (199) expresion_condicional -> numero operador_condicional IDENTIFICADOR .

    END_OF_LINE     reduce using rule 199 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    COMA            reduce using rule 199 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    PAR_DER         reduce using rule 199 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    $end            reduce using rule 199 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)
    LLAVE_DER       reduce using rule 199 (expresion_condicional -> numero operador_condicional IDENTIFICADOR .)


state 212

    (149) switch_case -> SWITCH PAR_IZQ valor . PAR_DER LLAVE_IZQ casos LLAVE_DER

    PAR_DER         shift and go to state 258


state 213

    (162) for -> FOR PAR_IZQ forInicializador . END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    END_OF_LINE     shift and go to state 259


state 214

    (171) forInicializador -> tipoDatoForInicializador . IDENTIFICADOR IGUAL valorForInicializador

    IDENTIFICADOR   shift and go to state 260


state 215

    (172) forInicializador -> IDENTIFICADOR . IGUAL valorForInicializador

    IGUAL           shift and go to state 261


state 216

    (173) tipoDatoForInicializador -> FLOAT_TYPE .

    IDENTIFICADOR   reduce using rule 173 (tipoDatoForInicializador -> FLOAT_TYPE .)


state 217

    (174) tipoDatoForInicializador -> DOUBLE_TYPE .

    IDENTIFICADOR   reduce using rule 174 (tipoDatoForInicializador -> DOUBLE_TYPE .)


state 218

    (175) tipoDatoForInicializador -> INT_TYPE .

    IDENTIFICADOR   reduce using rule 175 (tipoDatoForInicializador -> INT_TYPE .)


state 219

    (182) lista -> LIST tipoLista IDENTIFICADOR . IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (128) declaracionList -> LIST tipoLista IDENTIFICADOR .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 262
    END_OF_LINE     reduce using rule 128 (declaracionList -> LIST tipoLista IDENTIFICADOR .)

  ! IGUAL           [ reduce using rule 128 (declaracionList -> LIST tipoLista IDENTIFICADOR .) ]


state 220

    (183) tipoLista -> MENOR_QUE valor_tipo_inicializador . MAYOR_QUE

    MAYOR_QUE       shift and go to state 263


state 221

    (28) valor_tipo_inicializador -> FLOAT_TYPE .

    MAYOR_QUE       reduce using rule 28 (valor_tipo_inicializador -> FLOAT_TYPE .)


state 222

    (29) valor_tipo_inicializador -> DOUBLE_TYPE .

    MAYOR_QUE       reduce using rule 29 (valor_tipo_inicializador -> DOUBLE_TYPE .)


state 223

    (30) valor_tipo_inicializador -> STRING_TYPE .

    MAYOR_QUE       reduce using rule 30 (valor_tipo_inicializador -> STRING_TYPE .)


state 224

    (31) valor_tipo_inicializador -> INT_TYPE .

    MAYOR_QUE       reduce using rule 31 (valor_tipo_inicializador -> INT_TYPE .)


state 225

    (32) valor_tipo_inicializador -> BOOL_TYPE .

    MAYOR_QUE       reduce using rule 32 (valor_tipo_inicializador -> BOOL_TYPE .)


state 226

    (33) valor_tipo_inicializador -> CHAR_TYPE .

    MAYOR_QUE       reduce using rule 33 (valor_tipo_inicializador -> CHAR_TYPE .)


state 227

    (34) valor_tipo_inicializador -> IDENTIFICADOR .

    MAYOR_QUE       reduce using rule 34 (valor_tipo_inicializador -> IDENTIFICADOR .)


state 228

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (130) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR

    MAYOR_QUE       shift and go to state 264


state 229

    (203) salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING . PAR_DER
    (55) operacion_string -> STRING . SUMA STRING
    (56) operacion_string -> STRING . SUMA IDENTIFICADOR

    PAR_DER         shift and go to state 265
    SUMA            shift and go to state 266


state 230

    (204) salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string . PAR_DER

    PAR_DER         shift and go to state 267


state 231

    (205) salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR . PAR_DER
    (57) operacion_string -> IDENTIFICADOR . SUMA STRING
    (58) operacion_string -> IDENTIFICADOR . SUMA IDENTIFICADOR

    PAR_DER         shift and go to state 268
    SUMA            shift and go to state 269


state 232

    (206) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA . STRING PAR_DER

    STRING          shift and go to state 270


state 233

    (207) salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 207 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)
    COMA            reduce using rule 207 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)
    PAR_DER         reduce using rule 207 (salida_tres -> CONSOLE_READLINE PAR_IZQ PAR_DER .)


state 234

    (210) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR . PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (211) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR . PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    PAR_IZQ         shift and go to state 271


state 235

    (137) while_normal -> WHILE PAR_IZQ expresion_condicional . PAR_DER LLAVE_IZQ body_while LLAVE_DER

    PAR_DER         shift and go to state 272


state 236

    (197) expresion_condicional -> IDENTIFICADOR . operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> IDENTIFICADOR . operador_condicional numero
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 109
    NO_IGUAL        shift and go to state 110
    MENOR_QUE       shift and go to state 111
    MENOR_O_IGUAL_QUE shift and go to state 112
    MAYOR_QUE       shift and go to state 113
    MAYOR_O_IGUAL_QUE shift and go to state 114

    operador_condicional           shift and go to state 97

state 237

    (138) while_do -> DO LLAVE_IZQ body_while . LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    LLAVE_DER       shift and go to state 273


state 238

    (139) body_while -> asignacion . END_OF_LINE
    (144) body_while -> asignacion . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 274


state 239

    (140) body_while -> declaracion . END_OF_LINE
    (145) body_while -> declaracion . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 275


state 240

    (141) body_while -> salida_entrada . END_OF_LINE
    (146) body_while -> salida_entrada . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 276


state 241

    (142) body_while -> BREAK . END_OF_LINE
    (147) body_while -> BREAK . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 277


state 242

    (143) body_while -> CONTINUE . END_OF_LINE
    (148) body_while -> CONTINUE . END_OF_LINE body_while

    END_OF_LINE     shift and go to state 278


state 243

    (66) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (67) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (68) asignacionSimple -> IDENTIFICADOR . IGUAL salida_tres
    (69) asignacionSimple -> IDENTIFICADOR . IGUAL index
    (71) asignacionClase -> IDENTIFICADOR . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionPila
    (73) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionQueue
    (74) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionList
    (70) asignacionNull -> IDENTIFICADOR . IGUAL NULL
    (116) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR
    (86) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift INT
    (80) index -> IDENTIFICADOR . COR_IZQ INT COR_DER
    (81) index -> IDENTIFICADOR . COR_IZQ IDENTIFICADOR COR_DER
    (105) operadoresCompuestosLogic -> . AND_EQUAL
    (106) operadoresCompuestosLogic -> . OR_EQUAL
    (107) operadoresCompuestosLogic -> . EXC_OREQUAL
    (100) operadoresCompuestosNumber -> . AUMENTADO
    (101) operadoresCompuestosNumber -> . DECREMENTADO
    (102) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (103) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (104) operadoresCompuestosNumber -> . MODULO_DE
    (108) operadoresCompuestosShift -> . LEFTSHIFT_EQUAL
    (109) operadoresCompuestosShift -> . RIGHTSHIFT_EQUAL

    IGUAL           shift and go to state 95
    IDENTIFICADOR   shift and go to state 94
    NULL_EQUAL      shift and go to state 101
    COR_IZQ         shift and go to state 103
    AND_EQUAL       shift and go to state 115
    OR_EQUAL        shift and go to state 116
    EXC_OREQUAL     shift and go to state 117
    AUMENTADO       shift and go to state 118
    DECREMENTADO    shift and go to state 119
    MULTIPLICADO_POR shift and go to state 120
    DIVIDIDO_POR    shift and go to state 121
    MODULO_DE       shift and go to state 122
    LEFTSHIFT_EQUAL shift and go to state 123
    RIGHTSHIFT_EQUAL shift and go to state 124

    operadoresCompuestosLogic      shift and go to state 99
    operadoresCompuestosNumber     shift and go to state 100
    operadoresCompuestosShift      shift and go to state 102

state 244

    (128) declaracionList -> LIST . tipoLista IDENTIFICADOR
    (183) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 140

    tipoLista                      shift and go to state 279

state 245

    (130) declaracionPila -> STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    MENOR_QUE       shift and go to state 280


state 246

    (129) declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .

    IGUAL           reduce using rule 129 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 129 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    COMA            reduce using rule 129 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)
    PAR_DER         reduce using rule 129 (declaracionQueue -> QUEUE tipoLista IDENTIFICADOR .)


state 247

    (71) asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 281


state 248

    (75) asignacionPila -> NEW STACK . tipoLista PAR_IZQ PAR_DER
    (183) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 140

    tipoLista                      shift and go to state 282

state 249

    (76) asignacionQueue -> NEW QUEUE . tipoLista PAR_IZQ PAR_DER
    (183) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 140

    tipoLista                      shift and go to state 283

state 250

    (77) asignacionList -> NEW LIST . tipoLista PAR_IZQ PAR_DER
    (183) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 140

    tipoLista                      shift and go to state 284

state 251

    (187) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ . valor PAR_DER
    (188) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ . NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    NEW             shift and go to state 286
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    IDENTIFICADOR   shift and go to state 150
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    valor                          shift and go to state 285
    numero                         shift and go to state 149

state 252

    (189) stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 287


state 253

    (81) index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER .

    IGUAL           reduce using rule 81 (index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER .)
    END_OF_LINE     reduce using rule 81 (index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER .)
    COMA            reduce using rule 81 (index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER .)
    PAR_DER         reduce using rule 81 (index -> IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER .)


state 254

    (80) index -> IDENTIFICADOR COR_IZQ INT COR_DER .

    IGUAL           reduce using rule 80 (index -> IDENTIFICADOR COR_IZQ INT COR_DER .)
    END_OF_LINE     reduce using rule 80 (index -> IDENTIFICADOR COR_IZQ INT COR_DER .)
    COMA            reduce using rule 80 (index -> IDENTIFICADOR COR_IZQ INT COR_DER .)
    PAR_DER         reduce using rule 80 (index -> IDENTIFICADOR COR_IZQ INT COR_DER .)


state 255

    (118) declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 288


state 256

    (226) lambdaParametrosUno -> valor_tipo IDENTIFICADOR COMA . lambdaParametrosUno
    (225) lambdaParametrosUno -> . valor_tipo IDENTIFICADOR
    (226) lambdaParametrosUno -> . valor_tipo IDENTIFICADOR COMA lambdaParametrosUno
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE

    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66

    valor_tipo                     shift and go to state 133
    lambdaParametrosUno            shift and go to state 289

state 257

    (228) lambdaParametrosDos -> IDENTIFICADOR COMA lambdaParametrosDos .

    PAR_DER         reduce using rule 228 (lambdaParametrosDos -> IDENTIFICADOR COMA lambdaParametrosDos .)


state 258

    (149) switch_case -> SWITCH PAR_IZQ valor PAR_DER . LLAVE_IZQ casos LLAVE_DER

    LLAVE_IZQ       shift and go to state 290


state 259

    (162) for -> FOR PAR_IZQ forInicializador END_OF_LINE . forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (166) forCondicion -> . IDENTIFICADOR operador_condicional valorForCondicion

    IDENTIFICADOR   shift and go to state 292

    forCondicion                   shift and go to state 291

state 260

    (171) forInicializador -> tipoDatoForInicializador IDENTIFICADOR . IGUAL valorForInicializador

    IGUAL           shift and go to state 293


state 261

    (172) forInicializador -> IDENTIFICADOR IGUAL . valorForInicializador
    (176) valorForInicializador -> . FLOAT
    (177) valorForInicializador -> . DOUBLE
    (178) valorForInicializador -> . INT
    (179) valorForInicializador -> . IDENTIFICADOR

    FLOAT           shift and go to state 296
    DOUBLE          shift and go to state 297
    INT             shift and go to state 298
    IDENTIFICADOR   shift and go to state 294

    valorForInicializador          shift and go to state 295

state 262

    (182) lista -> LIST tipoLista IDENTIFICADOR IGUAL . NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE

    NEW             shift and go to state 299


state 263

    (183) tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .

    IDENTIFICADOR   reduce using rule 183 (tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .)
    PAR_IZQ         reduce using rule 183 (tipoLista -> MENOR_QUE valor_tipo_inicializador MAYOR_QUE .)


state 264

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (130) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 300


state 265

    (203) salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .

    END_OF_LINE     reduce using rule 203 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)
    $end            reduce using rule 203 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)
    LLAVE_DER       reduce using rule 203 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER .)


state 266

    (55) operacion_string -> STRING SUMA . STRING
    (56) operacion_string -> STRING SUMA . IDENTIFICADOR

    STRING          shift and go to state 301
    IDENTIFICADOR   shift and go to state 302


state 267

    (204) salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .

    END_OF_LINE     reduce using rule 204 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)
    $end            reduce using rule 204 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)
    LLAVE_DER       reduce using rule 204 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER .)


state 268

    (205) salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .

    END_OF_LINE     reduce using rule 205 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)
    $end            reduce using rule 205 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)
    LLAVE_DER       reduce using rule 205 (salida_uno -> CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER .)


state 269

    (57) operacion_string -> IDENTIFICADOR SUMA . STRING
    (58) operacion_string -> IDENTIFICADOR SUMA . IDENTIFICADOR

    STRING          shift and go to state 304
    IDENTIFICADOR   shift and go to state 303


state 270

    (206) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING . PAR_DER

    PAR_DER         shift and go to state 305


state 271

    (210) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ . PAR_DER LLAVE_IZQ body LLAVE_DER
    (211) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ . parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (212) parametrosF -> . declaracion
    (213) parametrosF -> . declaracion COMA parametrosF
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    PAR_DER         shift and go to state 307
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    IDENTIFICADOR   shift and go to state 306
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    parametrosF                    shift and go to state 308
    declaracion                    shift and go to state 309
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 272

    (137) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER . LLAVE_IZQ body_while LLAVE_DER

    LLAVE_IZQ       shift and go to state 310


state 273

    (138) while_do -> DO LLAVE_IZQ body_while LLAVE_DER . WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    WHILE           shift and go to state 311


state 274

    (139) body_while -> asignacion END_OF_LINE .
    (144) body_while -> asignacion END_OF_LINE . body_while
    (139) body_while -> . asignacion END_OF_LINE
    (140) body_while -> . declaracion END_OF_LINE
    (141) body_while -> . salida_entrada END_OF_LINE
    (142) body_while -> . BREAK END_OF_LINE
    (143) body_while -> . CONTINUE END_OF_LINE
    (144) body_while -> . asignacion END_OF_LINE body_while
    (145) body_while -> . declaracion END_OF_LINE body_while
    (146) body_while -> . salida_entrada END_OF_LINE body_while
    (147) body_while -> . BREAK END_OF_LINE body_while
    (148) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 139 (body_while -> asignacion END_OF_LINE .)
    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    IDENTIFICADOR   shift and go to state 243
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    asignacion                     shift and go to state 238
    body_while                     shift and go to state 312
    declaracion                    shift and go to state 239
    salida_entrada                 shift and go to state 240
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 275

    (140) body_while -> declaracion END_OF_LINE .
    (145) body_while -> declaracion END_OF_LINE . body_while
    (139) body_while -> . asignacion END_OF_LINE
    (140) body_while -> . declaracion END_OF_LINE
    (141) body_while -> . salida_entrada END_OF_LINE
    (142) body_while -> . BREAK END_OF_LINE
    (143) body_while -> . CONTINUE END_OF_LINE
    (144) body_while -> . asignacion END_OF_LINE body_while
    (145) body_while -> . declaracion END_OF_LINE body_while
    (146) body_while -> . salida_entrada END_OF_LINE body_while
    (147) body_while -> . BREAK END_OF_LINE body_while
    (148) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 140 (body_while -> declaracion END_OF_LINE .)
    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    IDENTIFICADOR   shift and go to state 243
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    declaracion                    shift and go to state 239
    body_while                     shift and go to state 313
    asignacion                     shift and go to state 238
    salida_entrada                 shift and go to state 240
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 276

    (141) body_while -> salida_entrada END_OF_LINE .
    (146) body_while -> salida_entrada END_OF_LINE . body_while
    (139) body_while -> . asignacion END_OF_LINE
    (140) body_while -> . declaracion END_OF_LINE
    (141) body_while -> . salida_entrada END_OF_LINE
    (142) body_while -> . BREAK END_OF_LINE
    (143) body_while -> . CONTINUE END_OF_LINE
    (144) body_while -> . asignacion END_OF_LINE body_while
    (145) body_while -> . declaracion END_OF_LINE body_while
    (146) body_while -> . salida_entrada END_OF_LINE body_while
    (147) body_while -> . BREAK END_OF_LINE body_while
    (148) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 141 (body_while -> salida_entrada END_OF_LINE .)
    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    IDENTIFICADOR   shift and go to state 243
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    salida_entrada                 shift and go to state 240
    body_while                     shift and go to state 314
    asignacion                     shift and go to state 238
    declaracion                    shift and go to state 239
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 277

    (142) body_while -> BREAK END_OF_LINE .
    (147) body_while -> BREAK END_OF_LINE . body_while
    (139) body_while -> . asignacion END_OF_LINE
    (140) body_while -> . declaracion END_OF_LINE
    (141) body_while -> . salida_entrada END_OF_LINE
    (142) body_while -> . BREAK END_OF_LINE
    (143) body_while -> . CONTINUE END_OF_LINE
    (144) body_while -> . asignacion END_OF_LINE body_while
    (145) body_while -> . declaracion END_OF_LINE body_while
    (146) body_while -> . salida_entrada END_OF_LINE body_while
    (147) body_while -> . BREAK END_OF_LINE body_while
    (148) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 142 (body_while -> BREAK END_OF_LINE .)
    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    IDENTIFICADOR   shift and go to state 243
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    body_while                     shift and go to state 315
    asignacion                     shift and go to state 238
    declaracion                    shift and go to state 239
    salida_entrada                 shift and go to state 240
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 278

    (143) body_while -> CONTINUE END_OF_LINE .
    (148) body_while -> CONTINUE END_OF_LINE . body_while
    (139) body_while -> . asignacion END_OF_LINE
    (140) body_while -> . declaracion END_OF_LINE
    (141) body_while -> . salida_entrada END_OF_LINE
    (142) body_while -> . BREAK END_OF_LINE
    (143) body_while -> . CONTINUE END_OF_LINE
    (144) body_while -> . asignacion END_OF_LINE body_while
    (145) body_while -> . declaracion END_OF_LINE body_while
    (146) body_while -> . salida_entrada END_OF_LINE body_while
    (147) body_while -> . BREAK END_OF_LINE body_while
    (148) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 143 (body_while -> CONTINUE END_OF_LINE .)
    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    IDENTIFICADOR   shift and go to state 243
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    body_while                     shift and go to state 316
    asignacion                     shift and go to state 238
    declaracion                    shift and go to state 239
    salida_entrada                 shift and go to state 240
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 279

    (128) declaracionList -> LIST tipoLista . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 317


state 280

    (130) declaracionPila -> STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (28) valor_tipo_inicializador -> . FLOAT_TYPE
    (29) valor_tipo_inicializador -> . DOUBLE_TYPE
    (30) valor_tipo_inicializador -> . STRING_TYPE
    (31) valor_tipo_inicializador -> . INT_TYPE
    (32) valor_tipo_inicializador -> . BOOL_TYPE
    (33) valor_tipo_inicializador -> . CHAR_TYPE
    (34) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 221
    DOUBLE_TYPE     shift and go to state 222
    STRING_TYPE     shift and go to state 223
    INT_TYPE        shift and go to state 224
    BOOL_TYPE       shift and go to state 225
    CHAR_TYPE       shift and go to state 226
    IDENTIFICADOR   shift and go to state 227

    valor_tipo_inicializador       shift and go to state 318

state 281

    (71) asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 319


state 282

    (75) asignacionPila -> NEW STACK tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 320


state 283

    (76) asignacionQueue -> NEW QUEUE tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 321


state 284

    (77) asignacionList -> NEW LIST tipoLista . PAR_IZQ PAR_DER

    PAR_IZQ         shift and go to state 322


state 285

    (187) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor . PAR_DER

    PAR_DER         shift and go to state 323


state 286

    (188) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW . IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER

    IDENTIFICADOR   shift and go to state 324


state 287

    (189) stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 189 (stack_pop -> IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER .)


state 288

    (118) declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 325


state 289

    (226) lambdaParametrosUno -> valor_tipo IDENTIFICADOR COMA lambdaParametrosUno .

    PAR_DER         reduce using rule 226 (lambdaParametrosUno -> valor_tipo IDENTIFICADOR COMA lambdaParametrosUno .)


state 290

    (149) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ . casos LLAVE_DER
    (150) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (151) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (152) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (153) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    CASE            shift and go to state 327

    casos                          shift and go to state 326

state 291

    (162) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion . END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER

    END_OF_LINE     shift and go to state 328


state 292

    (166) forCondicion -> IDENTIFICADOR . operador_condicional valorForCondicion
    (49) operador_condicional -> . IGUAL_IGUAL
    (50) operador_condicional -> . NO_IGUAL
    (51) operador_condicional -> . MENOR_QUE
    (52) operador_condicional -> . MENOR_O_IGUAL_QUE
    (53) operador_condicional -> . MAYOR_QUE
    (54) operador_condicional -> . MAYOR_O_IGUAL_QUE

    IGUAL_IGUAL     shift and go to state 109
    NO_IGUAL        shift and go to state 110
    MENOR_QUE       shift and go to state 111
    MENOR_O_IGUAL_QUE shift and go to state 112
    MAYOR_QUE       shift and go to state 113
    MAYOR_O_IGUAL_QUE shift and go to state 114

    operador_condicional           shift and go to state 329

state 293

    (171) forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL . valorForInicializador
    (176) valorForInicializador -> . FLOAT
    (177) valorForInicializador -> . DOUBLE
    (178) valorForInicializador -> . INT
    (179) valorForInicializador -> . IDENTIFICADOR

    FLOAT           shift and go to state 296
    DOUBLE          shift and go to state 297
    INT             shift and go to state 298
    IDENTIFICADOR   shift and go to state 294

    valorForInicializador          shift and go to state 330

state 294

    (179) valorForInicializador -> IDENTIFICADOR .

    END_OF_LINE     reduce using rule 179 (valorForInicializador -> IDENTIFICADOR .)


state 295

    (172) forInicializador -> IDENTIFICADOR IGUAL valorForInicializador .

    END_OF_LINE     reduce using rule 172 (forInicializador -> IDENTIFICADOR IGUAL valorForInicializador .)


state 296

    (176) valorForInicializador -> FLOAT .

    END_OF_LINE     reduce using rule 176 (valorForInicializador -> FLOAT .)


state 297

    (177) valorForInicializador -> DOUBLE .

    END_OF_LINE     reduce using rule 177 (valorForInicializador -> DOUBLE .)


state 298

    (178) valorForInicializador -> INT .

    END_OF_LINE     reduce using rule 178 (valorForInicializador -> INT .)


state 299

    (182) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW . LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE

    LIST            shift and go to state 331


state 300

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR . IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (130) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 332
    END_OF_LINE     reduce using rule 130 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)

  ! IGUAL           [ reduce using rule 130 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .) ]


state 301

    (55) operacion_string -> STRING SUMA STRING .

    PAR_DER         reduce using rule 55 (operacion_string -> STRING SUMA STRING .)


state 302

    (56) operacion_string -> STRING SUMA IDENTIFICADOR .

    PAR_DER         reduce using rule 56 (operacion_string -> STRING SUMA IDENTIFICADOR .)


state 303

    (58) operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR .

    PAR_DER         reduce using rule 58 (operacion_string -> IDENTIFICADOR SUMA IDENTIFICADOR .)


state 304

    (57) operacion_string -> IDENTIFICADOR SUMA STRING .

    PAR_DER         reduce using rule 57 (operacion_string -> IDENTIFICADOR SUMA STRING .)


state 305

    (206) salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .

    END_OF_LINE     reduce using rule 206 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)
    $end            reduce using rule 206 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)
    LLAVE_DER       reduce using rule 206 (salida_dos -> CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER .)


state 306

    (116) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 94


state 307

    (210) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER . LLAVE_IZQ body LLAVE_DER

    LLAVE_IZQ       shift and go to state 333


state 308

    (211) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF . PAR_DER LLAVE_IZQ bodyF LLAVE_DER

    PAR_DER         shift and go to state 334


state 309

    (212) parametrosF -> declaracion .
    (213) parametrosF -> declaracion . COMA parametrosF

    PAR_DER         reduce using rule 212 (parametrosF -> declaracion .)
    COMA            shift and go to state 335


state 310

    (137) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ . body_while LLAVE_DER
    (139) body_while -> . asignacion END_OF_LINE
    (140) body_while -> . declaracion END_OF_LINE
    (141) body_while -> . salida_entrada END_OF_LINE
    (142) body_while -> . BREAK END_OF_LINE
    (143) body_while -> . CONTINUE END_OF_LINE
    (144) body_while -> . asignacion END_OF_LINE body_while
    (145) body_while -> . declaracion END_OF_LINE body_while
    (146) body_while -> . salida_entrada END_OF_LINE body_while
    (147) body_while -> . BREAK END_OF_LINE body_while
    (148) body_while -> . CONTINUE END_OF_LINE body_while
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    IDENTIFICADOR   shift and go to state 243
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    body_while                     shift and go to state 336
    asignacion                     shift and go to state 238
    declaracion                    shift and go to state 239
    salida_entrada                 shift and go to state 240
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 311

    (138) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE . PAR_IZQ expresion_condicional PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 337


state 312

    (144) body_while -> asignacion END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 144 (body_while -> asignacion END_OF_LINE body_while .)


state 313

    (145) body_while -> declaracion END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 145 (body_while -> declaracion END_OF_LINE body_while .)


state 314

    (146) body_while -> salida_entrada END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 146 (body_while -> salida_entrada END_OF_LINE body_while .)


state 315

    (147) body_while -> BREAK END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 147 (body_while -> BREAK END_OF_LINE body_while .)


state 316

    (148) body_while -> CONTINUE END_OF_LINE body_while .

    LLAVE_DER       reduce using rule 148 (body_while -> CONTINUE END_OF_LINE body_while .)


state 317

    (128) declaracionList -> LIST tipoLista IDENTIFICADOR .

    IGUAL           reduce using rule 128 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 128 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    COMA            reduce using rule 128 (declaracionList -> LIST tipoLista IDENTIFICADOR .)
    PAR_DER         reduce using rule 128 (declaracionList -> LIST tipoLista IDENTIFICADOR .)


state 318

    (130) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE IDENTIFICADOR

    MAYOR_QUE       shift and go to state 338


state 319

    (71) asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 71 (asignacionClase -> IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)


state 320

    (75) asignacionPila -> NEW STACK tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 339


state 321

    (76) asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 340


state 322

    (77) asignacionList -> NEW LIST tipoLista PAR_IZQ . PAR_DER

    PAR_DER         shift and go to state 341


state 323

    (187) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER .

    END_OF_LINE     reduce using rule 187 (stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER .)


state 324

    (188) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR . PAR_IZQ PAR_DER PAR_DER

    PAR_IZQ         shift and go to state 342


state 325

    (118) declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 118 (declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)
    COMA            reduce using rule 118 (declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)
    PAR_DER         reduce using rule 118 (declaracionAsignacion -> declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER .)


state 326

    (149) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos . LLAVE_DER

    LLAVE_DER       shift and go to state 343


state 327

    (150) casos -> CASE . valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (151) casos -> CASE . valor DOS_PUNTOS BREAK END_OF_LINE
    (152) casos -> CASE . valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (153) casos -> CASE . valor DOS_PUNTOS BREAK END_OF_LINE casos
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    IDENTIFICADOR   shift and go to state 150
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    valor                          shift and go to state 344
    numero                         shift and go to state 149

state 328

    (162) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE . forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (163) forIterador -> . IDENTIFICADOR operadorForIteracion

    IDENTIFICADOR   shift and go to state 346

    forIterador                    shift and go to state 345

state 329

    (166) forCondicion -> IDENTIFICADOR operador_condicional . valorForCondicion
    (167) valorForCondicion -> . FLOAT
    (168) valorForCondicion -> . DOUBLE
    (169) valorForCondicion -> . INT
    (170) valorForCondicion -> . IDENTIFICADOR

    FLOAT           shift and go to state 349
    DOUBLE          shift and go to state 350
    INT             shift and go to state 351
    IDENTIFICADOR   shift and go to state 347

    valorForCondicion              shift and go to state 348

state 330

    (171) forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador .

    END_OF_LINE     reduce using rule 171 (forInicializador -> tipoDatoForInicializador IDENTIFICADOR IGUAL valorForInicializador .)


state 331

    (182) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST . tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (183) tipoLista -> . MENOR_QUE valor_tipo_inicializador MAYOR_QUE

    MENOR_QUE       shift and go to state 140

    tipoLista                      shift and go to state 352

state 332

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL . NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    NEW             shift and go to state 353


state 333

    (210) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ . body LLAVE_DER
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (11) body -> . lambda_exp
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (131) comparacion -> . valor operador_realacional valor
    (132) estructura_control -> . while
    (133) estructura_control -> . switch_case
    (134) estructura_control -> . for
    (180) estructura_datos -> . lista
    (181) estructura_datos -> . pila
    (190) expresion -> . expresion_operacion_aritmetica
    (191) expresion -> . expresion_condicional
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (208) funcion -> . funcion_tipo_uno
    (209) funcion -> . funcion_tipo_tres
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (59) empty -> . END_OF_LINE
    (185) funciones_estructura_datos -> . stack_push
    (186) funciones_estructura_datos -> . stack_pop
    (220) lambda_exp -> . lambdaArg LAMBDA lambdaCuerpo
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (135) while -> . while_normal
    (136) while -> . while_do
    (149) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (162) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (182) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (184) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (192) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (194) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (196) expresion_condicional -> . numero operador_condicional numero
    (197) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (199) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (210) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (211) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (187) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (188) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (189) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (221) lambdaArg -> . PAR_IZQ PAR_DER
    (222) lambdaArg -> . PAR_IZQ lambdaParametrosUno PAR_DER
    (223) lambdaArg -> . PAR_IZQ lambdaParametrosDos PAR_DER
    (224) lambdaArg -> . IDENTIFICADOR
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (137) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (138) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (35) modificador_acceso -> . PRIVATE
    (36) modificador_acceso -> . PROTECTED
    (37) modificador_acceso -> . PUBLIC
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 34
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    SWITCH          shift and go to state 54
    FOR             shift and go to state 55
    LIST            shift and go to state 56
    STACK           shift and go to state 57
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    PAR_IZQ         shift and go to state 47
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70
    WHILE           shift and go to state 73
    DO              shift and go to state 74
    PRIVATE         shift and go to state 75
    PROTECTED       shift and go to state 76
    PUBLIC          shift and go to state 77
    QUEUE           shift and go to state 78

    modificador_acceso             shift and go to state 60
    body                           shift and go to state 354
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    lambda_exp                     shift and go to state 13
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor                          shift and go to state 20
    while                          shift and go to state 21
    switch_case                    shift and go to state 22
    for                            shift and go to state 23
    lista                          shift and go to state 24
    pila                           shift and go to state 25
    expresion_operacion_aritmetica shift and go to state 26
    expresion_condicional          shift and go to state 27
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    funcion_tipo_uno               shift and go to state 31
    funcion_tipo_tres              shift and go to state 32
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    stack_push                     shift and go to state 39
    stack_pop                      shift and go to state 40
    lambdaArg                      shift and go to state 41
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    numero                         shift and go to state 49
    while_normal                   shift and go to state 52
    while_do                       shift and go to state 53
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 334

    (211) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER . LLAVE_IZQ bodyF LLAVE_DER

    LLAVE_IZQ       shift and go to state 355


state 335

    (213) parametrosF -> declaracion COMA . parametrosF
    (212) parametrosF -> . declaracion
    (213) parametrosF -> . declaracion COMA parametrosF
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    IDENTIFICADOR   shift and go to state 306
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    declaracion                    shift and go to state 309
    parametrosF                    shift and go to state 356
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 336

    (137) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while . LLAVE_DER

    LLAVE_DER       shift and go to state 357


state 337

    (138) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ . expresion_condicional PAR_DER END_OF_LINE
    (196) expresion_condicional -> . numero operador_condicional numero
    (197) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (199) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    IDENTIFICADOR   shift and go to state 236
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    expresion_condicional          shift and go to state 358
    numero                         shift and go to state 173

state 338

    (130) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 359


state 339

    (75) asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 75 (asignacionPila -> NEW STACK tipoLista PAR_IZQ PAR_DER .)


state 340

    (76) asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 76 (asignacionQueue -> NEW QUEUE tipoLista PAR_IZQ PAR_DER .)


state 341

    (77) asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER .

    END_OF_LINE     reduce using rule 77 (asignacionList -> NEW LIST tipoLista PAR_IZQ PAR_DER .)


state 342

    (188) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ . PAR_DER PAR_DER

    PAR_DER         shift and go to state 360


state 343

    (149) switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .

    $end            reduce using rule 149 (switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .)
    LLAVE_DER       reduce using rule 149 (switch_case -> SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER .)


state 344

    (150) casos -> CASE valor . DOS_PUNTOS body_case BREAK END_OF_LINE
    (151) casos -> CASE valor . DOS_PUNTOS BREAK END_OF_LINE
    (152) casos -> CASE valor . DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (153) casos -> CASE valor . DOS_PUNTOS BREAK END_OF_LINE casos

    DOS_PUNTOS      shift and go to state 361


state 345

    (162) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador . PAR_DER LLAVE_IZQ body LLAVE_DER

    PAR_DER         shift and go to state 362


state 346

    (163) forIterador -> IDENTIFICADOR . operadorForIteracion
    (164) operadorForIteracion -> . INCREMENTO
    (165) operadorForIteracion -> . DECREMENTO

    INCREMENTO      shift and go to state 364
    DECREMENTO      shift and go to state 365

    operadorForIteracion           shift and go to state 363

state 347

    (170) valorForCondicion -> IDENTIFICADOR .

    END_OF_LINE     reduce using rule 170 (valorForCondicion -> IDENTIFICADOR .)


state 348

    (166) forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion .

    END_OF_LINE     reduce using rule 166 (forCondicion -> IDENTIFICADOR operador_condicional valorForCondicion .)


state 349

    (167) valorForCondicion -> FLOAT .

    END_OF_LINE     reduce using rule 167 (valorForCondicion -> FLOAT .)


state 350

    (168) valorForCondicion -> DOUBLE .

    END_OF_LINE     reduce using rule 168 (valorForCondicion -> DOUBLE .)


state 351

    (169) valorForCondicion -> INT .

    END_OF_LINE     reduce using rule 169 (valorForCondicion -> INT .)


state 352

    (182) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista . PAR_IZQ PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 366


state 353

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    STACK           shift and go to state 367


state 354

    (210) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body . LLAVE_DER

    LLAVE_DER       shift and go to state 368


state 355

    (211) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ . bodyF LLAVE_DER
    (214) bodyF -> . asignacion END_OF_LINE
    (215) bodyF -> . declaracion END_OF_LINE
    (216) bodyF -> . salida_entrada END_OF_LINE
    (217) bodyF -> . asignacion END_OF_LINE bodyF
    (218) bodyF -> . declaracion END_OF_LINE bodyF
    (219) bodyF -> . salida_entrada END_OF_LINE bodyF
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 243
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    bodyF                          shift and go to state 369
    asignacion                     shift and go to state 370
    declaracion                    shift and go to state 371
    salida_entrada                 shift and go to state 372
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 356

    (213) parametrosF -> declaracion COMA parametrosF .

    PAR_DER         reduce using rule 213 (parametrosF -> declaracion COMA parametrosF .)


state 357

    (137) while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .

    $end            reduce using rule 137 (while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .)
    LLAVE_DER       reduce using rule 137 (while_normal -> WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER .)


state 358

    (138) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 373


state 359

    (130) declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .

    IGUAL           reduce using rule 130 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    END_OF_LINE     reduce using rule 130 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    COMA            reduce using rule 130 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)
    PAR_DER         reduce using rule 130 (declaracionPila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR .)


state 360

    (188) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER . PAR_DER

    PAR_DER         shift and go to state 374


state 361

    (150) casos -> CASE valor DOS_PUNTOS . body_case BREAK END_OF_LINE
    (151) casos -> CASE valor DOS_PUNTOS . BREAK END_OF_LINE
    (152) casos -> CASE valor DOS_PUNTOS . body_case BREAK END_OF_LINE casos
    (153) casos -> CASE valor DOS_PUNTOS . BREAK END_OF_LINE casos
    (154) body_case -> . asignacion END_OF_LINE
    (155) body_case -> . declaracion END_OF_LINE
    (156) body_case -> . comparacion END_OF_LINE
    (157) body_case -> . salida_entrada END_OF_LINE
    (158) body_case -> . asignacion END_OF_LINE body_case
    (159) body_case -> . declaracion END_OF_LINE body_case
    (160) body_case -> . salida_entrada END_OF_LINE body_case
    (161) body_case -> . comparacion END_OF_LINE body_case
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (131) comparacion -> . valor operador_realacional valor
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BREAK           shift and go to state 376
    IDENTIFICADOR   shift and go to state 381
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    valor                          shift and go to state 20
    body_case                      shift and go to state 375
    asignacion                     shift and go to state 377
    declaracion                    shift and go to state 378
    comparacion                    shift and go to state 379
    salida_entrada                 shift and go to state 380
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69
    numero                         shift and go to state 149

state 362

    (162) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER . LLAVE_IZQ body LLAVE_DER

    LLAVE_IZQ       shift and go to state 382


state 363

    (163) forIterador -> IDENTIFICADOR operadorForIteracion .

    PAR_DER         reduce using rule 163 (forIterador -> IDENTIFICADOR operadorForIteracion .)


state 364

    (164) operadorForIteracion -> INCREMENTO .

    PAR_DER         reduce using rule 164 (operadorForIteracion -> INCREMENTO .)


state 365

    (165) operadorForIteracion -> DECREMENTO .

    PAR_DER         reduce using rule 165 (operadorForIteracion -> DECREMENTO .)


state 366

    (182) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 383


state 367

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK . MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    MENOR_QUE       shift and go to state 384


state 368

    (210) funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .

    $end            reduce using rule 210 (funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .)
    LLAVE_DER       reduce using rule 210 (funcion_tipo_uno -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER .)


state 369

    (211) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF . LLAVE_DER

    LLAVE_DER       shift and go to state 385


state 370

    (214) bodyF -> asignacion . END_OF_LINE
    (217) bodyF -> asignacion . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 386


state 371

    (215) bodyF -> declaracion . END_OF_LINE
    (218) bodyF -> declaracion . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 387


state 372

    (216) bodyF -> salida_entrada . END_OF_LINE
    (219) bodyF -> salida_entrada . END_OF_LINE bodyF

    END_OF_LINE     shift and go to state 388


state 373

    (138) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 389


state 374

    (188) stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER .

    END_OF_LINE     reduce using rule 188 (stack_push -> IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER .)


state 375

    (150) casos -> CASE valor DOS_PUNTOS body_case . BREAK END_OF_LINE
    (152) casos -> CASE valor DOS_PUNTOS body_case . BREAK END_OF_LINE casos

    BREAK           shift and go to state 390


state 376

    (151) casos -> CASE valor DOS_PUNTOS BREAK . END_OF_LINE
    (153) casos -> CASE valor DOS_PUNTOS BREAK . END_OF_LINE casos

    END_OF_LINE     shift and go to state 391


state 377

    (154) body_case -> asignacion . END_OF_LINE
    (158) body_case -> asignacion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 392


state 378

    (155) body_case -> declaracion . END_OF_LINE
    (159) body_case -> declaracion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 393


state 379

    (156) body_case -> comparacion . END_OF_LINE
    (161) body_case -> comparacion . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 394


state 380

    (157) body_case -> salida_entrada . END_OF_LINE
    (160) body_case -> salida_entrada . END_OF_LINE body_case

    END_OF_LINE     shift and go to state 395


state 381

    (66) asignacionSimple -> IDENTIFICADOR . IGUAL valor
    (67) asignacionSimple -> IDENTIFICADOR . IGUAL expresion
    (68) asignacionSimple -> IDENTIFICADOR . IGUAL salida_tres
    (69) asignacionSimple -> IDENTIFICADOR . IGUAL index
    (71) asignacionClase -> IDENTIFICADOR . IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionPila
    (73) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionQueue
    (74) asignacionEstructuraD -> IDENTIFICADOR . IGUAL asignacionList
    (70) asignacionNull -> IDENTIFICADOR . IGUAL NULL
    (116) declaracionClase -> IDENTIFICADOR . IDENTIFICADOR
    (16) valor -> IDENTIFICADOR .
    (86) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> IDENTIFICADOR . operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> IDENTIFICADOR . operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> IDENTIFICADOR . NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> IDENTIFICADOR . operadoresCompuestosShift INT
    (80) index -> IDENTIFICADOR . COR_IZQ INT COR_DER
    (81) index -> IDENTIFICADOR . COR_IZQ IDENTIFICADOR COR_DER
    (105) operadoresCompuestosLogic -> . AND_EQUAL
    (106) operadoresCompuestosLogic -> . OR_EQUAL
    (107) operadoresCompuestosLogic -> . EXC_OREQUAL
    (100) operadoresCompuestosNumber -> . AUMENTADO
    (101) operadoresCompuestosNumber -> . DECREMENTADO
    (102) operadoresCompuestosNumber -> . MULTIPLICADO_POR
    (103) operadoresCompuestosNumber -> . DIVIDIDO_POR
    (104) operadoresCompuestosNumber -> . MODULO_DE
    (108) operadoresCompuestosShift -> . LEFTSHIFT_EQUAL
    (109) operadoresCompuestosShift -> . RIGHTSHIFT_EQUAL

    IGUAL           shift and go to state 95
    IDENTIFICADOR   shift and go to state 94
    IGUAL_IGUAL     reduce using rule 16 (valor -> IDENTIFICADOR .)
    NO_IGUAL        reduce using rule 16 (valor -> IDENTIFICADOR .)
    MENOR_QUE       reduce using rule 16 (valor -> IDENTIFICADOR .)
    MENOR_O_IGUAL_QUE reduce using rule 16 (valor -> IDENTIFICADOR .)
    MAYOR_QUE       reduce using rule 16 (valor -> IDENTIFICADOR .)
    MAYOR_O_IGUAL_QUE reduce using rule 16 (valor -> IDENTIFICADOR .)
    NULL_EQUAL      shift and go to state 101
    COR_IZQ         shift and go to state 103
    AND_EQUAL       shift and go to state 115
    OR_EQUAL        shift and go to state 116
    EXC_OREQUAL     shift and go to state 117
    AUMENTADO       shift and go to state 118
    DECREMENTADO    shift and go to state 119
    MULTIPLICADO_POR shift and go to state 120
    DIVIDIDO_POR    shift and go to state 121
    MODULO_DE       shift and go to state 122
    LEFTSHIFT_EQUAL shift and go to state 123
    RIGHTSHIFT_EQUAL shift and go to state 124

    operadoresCompuestosLogic      shift and go to state 99
    operadoresCompuestosNumber     shift and go to state 100
    operadoresCompuestosShift      shift and go to state 102

state 382

    (162) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ . body LLAVE_DER
    (1) body -> . asignacion END_OF_LINE
    (2) body -> . comparacion
    (3) body -> . estructura_control
    (4) body -> . estructura_datos
    (5) body -> . expresion END_OF_LINE
    (6) body -> . salida_entrada END_OF_LINE
    (7) body -> . funcion
    (8) body -> . declaracion END_OF_LINE
    (9) body -> . empty
    (10) body -> . funciones_estructura_datos END_OF_LINE
    (11) body -> . lambda_exp
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (131) comparacion -> . valor operador_realacional valor
    (132) estructura_control -> . while
    (133) estructura_control -> . switch_case
    (134) estructura_control -> . for
    (180) estructura_datos -> . lista
    (181) estructura_datos -> . pila
    (190) expresion -> . expresion_operacion_aritmetica
    (191) expresion -> . expresion_condicional
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (208) funcion -> . funcion_tipo_uno
    (209) funcion -> . funcion_tipo_tres
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (59) empty -> . END_OF_LINE
    (185) funciones_estructura_datos -> . stack_push
    (186) funciones_estructura_datos -> . stack_pop
    (220) lambda_exp -> . lambdaArg LAMBDA lambdaCuerpo
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (135) while -> . while_normal
    (136) while -> . while_do
    (149) switch_case -> . SWITCH PAR_IZQ valor PAR_DER LLAVE_IZQ casos LLAVE_DER
    (162) for -> . FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER
    (182) lista -> . LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE
    (184) pila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (192) expresion_operacion_aritmetica -> . numero operador_aritmentico numero
    (193) expresion_operacion_aritmetica -> . numero operador_aritmentico IDENTIFICADOR
    (194) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico numero
    (195) expresion_operacion_aritmetica -> . IDENTIFICADOR operador_aritmentico IDENTIFICADOR
    (196) expresion_condicional -> . numero operador_condicional numero
    (197) expresion_condicional -> . IDENTIFICADOR operador_condicional IDENTIFICADOR
    (198) expresion_condicional -> . IDENTIFICADOR operador_condicional numero
    (199) expresion_condicional -> . numero operador_condicional IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (210) funcion_tipo_uno -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ PAR_DER LLAVE_IZQ body LLAVE_DER
    (211) funcion_tipo_tres -> . modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (187) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ valor PAR_DER
    (188) stack_push -> . IDENTIFICADOR PUNTO PUSH PAR_IZQ NEW IDENTIFICADOR PAR_IZQ PAR_DER PAR_DER
    (189) stack_pop -> . IDENTIFICADOR PUNTO POP PAR_IZQ PAR_DER
    (221) lambdaArg -> . PAR_IZQ PAR_DER
    (222) lambdaArg -> . PAR_IZQ lambdaParametrosUno PAR_DER
    (223) lambdaArg -> . PAR_IZQ lambdaParametrosDos PAR_DER
    (224) lambdaArg -> . IDENTIFICADOR
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT
    (137) while_normal -> . WHILE PAR_IZQ expresion_condicional PAR_DER LLAVE_IZQ body_while LLAVE_DER
    (138) while_do -> . DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE
    (35) modificador_acceso -> . PRIVATE
    (36) modificador_acceso -> . PROTECTED
    (37) modificador_acceso -> . PUBLIC
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    END_OF_LINE     shift and go to state 3
    IDENTIFICADOR   shift and go to state 34
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    SWITCH          shift and go to state 54
    FOR             shift and go to state 55
    LIST            shift and go to state 56
    STACK           shift and go to state 57
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    PAR_IZQ         shift and go to state 47
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70
    WHILE           shift and go to state 73
    DO              shift and go to state 74
    PRIVATE         shift and go to state 75
    PROTECTED       shift and go to state 76
    PUBLIC          shift and go to state 77
    QUEUE           shift and go to state 78

    body                           shift and go to state 396
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 4
    estructura_control             shift and go to state 5
    estructura_datos               shift and go to state 6
    expresion                      shift and go to state 7
    salida_entrada                 shift and go to state 8
    funcion                        shift and go to state 9
    declaracion                    shift and go to state 10
    empty                          shift and go to state 11
    funciones_estructura_datos     shift and go to state 12
    lambda_exp                     shift and go to state 13
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor                          shift and go to state 20
    while                          shift and go to state 21
    switch_case                    shift and go to state 22
    for                            shift and go to state 23
    lista                          shift and go to state 24
    pila                           shift and go to state 25
    expresion_operacion_aritmetica shift and go to state 26
    expresion_condicional          shift and go to state 27
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    funcion_tipo_uno               shift and go to state 31
    funcion_tipo_tres              shift and go to state 32
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    stack_push                     shift and go to state 39
    stack_pop                      shift and go to state 40
    lambdaArg                      shift and go to state 41
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    numero                         shift and go to state 49
    while_normal                   shift and go to state 52
    while_do                       shift and go to state 53
    modificador_acceso             shift and go to state 60
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 383

    (182) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 397


state 384

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE . valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE
    (28) valor_tipo_inicializador -> . FLOAT_TYPE
    (29) valor_tipo_inicializador -> . DOUBLE_TYPE
    (30) valor_tipo_inicializador -> . STRING_TYPE
    (31) valor_tipo_inicializador -> . INT_TYPE
    (32) valor_tipo_inicializador -> . BOOL_TYPE
    (33) valor_tipo_inicializador -> . CHAR_TYPE
    (34) valor_tipo_inicializador -> . IDENTIFICADOR

    FLOAT_TYPE      shift and go to state 221
    DOUBLE_TYPE     shift and go to state 222
    STRING_TYPE     shift and go to state 223
    INT_TYPE        shift and go to state 224
    BOOL_TYPE       shift and go to state 225
    CHAR_TYPE       shift and go to state 226
    IDENTIFICADOR   shift and go to state 227

    valor_tipo_inicializador       shift and go to state 398

state 385

    (211) funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .

    $end            reduce using rule 211 (funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .)
    LLAVE_DER       reduce using rule 211 (funcion_tipo_tres -> modificador_acceso VOID IDENTIFICADOR PAR_IZQ parametrosF PAR_DER LLAVE_IZQ bodyF LLAVE_DER .)


state 386

    (214) bodyF -> asignacion END_OF_LINE .
    (217) bodyF -> asignacion END_OF_LINE . bodyF
    (214) bodyF -> . asignacion END_OF_LINE
    (215) bodyF -> . declaracion END_OF_LINE
    (216) bodyF -> . salida_entrada END_OF_LINE
    (217) bodyF -> . asignacion END_OF_LINE bodyF
    (218) bodyF -> . declaracion END_OF_LINE bodyF
    (219) bodyF -> . salida_entrada END_OF_LINE bodyF
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 214 (bodyF -> asignacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 243
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    asignacion                     shift and go to state 370
    bodyF                          shift and go to state 399
    declaracion                    shift and go to state 371
    salida_entrada                 shift and go to state 372
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 387

    (215) bodyF -> declaracion END_OF_LINE .
    (218) bodyF -> declaracion END_OF_LINE . bodyF
    (214) bodyF -> . asignacion END_OF_LINE
    (215) bodyF -> . declaracion END_OF_LINE
    (216) bodyF -> . salida_entrada END_OF_LINE
    (217) bodyF -> . asignacion END_OF_LINE bodyF
    (218) bodyF -> . declaracion END_OF_LINE bodyF
    (219) bodyF -> . salida_entrada END_OF_LINE bodyF
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 215 (bodyF -> declaracion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 243
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    declaracion                    shift and go to state 371
    bodyF                          shift and go to state 400
    asignacion                     shift and go to state 370
    salida_entrada                 shift and go to state 372
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 388

    (216) bodyF -> salida_entrada END_OF_LINE .
    (219) bodyF -> salida_entrada END_OF_LINE . bodyF
    (214) bodyF -> . asignacion END_OF_LINE
    (215) bodyF -> . declaracion END_OF_LINE
    (216) bodyF -> . salida_entrada END_OF_LINE
    (217) bodyF -> . asignacion END_OF_LINE bodyF
    (218) bodyF -> . declaracion END_OF_LINE bodyF
    (219) bodyF -> . salida_entrada END_OF_LINE bodyF
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR

    LLAVE_DER       reduce using rule 216 (bodyF -> salida_entrada END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 243
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245

    salida_entrada                 shift and go to state 372
    bodyF                          shift and go to state 401
    asignacion                     shift and go to state 370
    declaracion                    shift and go to state 371
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69

state 389

    (138) while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .

    $end            reduce using rule 138 (while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 138 (while_do -> DO LLAVE_IZQ body_while LLAVE_DER WHILE PAR_IZQ expresion_condicional PAR_DER END_OF_LINE .)


state 390

    (150) casos -> CASE valor DOS_PUNTOS body_case BREAK . END_OF_LINE
    (152) casos -> CASE valor DOS_PUNTOS body_case BREAK . END_OF_LINE casos

    END_OF_LINE     shift and go to state 402


state 391

    (151) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE .
    (153) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE . casos
    (150) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (151) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (152) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (153) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    LLAVE_DER       reduce using rule 151 (casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE .)
    CASE            shift and go to state 327

    casos                          shift and go to state 403

state 392

    (154) body_case -> asignacion END_OF_LINE .
    (158) body_case -> asignacion END_OF_LINE . body_case
    (154) body_case -> . asignacion END_OF_LINE
    (155) body_case -> . declaracion END_OF_LINE
    (156) body_case -> . comparacion END_OF_LINE
    (157) body_case -> . salida_entrada END_OF_LINE
    (158) body_case -> . asignacion END_OF_LINE body_case
    (159) body_case -> . declaracion END_OF_LINE body_case
    (160) body_case -> . salida_entrada END_OF_LINE body_case
    (161) body_case -> . comparacion END_OF_LINE body_case
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (131) comparacion -> . valor operador_realacional valor
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BREAK           reduce using rule 154 (body_case -> asignacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 381
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    asignacion                     shift and go to state 377
    body_case                      shift and go to state 404
    declaracion                    shift and go to state 378
    comparacion                    shift and go to state 379
    salida_entrada                 shift and go to state 380
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    valor                          shift and go to state 20
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69
    numero                         shift and go to state 149

state 393

    (155) body_case -> declaracion END_OF_LINE .
    (159) body_case -> declaracion END_OF_LINE . body_case
    (154) body_case -> . asignacion END_OF_LINE
    (155) body_case -> . declaracion END_OF_LINE
    (156) body_case -> . comparacion END_OF_LINE
    (157) body_case -> . salida_entrada END_OF_LINE
    (158) body_case -> . asignacion END_OF_LINE body_case
    (159) body_case -> . declaracion END_OF_LINE body_case
    (160) body_case -> . salida_entrada END_OF_LINE body_case
    (161) body_case -> . comparacion END_OF_LINE body_case
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (131) comparacion -> . valor operador_realacional valor
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BREAK           reduce using rule 155 (body_case -> declaracion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 381
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    declaracion                    shift and go to state 378
    body_case                      shift and go to state 405
    asignacion                     shift and go to state 377
    comparacion                    shift and go to state 379
    salida_entrada                 shift and go to state 380
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    valor                          shift and go to state 20
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69
    numero                         shift and go to state 149

state 394

    (156) body_case -> comparacion END_OF_LINE .
    (161) body_case -> comparacion END_OF_LINE . body_case
    (154) body_case -> . asignacion END_OF_LINE
    (155) body_case -> . declaracion END_OF_LINE
    (156) body_case -> . comparacion END_OF_LINE
    (157) body_case -> . salida_entrada END_OF_LINE
    (158) body_case -> . asignacion END_OF_LINE body_case
    (159) body_case -> . declaracion END_OF_LINE body_case
    (160) body_case -> . salida_entrada END_OF_LINE body_case
    (161) body_case -> . comparacion END_OF_LINE body_case
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (131) comparacion -> . valor operador_realacional valor
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BREAK           reduce using rule 156 (body_case -> comparacion END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 381
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    comparacion                    shift and go to state 379
    body_case                      shift and go to state 406
    asignacion                     shift and go to state 377
    declaracion                    shift and go to state 378
    salida_entrada                 shift and go to state 380
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    valor                          shift and go to state 20
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69
    numero                         shift and go to state 149

state 395

    (157) body_case -> salida_entrada END_OF_LINE .
    (160) body_case -> salida_entrada END_OF_LINE . body_case
    (154) body_case -> . asignacion END_OF_LINE
    (155) body_case -> . declaracion END_OF_LINE
    (156) body_case -> . comparacion END_OF_LINE
    (157) body_case -> . salida_entrada END_OF_LINE
    (158) body_case -> . asignacion END_OF_LINE body_case
    (159) body_case -> . declaracion END_OF_LINE body_case
    (160) body_case -> . salida_entrada END_OF_LINE body_case
    (161) body_case -> . comparacion END_OF_LINE body_case
    (60) asignacion -> . asignacionSimple
    (61) asignacion -> . asignacionCompuesta
    (62) asignacion -> . asignacionClase
    (63) asignacion -> . asignacionEstructuraD
    (64) asignacion -> . asignacionNull
    (65) asignacion -> . asignacionIndex
    (110) declaracion -> . valor_tipo IDENTIFICADOR
    (111) declaracion -> . declaracionEstructuraD
    (112) declaracion -> . declaracionAsignacion
    (113) declaracion -> . declaracionClase
    (114) declaracion -> . declaracionNull
    (131) comparacion -> . valor operador_realacional valor
    (200) salida_entrada -> . salida_uno
    (201) salida_entrada -> . salida_dos
    (202) salida_entrada -> . salida_tres
    (66) asignacionSimple -> . IDENTIFICADOR IGUAL valor
    (67) asignacionSimple -> . IDENTIFICADOR IGUAL expresion
    (68) asignacionSimple -> . IDENTIFICADOR IGUAL salida_tres
    (69) asignacionSimple -> . IDENTIFICADOR IGUAL index
    (82) asignacionCompuesta -> . asignacionCompuesta_Logic
    (83) asignacionCompuesta -> . asignacionCompuesta_Number
    (84) asignacionCompuesta -> . asignacionCompuesta_Null
    (85) asignacionCompuesta -> . asignacionCompuesta_Shift
    (71) asignacionClase -> . IDENTIFICADOR IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (72) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionPila
    (73) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionQueue
    (74) asignacionEstructuraD -> . IDENTIFICADOR IGUAL asignacionList
    (70) asignacionNull -> . IDENTIFICADOR IGUAL NULL
    (78) asignacionIndex -> . index IGUAL index
    (79) asignacionIndex -> . index IGUAL valor
    (22) valor_tipo -> . CHAR_TYPE
    (23) valor_tipo -> . FLOAT_TYPE
    (24) valor_tipo -> . DOUBLE_TYPE
    (25) valor_tipo -> . INT_TYPE
    (26) valor_tipo -> . BOOL_TYPE
    (27) valor_tipo -> . STRING_TYPE
    (125) declaracionEstructuraD -> . declaracionList
    (126) declaracionEstructuraD -> . declaracionQueue
    (127) declaracionEstructuraD -> . declaracionPila
    (117) declaracionAsignacion -> . valor_tipo asignacionSimple
    (118) declaracionAsignacion -> . declaracionClase IGUAL NEW IDENTIFICADOR PAR_IZQ PAR_DER
    (119) declaracionAsignacion -> . declaracionClase IGUAL NULL
    (120) declaracionAsignacion -> . declaracionClase IGUAL IDENTIFICADOR
    (121) declaracionAsignacion -> . declaracionNull IGUAL valor
    (122) declaracionAsignacion -> . declaracionNull IGUAL expresion
    (123) declaracionAsignacion -> . declaracionNull IGUAL NULL
    (124) declaracionAsignacion -> . declaracionEstructuraD IGUAL NULL
    (116) declaracionClase -> . IDENTIFICADOR IDENTIFICADOR
    (115) declaracionNull -> . valor_tipo OP_TERNARIO IDENTIFICADOR
    (12) valor -> . CHAR
    (13) valor -> . numero
    (14) valor -> . BOOL
    (15) valor -> . STRING
    (16) valor -> . IDENTIFICADOR
    (203) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ STRING PAR_DER
    (204) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ operacion_string PAR_DER
    (205) salida_uno -> . CONSOLE_WRITELINE PAR_IZQ IDENTIFICADOR PAR_DER
    (206) salida_dos -> . CONSOLE_WRITELINE PAR_IZQ C_CADENA_INTERPOLADA STRING PAR_DER
    (207) salida_tres -> . CONSOLE_READLINE PAR_IZQ PAR_DER
    (86) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic BOOL
    (87) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic expresion_condicional
    (88) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic IDENTIFICADOR
    (89) asignacionCompuesta_Logic -> . IDENTIFICADOR operadoresCompuestosLogic INT
    (90) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber numero
    (91) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber expresion_operacion_aritmetica
    (92) asignacionCompuesta_Number -> . IDENTIFICADOR operadoresCompuestosNumber IDENTIFICADOR
    (93) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL valor
    (94) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL expresion
    (95) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionPila
    (96) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionQueue
    (97) asignacionCompuesta_Null -> . IDENTIFICADOR NULL_EQUAL asignacionList
    (98) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift IDENTIFICADOR
    (99) asignacionCompuesta_Shift -> . IDENTIFICADOR operadoresCompuestosShift INT
    (80) index -> . IDENTIFICADOR COR_IZQ INT COR_DER
    (81) index -> . IDENTIFICADOR COR_IZQ IDENTIFICADOR COR_DER
    (128) declaracionList -> . LIST tipoLista IDENTIFICADOR
    (129) declaracionQueue -> . QUEUE tipoLista IDENTIFICADOR
    (130) declaracionPila -> . STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR
    (17) numero -> . FLOAT
    (18) numero -> . DOUBLE
    (19) numero -> . INT

    BREAK           reduce using rule 157 (body_case -> salida_entrada END_OF_LINE .)
    IDENTIFICADOR   shift and go to state 381
    CHAR_TYPE       shift and go to state 61
    FLOAT_TYPE      shift and go to state 62
    DOUBLE_TYPE     shift and go to state 63
    INT_TYPE        shift and go to state 64
    BOOL_TYPE       shift and go to state 65
    STRING_TYPE     shift and go to state 66
    CHAR            shift and go to state 48
    BOOL            shift and go to state 50
    STRING          shift and go to state 51
    CONSOLE_WRITELINE shift and go to state 58
    CONSOLE_READLINE shift and go to state 59
    LIST            shift and go to state 244
    QUEUE           shift and go to state 78
    STACK           shift and go to state 245
    FLOAT           shift and go to state 71
    DOUBLE          shift and go to state 72
    INT             shift and go to state 70

    salida_entrada                 shift and go to state 380
    body_case                      shift and go to state 407
    asignacion                     shift and go to state 377
    declaracion                    shift and go to state 378
    comparacion                    shift and go to state 379
    asignacionSimple               shift and go to state 14
    asignacionCompuesta            shift and go to state 15
    asignacionClase                shift and go to state 16
    asignacionEstructuraD          shift and go to state 17
    asignacionNull                 shift and go to state 18
    asignacionIndex                shift and go to state 19
    valor_tipo                     shift and go to state 33
    declaracionEstructuraD         shift and go to state 35
    declaracionAsignacion          shift and go to state 36
    declaracionClase               shift and go to state 37
    declaracionNull                shift and go to state 38
    valor                          shift and go to state 20
    salida_uno                     shift and go to state 28
    salida_dos                     shift and go to state 29
    salida_tres                    shift and go to state 30
    index                          shift and go to state 42
    asignacionCompuesta_Logic      shift and go to state 43
    asignacionCompuesta_Number     shift and go to state 44
    asignacionCompuesta_Null       shift and go to state 45
    asignacionCompuesta_Shift      shift and go to state 46
    declaracionList                shift and go to state 67
    declaracionQueue               shift and go to state 68
    declaracionPila                shift and go to state 69
    numero                         shift and go to state 149

state 396

    (162) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body . LLAVE_DER

    LLAVE_DER       shift and go to state 408


state 397

    (182) lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .

    $end            reduce using rule 182 (lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 182 (lista -> LIST tipoLista IDENTIFICADOR IGUAL NEW LIST tipoLista PAR_IZQ PAR_DER END_OF_LINE .)


state 398

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador . MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE

    MAYOR_QUE       shift and go to state 409


state 399

    (217) bodyF -> asignacion END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 217 (bodyF -> asignacion END_OF_LINE bodyF .)


state 400

    (218) bodyF -> declaracion END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 218 (bodyF -> declaracion END_OF_LINE bodyF .)


state 401

    (219) bodyF -> salida_entrada END_OF_LINE bodyF .

    LLAVE_DER       reduce using rule 219 (bodyF -> salida_entrada END_OF_LINE bodyF .)


state 402

    (150) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE .
    (152) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE . casos
    (150) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE
    (151) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE
    (152) casos -> . CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos
    (153) casos -> . CASE valor DOS_PUNTOS BREAK END_OF_LINE casos

    LLAVE_DER       reduce using rule 150 (casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE .)
    CASE            shift and go to state 327

    casos                          shift and go to state 410

state 403

    (153) casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos .

    LLAVE_DER       reduce using rule 153 (casos -> CASE valor DOS_PUNTOS BREAK END_OF_LINE casos .)


state 404

    (158) body_case -> asignacion END_OF_LINE body_case .

    BREAK           reduce using rule 158 (body_case -> asignacion END_OF_LINE body_case .)


state 405

    (159) body_case -> declaracion END_OF_LINE body_case .

    BREAK           reduce using rule 159 (body_case -> declaracion END_OF_LINE body_case .)


state 406

    (161) body_case -> comparacion END_OF_LINE body_case .

    BREAK           reduce using rule 161 (body_case -> comparacion END_OF_LINE body_case .)


state 407

    (160) body_case -> salida_entrada END_OF_LINE body_case .

    BREAK           reduce using rule 160 (body_case -> salida_entrada END_OF_LINE body_case .)


state 408

    (162) for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .

    $end            reduce using rule 162 (for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .)
    LLAVE_DER       reduce using rule 162 (for -> FOR PAR_IZQ forInicializador END_OF_LINE forCondicion END_OF_LINE forIterador PAR_DER LLAVE_IZQ body LLAVE_DER .)


state 409

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE . PAR_IZQ PAR_DER END_OF_LINE

    PAR_IZQ         shift and go to state 411


state 410

    (152) casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos .

    LLAVE_DER       reduce using rule 152 (casos -> CASE valor DOS_PUNTOS body_case BREAK END_OF_LINE casos .)


state 411

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ . PAR_DER END_OF_LINE

    PAR_DER         shift and go to state 412


state 412

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER . END_OF_LINE

    END_OF_LINE     shift and go to state 413


state 413

    (184) pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .

    $end            reduce using rule 184 (pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .)
    LLAVE_DER       reduce using rule 184 (pila -> STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE IDENTIFICADOR IGUAL NEW STACK MENOR_QUE valor_tipo_inicializador MAYOR_QUE PAR_IZQ PAR_DER END_OF_LINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 34 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 34 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 34 resolved as shift
WARNING: shift/reduce conflict for MENOR_O_IGUAL_QUE in state 34 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 34 resolved as shift
WARNING: shift/reduce conflict for MAYOR_O_IGUAL_QUE in state 34 resolved as shift
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 49 resolved as shift
WARNING: shift/reduce conflict for MENOR_O_IGUAL_QUE in state 49 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 49 resolved as shift
WARNING: shift/reduce conflict for MAYOR_O_IGUAL_QUE in state 49 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 219 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 300 resolved as shift
