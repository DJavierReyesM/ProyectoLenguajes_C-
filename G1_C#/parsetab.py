
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND AND_EQUAL AUMENTADO BOOL BOOL_TYPE BREAK BYTE CASE CHAR CHAR_TYPE CLASS COMA COMILLA_DOBLE COMILLA_SIMPLE CONSOLE_READLINE CONSOLE_WRITELINE CONST CONTINUE COR_DER COR_IZQ C_CADENA_INTERPOLADA C_IDENT_TEXTUAL DECREMENTADO DECREMENTO DEFAULT DIVIDIDO_POR DIVISION DO DOS_PUNTOS DOUBLE DOUBLE_TYPE ELSE END_OF_LINE EXC_OREQUAL FINALLY FLOAT FLOAT_TYPE FOR GLOBAL IDENTIFICADOR IGUAL IGUAL_IGUAL IN INCREMENTO INT INT_TYPE IR LAMBDA LEFTSHIFT_EQUAL LET LLAVE_DER LLAVE_IZQ MAYOR_O_IGUAL_QUE MAYOR_QUE MENOR_O_IGUAL_QUE MENOR_QUE MODULO MODULO_DE MULTIPLICACION MULTIPLICADO_POR NEGACION NEW NOR NO_IGUAL NULL NULL_EQUAL NULL_VAL OBJECT ON OP_TERNARIO OR ORDERBY OR_EQUAL PAR_DER PAR_IZQ PRIVATE PROTECTED PUBLIC PUNTO PUSH RESTA RETURN RIGHTSHIFT_EQUAL SHIFT_MAYOR SHIFT_MENOR SIMPLE_AND SIMPLE_OR STACK STRING STRING_TYPE STRUCT SUMA SWITCH THIS TO_UPPER TYPEOF VAR VOID WHEN WHERE WHILEvalor : FLOAT\n            | DOUBLE\n            | STRING\n            | INT\n            | BOOL\n            | CHAR\n            | IDENTIFICADOR'
    
_lr_action_items = {'FLOAT':([0,],[2,]),'DOUBLE':([0,],[3,]),'STRING':([0,],[4,]),'INT':([0,],[5,]),'BOOL':([0,],[6,]),'CHAR':([0,],[7,]),'IDENTIFICADOR':([0,],[8,]),'$end':([1,2,3,4,5,6,7,8,],[0,-1,-2,-3,-4,-5,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'valor':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> valor","S'",1,None,None,None),
  ('valor -> FLOAT','valor',1,'p_valor','main.py',21),
  ('valor -> DOUBLE','valor',1,'p_valor','main.py',22),
  ('valor -> STRING','valor',1,'p_valor','main.py',23),
  ('valor -> INT','valor',1,'p_valor','main.py',24),
  ('valor -> BOOL','valor',1,'p_valor','main.py',25),
  ('valor -> CHAR','valor',1,'p_valor','main.py',26),
  ('valor -> IDENTIFICADOR','valor',1,'p_valor','main.py',27),
]
